
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '10035C958E57D2416BEF25CC795368E7'
    
_lr_action_items = {'CLT':([41,42,43,44,45,46,47,48,58,62,63,73,88,90,92,96,98,127,147,148,172,173,177,],[-123,-59,-67,-65,-63,65,-64,-49,-54,-56,-123,-123,-55,-70,-66,-48,-51,-67,-50,-62,-68,-69,-60,]),'LSQUARE':([15,21,43,63,127,],[-12,28,-67,89,-67,]),'PCOLOR':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,102,-113,-120,-119,102,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'/':([41,42,43,44,45,47,63,90,92,127,148,172,173,177,],[61,-59,-67,-65,-63,-64,-123,-70,-66,-67,-62,-68,-69,-60,]),'SETP':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,113,-113,-120,-119,113,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'ROTATE':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,117,-113,-120,-119,117,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'ELSE':([161,221,226,],[-88,-85,231,]),'SEMICOLON':([15,16,21,29,30,36,37,40,41,42,43,44,45,46,47,48,49,50,58,62,63,66,72,73,77,78,88,90,92,93,96,98,99,101,108,110,111,116,122,123,124,125,127,129,131,139,146,147,148,168,172,173,177,179,181,183,186,188,193,199,201,202,203,206,207,209,219,220,222,225,227,],[-12,24,-123,-123,-14,-11,-16,-13,-123,-59,-67,-65,-63,-123,-64,-49,-15,-123,-54,-56,-123,-38,-40,-123,-33,-35,-55,-70,-66,-47,-48,-51,-34,-98,154,-96,-97,-101,-102,-100,-99,-95,-67,-93,-94,169,-39,-50,-62,195,-68,-69,-60,-107,-106,-112,-108,-77,207,-111,-103,-104,212,215,-32,217,-109,-78,-105,228,-110,]),'CGE':([41,42,43,44,45,46,47,48,58,62,63,73,88,90,92,96,98,127,147,148,172,173,177,],[-123,-59,-67,-65,-63,71,-64,-49,-54,-56,-123,-123,-55,-70,-66,-48,-51,-67,-50,-62,-68,-69,-60,]),'=':([15,21,29,30,40,127,189,],[-12,-123,35,-14,-13,165,165,]),'CSTSTRING':([14,23,24,31,35,51,59,60,61,64,65,67,68,69,70,71,74,75,76,79,81,89,91,94,95,97,104,109,130,132,133,134,136,137,138,149,151,153,154,156,157,159,161,162,163,164,165,167,169,174,180,194,195,198,200,205,207,212,215,217,218,221,226,229,230,233,],[-7,-8,-10,-9,44,-61,-57,44,-58,-45,-44,-42,-46,44,-41,-43,-37,-36,44,44,44,44,44,44,-52,-53,-113,-120,-119,44,-117,-118,-116,44,-114,44,-82,44,-115,44,44,44,-88,44,44,44,44,-80,-121,44,-74,44,-122,44,44,44,-32,44,-92,-91,44,-85,-123,-83,-87,-86,]),'$end':([7,25,80,161,],[0,-1,-27,-88,]),'-':([41,42,43,44,45,47,48,58,62,63,73,88,90,92,127,148,172,173,177,],[-123,-59,-67,-65,-63,-64,-49,-54,-56,-123,97,-55,-70,-66,-67,-62,-68,-69,-60,]),'HOME':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,106,-113,-120,-119,106,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'PSIZE':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,107,-113,-120,-119,107,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'CGT':([41,42,43,44,45,46,47,48,58,62,63,73,88,90,92,96,98,127,147,148,172,173,177,],[-123,-59,-67,-65,-63,67,-64,-49,-54,-56,-123,-123,-55,-70,-66,-48,-51,-67,-50,-62,-68,-69,-60,]),'MAIN':([0,2,5,9,10,12,13,14,17,18,20,23,24,31,85,161,171,],[-123,-123,-123,-4,-2,-6,-123,-7,-3,26,-5,-8,-10,-9,-17,-88,-21,]),'FOR':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,118,-113,-120,-119,118,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'CLE':([41,42,43,44,45,46,47,48,58,62,63,73,88,90,92,96,98,127,147,148,172,173,177,],[-123,-59,-67,-65,-63,64,-64,-49,-54,-56,-123,-123,-55,-70,-66,-48,-51,-67,-50,-62,-68,-69,-60,]),'PCLEAR':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,112,-113,-120,-119,112,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'PDOWN':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,103,-113,-120,-119,103,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'MOVE':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,114,-113,-120,-119,114,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'PUP':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,115,-113,-120,-119,115,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),')':([38,39,41,42,43,44,45,46,47,48,50,53,54,55,56,58,62,63,66,72,73,77,78,83,84,87,88,90,92,93,96,98,99,100,141,144,145,146,147,148,150,152,155,158,172,173,175,176,177,182,185,187,190,192,196,197,207,208,211,214,216,224,232,234,],[52,-123,-123,-59,-67,-65,-63,-123,-64,-49,-123,-123,-19,-20,86,-54,-56,-123,-38,-40,-123,-33,-35,-23,-25,-26,-55,-70,-66,-47,-48,-51,-34,148,-24,173,-123,-39,-50,-62,179,181,183,186,-68,-69,-73,-71,-60,199,201,202,204,206,209,-72,-32,-81,219,222,223,227,-79,235,]),'OR':([41,42,43,44,45,46,47,48,50,58,62,63,66,72,73,88,90,92,93,96,98,127,146,147,148,172,173,177,],[-123,-59,-67,-65,-63,-123,-64,-49,74,-54,-56,-123,-38,-40,-123,-55,-70,-66,-47,-48,-51,-67,-39,-50,-62,-68,-69,-60,]),'RBRACKET':([14,23,24,31,81,104,109,119,128,130,132,133,134,136,138,151,154,161,166,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,-123,-113,-120,161,-90,-119,-123,-117,-118,-116,-114,-82,-115,-88,-89,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'+':([41,42,43,44,45,47,48,58,62,63,73,88,90,92,127,148,172,173,177,],[-123,-59,-67,-65,-63,-64,-49,-54,-56,-123,95,-55,-70,-66,-67,-62,-68,-69,-60,]),'IF':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,120,-113,-120,-119,120,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'FUNC':([0,2,5,9,13,14,17,23,24,31,85,161,171,],[-123,11,-123,-4,11,-7,-3,-8,-10,-9,-17,-88,-21,]),'(':([14,23,24,27,31,32,33,35,43,51,59,60,61,63,64,65,67,68,69,70,71,74,75,76,79,81,89,91,94,95,97,102,103,104,106,107,109,112,113,114,115,117,118,120,121,126,127,130,132,133,134,135,136,137,138,140,149,151,153,154,156,157,159,161,162,163,164,165,167,169,174,180,194,195,198,200,205,207,212,215,217,218,221,226,229,230,233,],[-7,-8,-10,-18,-9,38,39,51,-67,-61,-57,51,-58,91,-45,-44,-42,-46,51,-41,-43,-37,-36,51,51,51,51,51,51,-52,-53,149,150,-113,152,153,-120,155,156,157,158,159,160,162,163,164,-67,-119,51,-117,-118,167,-116,51,-114,170,51,-82,51,-115,51,51,51,-88,51,51,51,51,-80,-121,51,-74,51,-122,51,51,51,-32,51,-92,-91,51,-85,-123,-83,-87,-86,]),'ARC':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,121,-113,-120,-119,121,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'PRINT':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,126,-113,-120,-119,126,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'AND':([41,42,43,44,45,46,47,48,50,58,62,63,66,72,73,88,90,92,93,96,98,127,146,147,148,172,173,177,],[-123,-59,-67,-65,-63,-123,-64,-49,75,-54,-56,-123,-38,-40,-123,-55,-70,-66,-47,-48,-51,-67,-39,-50,-62,-68,-69,-60,]),'CNE':([41,42,43,44,45,46,47,48,58,62,63,73,88,90,92,96,98,127,147,148,172,173,177,],[-123,-59,-67,-65,-63,68,-64,-49,-54,-56,-123,-123,-55,-70,-66,-48,-51,-67,-50,-62,-68,-69,-60,]),'CSTDOUBLE':([14,23,24,31,35,51,59,60,61,64,65,67,68,69,70,71,74,75,76,79,81,89,91,94,95,97,104,109,130,132,133,134,136,137,138,149,151,153,154,156,157,159,161,162,163,164,165,167,169,174,180,194,195,198,200,205,207,212,215,217,218,221,226,229,230,233,],[-7,-8,-10,-9,45,-61,-57,45,-58,-45,-44,-42,-46,45,-41,-43,-37,-36,45,45,45,45,45,45,-52,-53,-113,-120,-119,45,-117,-118,-116,45,-114,45,-82,45,-115,45,45,45,-88,45,45,45,45,-80,-121,45,-74,45,-122,45,45,45,-32,45,-92,-91,45,-85,-123,-83,-87,-86,]),'ID':([1,3,4,6,8,14,19,22,23,24,31,35,51,57,59,60,61,64,65,67,68,69,70,71,74,75,76,79,81,89,91,94,95,97,104,109,130,132,133,134,136,137,138,149,151,153,154,156,157,159,160,161,162,163,164,165,167,169,170,174,180,194,195,198,200,205,207,212,215,217,218,221,226,228,229,230,233,],[-30,-31,15,-28,-29,-7,27,15,-8,-10,-9,43,-61,87,-57,43,-58,-45,-44,-42,-46,43,-41,-43,-37,-36,43,43,127,43,43,43,-52,-53,-113,-120,-119,127,-117,-118,-116,43,-114,43,-82,43,-115,43,43,43,189,-88,43,43,43,43,-80,-121,196,43,-74,43,-122,43,43,43,-32,43,-92,-91,43,-85,-123,189,-83,-87,-86,]),'VOID':([0,5,11,14,23,24,31,39,81,82,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[3,3,3,-7,-8,-10,-9,3,3,3,-113,-120,-119,3,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'SCAN':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,140,-113,-120,-119,140,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'DOUBLE':([0,5,11,14,23,24,31,39,81,82,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[8,8,8,-7,-8,-10,-9,8,8,8,-113,-120,-119,8,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'CEQ':([41,42,43,44,45,46,47,48,58,62,63,73,88,90,92,96,98,127,147,148,172,173,177,],[-123,-59,-67,-65,-63,70,-64,-49,-54,-56,-123,-123,-55,-70,-66,-48,-51,-67,-50,-62,-68,-69,-60,]),'LBRACKET':([52,86,105,142,204,213,223,231,235,],[81,-22,81,81,-84,81,-76,81,-75,]),'COMMA':([15,16,21,29,30,36,37,40,41,42,43,44,45,46,47,48,49,50,53,58,62,63,66,72,73,77,78,87,88,90,92,93,96,98,99,145,146,147,148,172,173,177,178,184,191,210,],[-12,22,-123,-123,-14,-11,-16,-13,-123,-59,-67,-65,-63,-123,-64,-49,-15,-123,82,-54,-56,-123,-38,-40,-123,-33,-35,-26,-55,-70,-66,-47,-48,-51,-34,174,-39,-50,-62,-68,-69,-60,198,200,205,218,]),'STRING':([0,5,11,14,23,24,31,39,81,82,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[1,1,1,-7,-8,-10,-9,1,1,1,-113,-120,-119,1,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'CSTINT':([14,23,24,28,31,35,51,59,60,61,64,65,67,68,69,70,71,74,75,76,79,81,89,91,94,95,97,104,109,130,132,133,134,136,137,138,149,151,153,154,156,157,159,161,162,163,164,165,167,169,174,180,194,195,198,200,205,207,212,215,217,218,221,226,229,230,233,],[-7,-8,-10,34,-9,47,-61,-57,47,-58,-45,-44,-42,-46,47,-41,-43,-37,-36,47,47,47,47,47,47,-52,-53,-113,-120,-119,47,-117,-118,-116,47,-114,47,-82,47,-115,47,47,47,-88,47,47,47,47,-80,-121,47,-74,47,-122,47,47,47,-32,47,-92,-91,47,-85,-123,-83,-87,-86,]),'*':([41,42,43,44,45,47,63,90,92,127,148,172,173,177,],[59,-59,-67,-65,-63,-64,-123,-70,-66,-67,-62,-68,-69,-60,]),'WHILE':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,135,-113,-120,-119,135,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'CHEESE':([26,],[32,]),'RETURN':([14,23,24,31,81,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[-7,-8,-10,-9,137,-113,-120,-119,137,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'INT':([0,5,11,14,23,24,31,39,81,82,104,109,130,132,133,134,136,138,151,154,161,169,180,195,207,215,217,221,226,229,230,233,],[6,6,6,-7,-8,-10,-9,6,6,6,-113,-120,-119,6,-117,-118,-116,-114,-82,-115,-88,-121,-74,-122,-32,-92,-91,-85,-123,-83,-87,-86,]),'RSQUARE':([34,41,42,43,44,45,46,47,48,50,58,62,63,66,72,73,77,78,88,90,92,93,96,98,99,143,146,147,148,172,173,177,],[40,-123,-59,-67,-65,-63,-123,-64,-49,-123,-54,-56,-123,-38,-40,-123,-33,-35,-55,-70,-66,-47,-48,-51,-34,172,-39,-50,-62,-68,-69,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'move':([81,132,],[129,129,]),'term2':([41,],[58,]),'parameter':([39,82,],[53,53,]),'seen_comp':([93,],[146,]),'cst_expression4':([145,],[176,]),'cst_expression':([35,60,69,76,79,81,89,91,94,132,137,149,153,156,157,159,162,163,164,165,174,194,198,200,205,212,218,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'parameter_list':([39,82,],[54,141,]),'type':([0,5,11,39,81,82,132,],[4,4,19,57,4,57,4,]),'variable_declaration':([0,5,81,132,],[5,5,104,104,]),'pup':([81,132,],[101,101,]),'variable_declarator2':([21,],[29,]),'method_declaration2':([39,],[56,]),'if_statement':([81,132,],[136,136,]),'variable_declaration2':([4,22,],[14,31,]),'seen_assignment1':([188,],[203,]),'read_statement':([81,132,],[109,109,]),'pcolor':([81,132,],[123,123,]),'pdown':([81,132,],[111,111,]),'main_ahead':([10,],[18,]),'seen_while_exp':([208,],[216,]),'variable_declaration3':([16,],[23,]),'variable_declarator3':([29,],[36,]),'term':([35,60,69,76,79,81,89,91,94,132,137,149,153,156,157,159,162,163,164,165,174,194,198,200,205,212,218,],[48,88,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'seen_loop_block':([151,],[180,]),'seen_function_id':([27,],[33,]),'block_statement2':([81,132,],[119,166,]),'seen_id_or_func':([43,127,],[63,63,]),'seen_while_LPAR':([167,],[194,]),'seen_id':([15,],[21,]),'pclear':([81,132,],[122,122,]),'geomOp':([41,],[60,]),'home':([81,132,],[110,110,]),'expression':([35,76,79,81,89,91,132,137,149,153,156,157,159,162,163,164,165,174,194,198,200,205,212,218,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'seen_condition_block':([221,],[226,]),'seen_term':([48,],[73,]),'arc':([81,132,],[125,125,]),'compare':([46,],[66,]),'method_declaration3':([56,],[85,]),'seen_for_exp':([220,],[225,]),'variable_assignment':([81,132,160,228,],[138,138,188,232,]),'loophead':([81,132,],[105,105,]),'factor':([35,60,69,76,79,81,89,91,94,132,137,149,153,156,157,159,162,163,164,165,174,194,198,200,205,212,218,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'seen_assignment2':([232,],[234,]),'block_statement':([52,105,142,213,231,],[80,151,171,221,233,]),'empty':([0,2,5,13,21,29,39,41,46,50,53,63,73,81,132,145,226,],[9,12,9,12,30,37,55,62,72,78,84,90,98,128,128,175,230,]),'if_statement2':([226,],[229,]),'arithOp':([73,],[94,]),'seen_lpar':([51,],[79,]),'print_statement':([81,132,],[130,130,]),'seen_condition':([204,],[213,]),'compare_symbols':([46,],[69,]),'rotate':([81,132,],[131,131,]),'program2':([0,5,],[2,17,]),'loop_statement':([81,132,],[133,133,]),'statement':([81,132,],[132,132,]),'parameter_list2':([53,],[83,]),'return':([81,132,],[134,134,]),'numeric_expression':([35,69,76,79,81,89,91,94,132,137,149,153,156,157,159,162,163,164,165,174,194,198,200,205,212,218,],[46,93,46,46,46,46,46,147,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'main_method':([18,],[25,]),'setp':([81,132,],[124,124,]),'andor':([50,],[76,]),'program3':([2,13,],[10,20,]),'superexpression':([35,76,79,81,89,91,132,137,149,153,156,157,159,162,163,164,165,174,194,198,200,205,212,218,],[49,99,100,108,143,145,108,168,178,182,184,185,187,190,191,192,193,145,208,210,211,214,220,224,]),'cst_expression3':([91,174,],[144,197,]),'seen_rpar':([148,],[177,]),'numeric_expression2':([73,],[96,]),'method_declaration':([2,13,],[13,13,]),'program':([0,],[7,]),'psize':([81,132,],[116,116,]),'geometry_statement':([81,132,],[139,139,]),'seen_method_start':([86,],[142,]),'superexpression2':([50,],[77,]),'variable_declarator':([4,22,],[16,16,]),'cst_expression2':([63,],[92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program2 program3 main_ahead main_method','program',4,'p_program','parser.py',27),
  ('main_ahead -> <empty>','main_ahead',0,'p_main_ahead','parser.py',32),
  ('program2 -> variable_declaration program2','program2',2,'p_program2','parser.py',39),
  ('program2 -> empty','program2',1,'p_program2','parser.py',40),
  ('program3 -> method_declaration program3','program3',2,'p_program3','parser.py',43),
  ('program3 -> empty','program3',1,'p_program3','parser.py',44),
  ('variable_declaration -> type variable_declaration2','variable_declaration',2,'p_variable_declaration','parser.py',47),
  ('variable_declaration2 -> variable_declarator variable_declaration3','variable_declaration2',2,'p_variable_declaration2','parser.py',50),
  ('variable_declaration3 -> COMMA variable_declaration2','variable_declaration3',2,'p_variable_declaration3','parser.py',53),
  ('variable_declaration3 -> SEMICOLON','variable_declaration3',1,'p_variable_declaration3','parser.py',54),
  ('variable_declarator -> ID seen_id variable_declarator2 variable_declarator3','variable_declarator',4,'p_variable_declarator','parser.py',57),
  ('seen_id -> <empty>','seen_id',0,'p_seen_id','parser.py',61),
  ('variable_declarator2 -> LSQUARE CSTINT RSQUARE','variable_declarator2',3,'p_variable_declarator2','parser.py',64),
  ('variable_declarator2 -> empty','variable_declarator2',1,'p_variable_declarator2','parser.py',65),
  ('variable_declarator3 -> = superexpression','variable_declarator3',2,'p_variable_declarator3','parser.py',73),
  ('variable_declarator3 -> empty','variable_declarator3',1,'p_variable_declarator3','parser.py',74),
  ('method_declaration -> FUNC type ID seen_function_id ( method_declaration2 method_declaration3','method_declaration',7,'p_method_declaration','parser.py',77),
  ('seen_function_id -> <empty>','seen_function_id',0,'p_seen_function_id','parser.py',83),
  ('method_declaration2 -> parameter_list','method_declaration2',1,'p_method_declaration2','parser.py',92),
  ('method_declaration2 -> empty','method_declaration2',1,'p_method_declaration2','parser.py',93),
  ('method_declaration3 -> ) seen_method_start block_statement','method_declaration3',3,'p_method_declaration3','parser.py',96),
  ('seen_method_start -> <empty>','seen_method_start',0,'p_seen_method_start','parser.py',99),
  ('parameter_list -> parameter parameter_list2','parameter_list',2,'p_parameter_list','parser.py',104),
  ('parameter_list2 -> COMMA parameter_list','parameter_list2',2,'p_parameter_list','parser.py',105),
  ('parameter_list2 -> empty','parameter_list2',1,'p_parameter_list','parser.py',106),
  ('parameter -> type ID','parameter',2,'p_parameter','parser.py',109),
  ('main_method -> MAIN CHEESE ( ) block_statement','main_method',5,'p_main_method','parser.py',116),
  ('type -> INT','type',1,'p_type','parser.py',119),
  ('type -> DOUBLE','type',1,'p_type','parser.py',120),
  ('type -> STRING','type',1,'p_type','parser.py',121),
  ('type -> VOID','type',1,'p_type','parser.py',122),
  ('variable_assignment -> ID = superexpression SEMICOLON','variable_assignment',4,'p_variable_assignment','parser.py',128),
  ('superexpression -> expression superexpression2','superexpression',2,'p_superexpression','parser.py',147),
  ('superexpression2 -> andor superexpression','superexpression2',2,'p_superexpression2','parser.py',150),
  ('superexpression2 -> empty','superexpression2',1,'p_superexpression2','parser.py',151),
  ('andor -> AND','andor',1,'p_andor','parser.py',154),
  ('andor -> OR','andor',1,'p_andor','parser.py',155),
  ('expression -> numeric_expression compare','expression',2,'p_expression','parser.py',160),
  ('compare -> compare_symbols numeric_expression seen_comp','compare',3,'p_compare','parser.py',182),
  ('compare -> empty','compare',1,'p_compare','parser.py',183),
  ('compare_symbols -> CEQ','compare_symbols',1,'p_compare_symbols','parser.py',186),
  ('compare_symbols -> CGT','compare_symbols',1,'p_compare_symbols','parser.py',187),
  ('compare_symbols -> CGE','compare_symbols',1,'p_compare_symbols','parser.py',188),
  ('compare_symbols -> CLT','compare_symbols',1,'p_compare_symbols','parser.py',189),
  ('compare_symbols -> CLE','compare_symbols',1,'p_compare_symbols','parser.py',190),
  ('compare_symbols -> CNE','compare_symbols',1,'p_compare_symbols','parser.py',191),
  ('seen_comp -> <empty>','seen_comp',0,'p_seen_comp','parser.py',196),
  ('numeric_expression -> term seen_term numeric_expression2','numeric_expression',3,'p_numeric_expression','parser.py',222),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',225),
  ('numeric_expression2 -> arithOp numeric_expression','numeric_expression2',2,'p_numeric_expression2','parser.py',250),
  ('numeric_expression2 -> empty','numeric_expression2',1,'p_numeric_expression2','parser.py',251),
  ('arithOp -> +','arithOp',1,'p_arithOp','parser.py',254),
  ('arithOp -> -','arithOp',1,'p_arithOp','parser.py',255),
  ('term -> factor term2','term',2,'p_term','parser.py',260),
  ('term2 -> geomOp term','term2',2,'p_term2','parser.py',263),
  ('term2 -> empty','term2',1,'p_term2','parser.py',264),
  ('geomOp -> *','geomOp',1,'p_geomOp','parser.py',267),
  ('geomOp -> /','geomOp',1,'p_geomOp','parser.py',268),
  ('factor -> cst_expression','factor',1,'p_factor','parser.py',273),
  ('factor -> ( seen_lpar superexpression ) seen_rpar','factor',5,'p_factor','parser.py',274),
  ('seen_lpar -> <empty>','seen_lpar',0,'p_seen_lpar','parser.py',300),
  ('seen_rpar -> <empty>','seen_rpar',0,'p_seen_rpar','parser.py',305),
  ('cst_expression -> CSTDOUBLE','cst_expression',1,'p_cst_expression','parser.py',310),
  ('cst_expression -> CSTINT','cst_expression',1,'p_cst_expression','parser.py',311),
  ('cst_expression -> CSTSTRING','cst_expression',1,'p_cst_expression','parser.py',312),
  ('cst_expression -> ID seen_id_or_func cst_expression2','cst_expression',3,'p_cst_expression','parser.py',313),
  ('seen_id_or_func -> <empty>','seen_id_or_func',0,'p_seen_id_or_func','parser.py',327),
  ('cst_expression2 -> LSQUARE superexpression RSQUARE','cst_expression2',3,'p_cst_expression2','parser.py',333),
  ('cst_expression2 -> ( cst_expression3 )','cst_expression2',3,'p_cst_expression2','parser.py',334),
  ('cst_expression2 -> empty','cst_expression2',1,'p_cst_expression2','parser.py',335),
  ('cst_expression3 -> superexpression cst_expression4','cst_expression3',2,'p_cst_expression3','parser.py',353),
  ('cst_expression4 -> COMMA cst_expression3','cst_expression4',2,'p_cst_expression4','parser.py',356),
  ('cst_expression4 -> empty','cst_expression4',1,'p_cst_expression4','parser.py',357),
  ('loop_statement -> loophead block_statement seen_loop_block','loop_statement',3,'p_loop_statement','parser.py',360),
  ('loophead -> FOR ( variable_assignment seen_assignment1 SEMICOLON superexpression seen_for_exp SEMICOLON variable_assignment seen_assignment2 )','loophead',11,'p_loophead','parser.py',366),
  ('loophead -> WHILE ( seen_while_LPAR superexpression seen_while_exp )','loophead',6,'p_loophead','parser.py',367),
  ('seen_assignment1 -> <empty>','seen_assignment1',0,'p_seen_assignment1','parser.py',370),
  ('seen_for_exp -> <empty>','seen_for_exp',0,'p_seen_for_exp','parser.py',375),
  ('seen_assignment2 -> <empty>','seen_assignment2',0,'p_seen_assignment2','parser.py',396),
  ('seen_while_LPAR -> <empty>','seen_while_LPAR',0,'p_seen_while_LPAR','parser.py',407),
  ('seen_while_exp -> <empty>','seen_while_exp',0,'p_seen_while_exp','parser.py',412),
  ('seen_loop_block -> <empty>','seen_loop_block',0,'p_seen_loop_block','parser.py',426),
  ('if_statement -> IF ( superexpression ) seen_condition block_statement seen_condition_block if_statement2','if_statement',8,'p_if_statement','parser.py',432),
  ('seen_condition -> <empty>','seen_condition',0,'p_seen_condition','parser.py',438),
  ('seen_condition_block -> <empty>','seen_condition_block',0,'p_seen_condition_block','parser.py',450),
  ('if_statement2 -> ELSE block_statement','if_statement2',2,'p_if_statement2','parser.py',458),
  ('if_statement2 -> empty','if_statement2',1,'p_if_statement2','parser.py',459),
  ('block_statement -> LBRACKET block_statement2 RBRACKET','block_statement',3,'p_block_statement','parser.py',462),
  ('block_statement2 -> statement block_statement2','block_statement2',2,'p_block_statement','parser.py',463),
  ('block_statement2 -> empty','block_statement2',1,'p_block_statement','parser.py',464),
  ('read_statement -> SCAN ( ID ) SEMICOLON','read_statement',5,'p_read_statement','parser.py',467),
  ('print_statement -> PRINT ( superexpression ) SEMICOLON','print_statement',5,'p_print_statement','parser.py',478),
  ('geometry_statement -> move','geometry_statement',1,'p_geometry_statement','parser.py',484),
  ('geometry_statement -> rotate','geometry_statement',1,'p_geometry_statement','parser.py',485),
  ('geometry_statement -> arc','geometry_statement',1,'p_geometry_statement','parser.py',486),
  ('geometry_statement -> home','geometry_statement',1,'p_geometry_statement','parser.py',487),
  ('geometry_statement -> pdown','geometry_statement',1,'p_geometry_statement','parser.py',488),
  ('geometry_statement -> pup','geometry_statement',1,'p_geometry_statement','parser.py',489),
  ('geometry_statement -> setp','geometry_statement',1,'p_geometry_statement','parser.py',490),
  ('geometry_statement -> pcolor','geometry_statement',1,'p_geometry_statement','parser.py',491),
  ('geometry_statement -> psize','geometry_statement',1,'p_geometry_statement','parser.py',492),
  ('geometry_statement -> pclear','geometry_statement',1,'p_geometry_statement','parser.py',493),
  ('move -> MOVE ( superexpression )','move',4,'p_move','parser.py',496),
  ('rotate -> ROTATE ( superexpression )','rotate',4,'p_rotate','parser.py',507),
  ('arc -> ARC ( superexpression COMMA superexpression )','arc',6,'p_arc','parser.py',518),
  ('home -> HOME ( )','home',3,'p_home','parser.py',530),
  ('pdown -> PDOWN ( )','pdown',3,'p_pdown','parser.py',535),
  ('pup -> PUP ( )','pup',3,'p_pup','parser.py',540),
  ('setp -> SETP ( superexpression COMMA superexpression )','setp',6,'p_setp','parser.py',545),
  ('pcolor -> PCOLOR ( superexpression COMMA superexpression COMMA superexpression )','pcolor',8,'p_pcolor','parser.py',557),
  ('psize -> PSIZE ( superexpression )','psize',4,'p_psize','parser.py',570),
  ('pclear -> PCLEAR ( )','pclear',3,'p_pclear','parser.py',581),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',586),
  ('statement -> variable_assignment','statement',1,'p_statement','parser.py',587),
  ('statement -> superexpression SEMICOLON','statement',2,'p_statement','parser.py',588),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',589),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',590),
  ('statement -> return','statement',1,'p_statement','parser.py',591),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',592),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',593),
  ('statement -> geometry_statement SEMICOLON','statement',2,'p_statement','parser.py',594),
  ('return -> RETURN superexpression SEMICOLON','return',3,'p_return','parser.py',597),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',610),
]
