
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'EE321DA59B8AD46CAFFBDD6C560F4EF5'
    
_lr_action_items = {'PUP':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,102,-125,-127,102,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'+':([41,42,43,44,46,48,49,58,59,74,75,93,94,95,100,112,148,180,201,202,216,],[-51,-67,-61,-69,-65,-66,-132,91,-132,-58,-56,-72,-71,-68,-57,-69,-64,-62,-74,-75,-70,]),'SEMICOLON':([15,17,21,29,30,35,36,40,41,42,43,44,45,46,47,48,49,51,58,59,60,61,70,73,74,75,88,89,93,94,95,98,99,100,103,106,108,112,114,117,122,125,127,129,134,138,139,141,144,147,148,151,156,180,181,185,188,189,196,200,201,202,205,209,210,212,213,215,216,230,231,236,237,242,243,],[-12,24,-132,-132,-14,-16,-11,-13,-51,-67,-61,-69,-132,-65,-132,-66,-132,-15,-132,-132,-42,-40,-37,-35,-58,-56,-53,-50,-72,-71,-68,-49,-36,-57,150,-110,-107,-69,-106,-104,-108,-105,-109,167,170,-102,-103,-111,-52,-41,-64,182,-32,-62,-117,-86,-33,-116,-121,-115,-74,-75,221,-120,-113,-112,226,228,-70,-118,-87,-114,241,-119,-34,]),'/':([42,43,44,46,48,49,59,93,94,95,112,148,180,201,202,216,],[-67,-61,-69,-65,-66,77,-132,-72,-71,-68,-69,-64,-62,-74,-75,-70,]),'CSTSTRING':([16,23,24,31,37,50,62,63,64,65,66,67,68,69,71,72,76,77,78,79,80,90,91,92,96,104,105,107,118,121,131,132,137,145,146,150,152,154,155,157,159,160,162,163,164,165,166,167,169,170,171,182,187,192,194,204,206,214,219,221,226,228,232,234,239,240,244,246,248,],[-7,-8,-10,-9,42,-63,-44,-48,42,-47,-46,-45,-43,-38,42,-39,-59,-60,42,42,42,42,-54,-55,-73,42,-125,-127,42,-122,-128,-129,-126,42,42,-124,42,42,-73,42,42,42,-91,42,-97,-89,42,-130,42,-123,42,-131,42,-83,42,42,42,42,42,42,-101,-100,42,-94,42,-132,-96,-92,-95,]),'RETURN':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,104,-125,-127,104,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'MAIN':([0,1,2,7,10,11,12,14,16,18,19,23,24,31,86,164,174,],[-132,-4,-132,-132,-6,-2,-132,-3,-7,26,-5,-8,-10,-9,-17,-97,-21,]),'RBRACKET':([16,23,24,31,80,105,107,118,121,123,124,131,132,137,150,161,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,-132,-125,-127,-132,-122,164,-99,-128,-129,-126,-124,-98,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'ELSE':([164,234,240,],[-97,-94,245,]),'=':([15,21,29,30,40,112,184,223,233,],[-12,-132,37,-14,-13,157,157,-74,239,]),'*':([42,43,44,46,48,49,59,93,94,95,112,148,180,201,202,216,],[-67,-61,-69,-65,-66,76,-132,-72,-71,-68,-69,-64,-62,-74,-75,-70,]),'PCLEAR':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,130,-125,-127,130,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'SETP':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,109,-125,-127,109,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'FOR':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,110,-125,-127,110,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'PCOLOR':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,111,-125,-127,111,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'ID':([4,5,6,8,9,16,20,22,23,24,31,37,50,55,62,63,64,65,66,67,68,69,71,72,76,77,78,79,80,90,91,92,96,104,105,107,118,121,131,132,137,145,146,150,152,153,154,155,157,159,160,162,163,164,165,166,167,169,170,171,172,182,187,192,194,204,206,214,219,221,226,228,232,234,239,240,241,244,246,248,],[-28,-29,-31,-30,15,-7,27,15,-8,-10,-9,44,-63,82,-44,-48,44,-47,-46,-45,-43,-38,44,-39,-59,-60,44,44,112,44,-54,-55,-73,44,-125,-127,112,-122,-128,-129,-126,44,44,-124,44,184,44,-73,44,44,44,-91,44,-97,-89,44,-130,44,-123,44,199,-131,44,-83,44,44,44,44,44,44,-101,-100,44,-94,44,-132,184,-96,-92,-95,]),'PDOWN':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,113,-125,-127,113,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'CLT':([41,42,43,44,45,46,48,49,58,59,74,75,88,89,93,94,95,100,112,144,148,180,201,202,216,],[-51,-67,-61,-69,66,-65,-66,-132,-132,-132,-58,-56,-53,-50,-72,-71,-68,-57,-69,-52,-64,-62,-74,-75,-70,]),'LBRACKET':([52,87,119,143,208,224,235,245,250,],[80,-22,80,80,-93,80,-85,80,-84,]),'CHEESE':([26,],[32,]),'$end':([3,25,81,164,],[0,-1,-27,-97,]),'IF':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,115,-125,-127,115,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'CSTDOUBLE':([16,23,24,31,37,50,62,63,64,65,66,67,68,69,71,72,76,77,78,79,80,90,91,92,96,104,105,107,118,121,131,132,137,145,146,150,152,154,155,157,159,160,162,163,164,165,166,167,169,170,171,182,187,192,194,204,206,214,219,221,226,228,232,234,239,240,244,246,248,],[-7,-8,-10,-9,46,-63,-44,-48,46,-47,-46,-45,-43,-38,46,-39,-59,-60,46,46,46,46,-54,-55,-73,46,-125,-127,46,-122,-128,-129,-126,46,46,-124,46,46,-73,46,46,46,-91,46,-97,-89,46,-130,46,-123,46,-131,46,-83,46,46,46,46,46,46,-101,-100,46,-94,46,-132,-96,-92,-95,]),'WHILE':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,126,-125,-127,126,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'ROTATE':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,120,-125,-127,120,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'CLE':([41,42,43,44,45,46,48,49,58,59,74,75,88,89,93,94,95,100,112,144,148,180,201,202,216,],[-51,-67,-61,-69,65,-65,-66,-132,-132,-132,-58,-56,-53,-50,-72,-71,-68,-57,-69,-52,-64,-62,-74,-75,-70,]),'OR':([41,42,43,44,45,46,47,48,49,58,59,60,61,74,75,88,89,93,94,95,98,100,112,144,147,148,180,201,202,216,],[-51,-67,-61,-69,-132,-65,72,-66,-132,-132,-132,-42,-40,-58,-56,-53,-50,-72,-71,-68,-49,-57,-69,-52,-41,-64,-62,-74,-75,-70,]),'CSTINT':([16,23,24,28,31,37,50,62,63,64,65,66,67,68,69,71,72,76,77,78,79,80,90,91,92,96,104,105,107,118,121,131,132,137,145,146,150,152,154,155,157,159,160,162,163,164,165,166,167,169,170,171,182,187,192,194,204,206,214,219,221,226,228,232,234,239,240,244,246,248,],[-7,-8,-10,34,-9,48,-63,-44,-48,48,-47,-46,-45,-43,-38,48,-39,-59,-60,48,48,48,48,-54,-55,-73,48,-125,-127,48,-122,-128,-129,-126,48,48,-124,48,48,-73,48,48,48,-91,48,-97,-89,48,-130,48,-123,48,-131,48,-83,48,48,48,48,48,48,-101,-100,48,-94,48,-132,-96,-92,-95,]),'PSIZE':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,116,-125,-127,116,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),')':([38,39,41,42,43,44,45,46,47,48,49,53,54,56,57,58,59,60,61,70,73,74,75,82,83,85,88,89,93,94,95,98,99,100,101,142,144,146,147,148,149,156,158,168,173,176,177,178,179,180,188,190,191,193,195,197,199,201,202,203,211,216,217,218,220,225,227,229,238,243,247,249,],[52,-132,-51,-67,-61,-69,-132,-65,-132,-66,-132,-19,-20,-132,87,-132,-132,-42,-40,-37,-35,-58,-56,-26,-25,-23,-53,-50,-72,-71,-68,-49,-36,-57,148,-24,-52,-132,-41,-64,181,-32,189,196,200,-78,-77,202,-80,-62,-33,208,209,210,212,213,215,-74,-75,-132,-90,-70,-82,-79,230,235,236,-81,242,-34,-88,250,]),'-':([41,42,43,44,46,48,49,58,59,74,75,93,94,95,100,112,148,180,201,202,216,],[-51,-67,-61,-69,-65,-66,-132,92,-132,-58,-56,-72,-71,-68,-57,-69,-64,-62,-74,-75,-70,]),'VOID':([0,7,13,16,23,24,31,39,80,84,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[6,6,6,-7,-8,-10,-9,6,6,6,-125,-127,6,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'CEQ':([41,42,43,44,45,46,48,49,58,59,74,75,88,89,93,94,95,100,112,144,148,180,201,202,216,],[-51,-67,-61,-69,68,-65,-66,-132,-132,-132,-58,-56,-53,-50,-72,-71,-68,-57,-69,-52,-64,-62,-74,-75,-70,]),'RSQUARE':([34,41,42,43,44,45,46,47,48,49,58,59,60,61,70,73,74,75,88,89,93,94,95,98,99,100,144,147,148,175,180,201,202,207,216,],[40,-51,-67,-61,-69,-132,-65,-132,-66,-132,-132,-132,-42,-40,-37,-35,-58,-56,-53,-50,-72,-71,-68,-49,-36,-57,-52,-41,-64,201,-62,-74,-75,223,-70,]),'AND':([41,42,43,44,45,46,47,48,49,58,59,60,61,74,75,88,89,93,94,95,98,100,112,144,147,148,180,201,202,216,],[-51,-67,-61,-69,-132,-65,69,-66,-132,-132,-132,-42,-40,-58,-56,-53,-50,-72,-71,-68,-49,-57,-69,-52,-41,-64,-62,-74,-75,-70,]),'LSQUARE':([15,21,44,59,112,184,],[-12,28,-69,96,155,155,]),'DOUBLE':([0,7,13,16,23,24,31,39,80,84,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[5,5,5,-7,-8,-10,-9,5,5,5,-125,-127,5,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'PRINT':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,133,-125,-127,133,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'CGT':([41,42,43,44,45,46,48,49,58,59,74,75,88,89,93,94,95,100,112,144,148,180,201,202,216,],[-51,-67,-61,-69,62,-65,-66,-132,-132,-132,-58,-56,-53,-50,-72,-71,-68,-57,-69,-52,-64,-62,-74,-75,-70,]),'ARC':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,135,-125,-127,135,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'SCAN':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,136,-125,-127,136,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'CNE':([41,42,43,44,45,46,48,49,58,59,74,75,88,89,93,94,95,100,112,144,148,180,201,202,216,],[-51,-67,-61,-69,63,-65,-66,-132,-132,-132,-58,-56,-53,-50,-72,-71,-68,-57,-69,-52,-64,-62,-74,-75,-70,]),'INT':([0,7,13,16,23,24,31,39,80,84,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[4,4,4,-7,-8,-10,-9,4,4,4,-125,-127,4,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'COMMA':([15,17,21,29,30,35,36,40,41,42,43,44,45,46,47,48,49,51,56,58,59,60,61,70,73,74,75,82,88,89,93,94,95,98,99,100,144,147,148,179,180,183,186,198,201,202,203,216,222,],[-12,22,-132,-132,-14,-16,-11,-13,-51,-67,-61,-69,-132,-65,-132,-66,-132,-15,84,-132,-132,-42,-40,-37,-35,-58,-56,-26,-53,-50,-72,-71,-68,-49,-36,-57,-52,-41,-64,-80,-62,204,206,214,-74,-75,219,-70,232,]),'CGE':([41,42,43,44,45,46,48,49,58,59,74,75,88,89,93,94,95,100,112,144,148,180,201,202,216,],[-51,-67,-61,-69,67,-65,-66,-132,-132,-132,-58,-56,-53,-50,-72,-71,-68,-57,-69,-52,-64,-62,-74,-75,-70,]),'MOVE':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,128,-125,-127,128,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'HOME':([16,23,24,31,80,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[-7,-8,-10,-9,140,-125,-127,140,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'(':([16,23,24,27,31,32,33,37,44,50,59,62,63,64,65,66,67,68,69,71,72,76,77,78,79,80,90,91,92,96,97,102,104,105,107,109,110,111,112,113,115,116,118,120,121,126,128,130,131,132,133,135,136,137,140,145,146,150,152,154,155,157,159,160,162,163,164,165,166,167,169,170,171,182,187,192,194,204,206,214,219,221,226,228,232,234,239,240,244,246,248,],[-7,-8,-10,-18,-9,38,39,50,-69,-63,-76,-44,-48,50,-47,-46,-45,-43,-38,50,-39,-59,-60,50,50,50,50,-54,-55,-73,146,149,50,-125,-127,152,153,154,-69,158,159,160,50,163,-122,165,166,168,-128,-129,169,171,172,-126,173,50,50,-124,50,50,-73,50,50,50,-91,50,-97,-89,50,-130,50,-123,50,-131,50,-83,50,50,50,50,50,50,-101,-100,50,-94,50,-132,-96,-92,-95,]),'STRING':([0,7,13,16,23,24,31,39,80,84,105,107,118,121,131,132,137,150,162,164,167,170,182,192,226,228,234,240,244,246,248,],[8,8,8,-7,-8,-10,-9,8,8,8,-125,-127,8,-122,-128,-129,-126,-124,-91,-97,-130,-123,-131,-83,-101,-100,-94,-132,-96,-92,-95,]),'FUNC':([0,1,2,7,12,14,16,23,24,31,86,164,174,],[-132,-4,13,-132,13,-3,-7,-8,-10,-9,-17,-97,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([39,84,],[53,142,]),'seen_term':([41,],[58,]),'method_declaration3':([57,],[86,]),'function_call':([59,],[94,]),'print_statement':([80,118,],[131,131,]),'method_declaration2':([39,],[57,]),'main_ahead':([11,],[18,]),'superexpression':([37,71,79,80,104,118,145,152,154,157,159,160,163,166,169,171,187,194,204,206,214,221,232,239,],[51,99,101,103,151,103,175,183,186,188,190,191,193,195,197,198,207,211,220,222,227,231,238,243,]),'if_statement':([80,118,],[105,105,]),'psize':([80,118,],[106,106,]),'seen_arg':([179,],[203,]),'variable_declarator3':([29,],[36,]),'seen_assignment1':([185,],[205,]),'seen_while_LPAR':([165,],[194,]),'return':([80,118,],[107,107,]),'pup':([80,118,],[108,108,]),'cst_expression':([37,64,71,78,79,80,90,104,118,145,146,152,154,157,159,160,163,166,169,171,187,194,204,206,214,219,221,232,239,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'seen_comp':([98,],[147,]),'parameter':([39,84,],[56,56,]),'setp':([80,118,],[122,122,]),'term2':([49,],[75,]),'seen_loop_block':([162,],[192,]),'seen_LSQUARE':([96,155,],[145,187,]),'pdown':([80,118,],[114,114,]),'geomOp':([49,],[78,]),'superexpression2':([47,],[73,]),'seen_lpar':([50,],[79,]),'seen_rpar':([148,],[180,]),'seen_func_id':([59,],[97,]),'expression':([37,71,79,80,104,118,145,152,154,157,159,160,163,166,169,171,187,194,204,206,214,221,232,239,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'seen_RSQUARE':([201,223,],[216,233,]),'statement':([80,118,],[118,118,]),'factor':([37,64,71,78,79,80,90,104,118,145,146,152,154,157,159,160,163,166,169,171,187,194,204,206,214,219,221,232,239,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'more_args':([203,],[218,]),'variable_declaration':([0,7,80,118,],[7,7,121,121,]),'seen_condition_block':([234,],[240,]),'variable_declaration3':([17,],[23,]),'parameter_list2':([56,],[85,]),'term':([37,64,71,78,79,80,90,104,118,145,146,152,154,157,159,160,163,166,169,171,187,194,204,206,214,219,221,232,239,],[41,41,41,100,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'loop_statement':([80,118,],[137,137,]),'empty':([0,2,7,12,21,29,39,45,47,49,56,58,59,80,118,146,203,240,],[1,10,1,10,30,35,54,60,70,74,83,88,93,124,124,176,217,244,]),'compare':([45,],[61,]),'home':([80,118,],[125,125,]),'arg':([146,219,],[177,229,]),'pcolor':([80,118,],[127,127,]),'seen_assignment2':([247,],[249,]),'compare_symbols':([45,],[64,]),'loophead':([80,118,],[119,119,]),'geometry_statement':([80,118,],[129,129,]),'cst_expression2':([59,],[95,]),'move':([80,118,],[138,138,]),'args':([146,],[178,]),'id_or_array':([112,184,],[156,156,]),'andor':([47,],[71,]),'main_method':([18,],[25,]),'program2':([0,7,],[2,14,]),'seen_id_or_func':([44,112,],[59,59,]),'if_statement2':([240,],[246,]),'type':([0,7,13,39,80,84,118,],[9,9,20,55,9,55,9,]),'seen_function_id':([27,],[33,]),'seen_method_start':([87,],[143,]),'read_statement':([80,118,],[132,132,]),'variable_assignment':([80,118,153,241,],[134,134,185,247,]),'numeric_expression':([37,64,71,79,80,90,104,118,145,146,152,154,157,159,160,163,166,169,171,187,194,204,206,214,219,221,232,239,],[45,98,45,45,45,144,45,45,45,179,45,45,45,45,45,45,45,45,45,45,45,45,45,45,179,45,45,45,]),'seen_condition':([208,],[224,]),'seen_for_exp':([231,],[237,]),'program':([0,],[3,]),'block_statement':([52,119,143,224,245,],[81,162,174,234,248,]),'variable_declaration2':([9,22,],[16,31,]),'pclear':([80,118,],[141,141,]),'seen_id':([15,],[21,]),'numeric_expression2':([58,],[89,]),'variable_declarator':([9,22,],[17,17,]),'seen_while_exp':([211,],[225,]),'arithOp':([58,],[90,]),'block_statement2':([80,118,],[123,161,]),'rotate':([80,118,],[139,139,]),'program3':([2,12,],[11,19,]),'variable_declarator2':([21,],[29,]),'arc':([80,118,],[117,117,]),'method_declaration':([2,12,],[12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program2 program3 main_ahead main_method','program',4,'p_program','parser.py',32),
  ('main_ahead -> <empty>','main_ahead',0,'p_main_ahead','parser.py',37),
  ('program2 -> variable_declaration program2','program2',2,'p_program2','parser.py',49),
  ('program2 -> empty','program2',1,'p_program2','parser.py',50),
  ('program3 -> method_declaration program3','program3',2,'p_program3','parser.py',53),
  ('program3 -> empty','program3',1,'p_program3','parser.py',54),
  ('variable_declaration -> type variable_declaration2','variable_declaration',2,'p_variable_declaration','parser.py',57),
  ('variable_declaration2 -> variable_declarator variable_declaration3','variable_declaration2',2,'p_variable_declaration2','parser.py',60),
  ('variable_declaration3 -> COMMA variable_declaration2','variable_declaration3',2,'p_variable_declaration3','parser.py',63),
  ('variable_declaration3 -> SEMICOLON','variable_declaration3',1,'p_variable_declaration3','parser.py',64),
  ('variable_declarator -> ID seen_id variable_declarator2 variable_declarator3','variable_declarator',4,'p_variable_declarator','parser.py',67),
  ('seen_id -> <empty>','seen_id',0,'p_seen_id','parser.py',71),
  ('variable_declarator2 -> LSQUARE CSTINT RSQUARE','variable_declarator2',3,'p_variable_declarator2','parser.py',74),
  ('variable_declarator2 -> empty','variable_declarator2',1,'p_variable_declarator2','parser.py',75),
  ('variable_declarator3 -> = superexpression','variable_declarator3',2,'p_variable_declarator3','parser.py',90),
  ('variable_declarator3 -> empty','variable_declarator3',1,'p_variable_declarator3','parser.py',91),
  ('method_declaration -> FUNC type ID seen_function_id ( method_declaration2 method_declaration3','method_declaration',7,'p_method_declaration','parser.py',115),
  ('seen_function_id -> <empty>','seen_function_id',0,'p_seen_function_id','parser.py',121),
  ('method_declaration2 -> parameter_list','method_declaration2',1,'p_method_declaration2','parser.py',130),
  ('method_declaration2 -> empty','method_declaration2',1,'p_method_declaration2','parser.py',131),
  ('method_declaration3 -> ) seen_method_start block_statement','method_declaration3',3,'p_method_declaration3','parser.py',134),
  ('seen_method_start -> <empty>','seen_method_start',0,'p_seen_method_start','parser.py',137),
  ('parameter_list -> parameter parameter_list2','parameter_list',2,'p_parameter_list','parser.py',142),
  ('parameter_list2 -> COMMA parameter_list','parameter_list2',2,'p_parameter_list','parser.py',143),
  ('parameter_list2 -> empty','parameter_list2',1,'p_parameter_list','parser.py',144),
  ('parameter -> type ID','parameter',2,'p_parameter','parser.py',147),
  ('main_method -> MAIN CHEESE ( ) block_statement','main_method',5,'p_main_method','parser.py',154),
  ('type -> INT','type',1,'p_type','parser.py',157),
  ('type -> DOUBLE','type',1,'p_type','parser.py',158),
  ('type -> STRING','type',1,'p_type','parser.py',159),
  ('type -> VOID','type',1,'p_type','parser.py',160),
  ('variable_assignment -> ID id_or_array','variable_assignment',2,'p_variable_assignment','parser.py',166),
  ('id_or_array -> = superexpression','id_or_array',2,'p_id_or_array','parser.py',169),
  ('id_or_array -> LSQUARE seen_LSQUARE superexpression RSQUARE seen_RSQUARE = superexpression','id_or_array',7,'p_id_or_array','parser.py',170),
  ('superexpression -> expression superexpression2','superexpression',2,'p_superexpression','parser.py',250),
  ('superexpression2 -> andor superexpression','superexpression2',2,'p_superexpression2','parser.py',253),
  ('superexpression2 -> empty','superexpression2',1,'p_superexpression2','parser.py',254),
  ('andor -> AND','andor',1,'p_andor','parser.py',257),
  ('andor -> OR','andor',1,'p_andor','parser.py',258),
  ('expression -> numeric_expression compare','expression',2,'p_expression','parser.py',263),
  ('compare -> compare_symbols numeric_expression seen_comp','compare',3,'p_compare','parser.py',285),
  ('compare -> empty','compare',1,'p_compare','parser.py',286),
  ('compare_symbols -> CEQ','compare_symbols',1,'p_compare_symbols','parser.py',289),
  ('compare_symbols -> CGT','compare_symbols',1,'p_compare_symbols','parser.py',290),
  ('compare_symbols -> CGE','compare_symbols',1,'p_compare_symbols','parser.py',291),
  ('compare_symbols -> CLT','compare_symbols',1,'p_compare_symbols','parser.py',292),
  ('compare_symbols -> CLE','compare_symbols',1,'p_compare_symbols','parser.py',293),
  ('compare_symbols -> CNE','compare_symbols',1,'p_compare_symbols','parser.py',294),
  ('seen_comp -> <empty>','seen_comp',0,'p_seen_comp','parser.py',299),
  ('numeric_expression -> term seen_term numeric_expression2','numeric_expression',3,'p_numeric_expression','parser.py',356),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',359),
  ('numeric_expression2 -> arithOp numeric_expression','numeric_expression2',2,'p_numeric_expression2','parser.py',413),
  ('numeric_expression2 -> empty','numeric_expression2',1,'p_numeric_expression2','parser.py',414),
  ('arithOp -> +','arithOp',1,'p_arithOp','parser.py',417),
  ('arithOp -> -','arithOp',1,'p_arithOp','parser.py',418),
  ('term -> factor term2','term',2,'p_term','parser.py',423),
  ('term2 -> geomOp term','term2',2,'p_term2','parser.py',426),
  ('term2 -> empty','term2',1,'p_term2','parser.py',427),
  ('geomOp -> *','geomOp',1,'p_geomOp','parser.py',430),
  ('geomOp -> /','geomOp',1,'p_geomOp','parser.py',431),
  ('factor -> cst_expression','factor',1,'p_factor','parser.py',436),
  ('factor -> ( seen_lpar superexpression ) seen_rpar','factor',5,'p_factor','parser.py',437),
  ('seen_lpar -> <empty>','seen_lpar',0,'p_seen_lpar','parser.py',492),
  ('seen_rpar -> <empty>','seen_rpar',0,'p_seen_rpar','parser.py',497),
  ('cst_expression -> CSTDOUBLE','cst_expression',1,'p_cst_expression','parser.py',502),
  ('cst_expression -> CSTINT','cst_expression',1,'p_cst_expression','parser.py',503),
  ('cst_expression -> CSTSTRING','cst_expression',1,'p_cst_expression','parser.py',504),
  ('cst_expression -> ID seen_id_or_func cst_expression2','cst_expression',3,'p_cst_expression','parser.py',505),
  ('seen_id_or_func -> <empty>','seen_id_or_func',0,'p_seen_id_or_func','parser.py',518),
  ('cst_expression2 -> LSQUARE seen_LSQUARE superexpression RSQUARE seen_RSQUARE','cst_expression2',5,'p_cst_expression2','parser.py',524),
  ('cst_expression2 -> function_call','cst_expression2',1,'p_cst_expression2','parser.py',525),
  ('cst_expression2 -> empty','cst_expression2',1,'p_cst_expression2','parser.py',526),
  ('seen_LSQUARE -> <empty>','seen_LSQUARE',0,'p_seen_LSQUARE','parser.py',556),
  ('seen_RSQUARE -> <empty>','seen_RSQUARE',0,'p_seen_RSQUARE','parser.py',561),
  ('function_call -> seen_func_id ( args )','function_call',4,'p_function_call','parser.py',566),
  ('seen_func_id -> <empty>','seen_func_id',0,'p_seen_func_id','parser.py',578),
  ('args -> arg','args',1,'p_args','parser.py',596),
  ('args -> empty','args',1,'p_args','parser.py',597),
  ('arg -> numeric_expression seen_arg more_args','arg',3,'p_arg','parser.py',600),
  ('seen_arg -> <empty>','seen_arg',0,'p_seen_arg','parser.py',603),
  ('more_args -> COMMA arg','more_args',2,'p_more_args','parser.py',630),
  ('more_args -> empty','more_args',1,'p_more_args','parser.py',631),
  ('loop_statement -> loophead block_statement seen_loop_block','loop_statement',3,'p_loop_statement','parser.py',634),
  ('loophead -> FOR ( variable_assignment seen_assignment1 SEMICOLON superexpression seen_for_exp SEMICOLON variable_assignment seen_assignment2 )','loophead',11,'p_loophead','parser.py',640),
  ('loophead -> WHILE ( seen_while_LPAR superexpression seen_while_exp )','loophead',6,'p_loophead','parser.py',641),
  ('seen_assignment1 -> <empty>','seen_assignment1',0,'p_seen_assignment1','parser.py',644),
  ('seen_for_exp -> <empty>','seen_for_exp',0,'p_seen_for_exp','parser.py',649),
  ('seen_assignment2 -> <empty>','seen_assignment2',0,'p_seen_assignment2','parser.py',670),
  ('seen_while_LPAR -> <empty>','seen_while_LPAR',0,'p_seen_while_LPAR','parser.py',681),
  ('seen_while_exp -> <empty>','seen_while_exp',0,'p_seen_while_exp','parser.py',686),
  ('seen_loop_block -> <empty>','seen_loop_block',0,'p_seen_loop_block','parser.py',700),
  ('if_statement -> IF ( superexpression ) seen_condition block_statement seen_condition_block if_statement2','if_statement',8,'p_if_statement','parser.py',706),
  ('seen_condition -> <empty>','seen_condition',0,'p_seen_condition','parser.py',712),
  ('seen_condition_block -> <empty>','seen_condition_block',0,'p_seen_condition_block','parser.py',724),
  ('if_statement2 -> ELSE block_statement','if_statement2',2,'p_if_statement2','parser.py',732),
  ('if_statement2 -> empty','if_statement2',1,'p_if_statement2','parser.py',733),
  ('block_statement -> LBRACKET block_statement2 RBRACKET','block_statement',3,'p_block_statement','parser.py',736),
  ('block_statement2 -> statement block_statement2','block_statement2',2,'p_block_statement','parser.py',737),
  ('block_statement2 -> empty','block_statement2',1,'p_block_statement','parser.py',738),
  ('read_statement -> SCAN ( ID ) SEMICOLON','read_statement',5,'p_read_statement','parser.py',741),
  ('print_statement -> PRINT ( superexpression ) SEMICOLON','print_statement',5,'p_print_statement','parser.py',757),
  ('geometry_statement -> move','geometry_statement',1,'p_geometry_statement','parser.py',766),
  ('geometry_statement -> rotate','geometry_statement',1,'p_geometry_statement','parser.py',767),
  ('geometry_statement -> arc','geometry_statement',1,'p_geometry_statement','parser.py',768),
  ('geometry_statement -> home','geometry_statement',1,'p_geometry_statement','parser.py',769),
  ('geometry_statement -> pdown','geometry_statement',1,'p_geometry_statement','parser.py',770),
  ('geometry_statement -> pup','geometry_statement',1,'p_geometry_statement','parser.py',771),
  ('geometry_statement -> setp','geometry_statement',1,'p_geometry_statement','parser.py',772),
  ('geometry_statement -> pcolor','geometry_statement',1,'p_geometry_statement','parser.py',773),
  ('geometry_statement -> psize','geometry_statement',1,'p_geometry_statement','parser.py',774),
  ('geometry_statement -> pclear','geometry_statement',1,'p_geometry_statement','parser.py',775),
  ('move -> MOVE ( superexpression )','move',4,'p_move','parser.py',778),
  ('rotate -> ROTATE ( superexpression )','rotate',4,'p_rotate','parser.py',792),
  ('arc -> ARC ( superexpression COMMA superexpression )','arc',6,'p_arc','parser.py',806),
  ('home -> HOME ( )','home',3,'p_home','parser.py',824),
  ('pdown -> PDOWN ( )','pdown',3,'p_pdown','parser.py',829),
  ('pup -> PUP ( )','pup',3,'p_pup','parser.py',834),
  ('setp -> SETP ( superexpression COMMA superexpression )','setp',6,'p_setp','parser.py',839),
  ('pcolor -> PCOLOR ( superexpression COMMA superexpression COMMA superexpression )','pcolor',8,'p_pcolor','parser.py',857),
  ('psize -> PSIZE ( superexpression )','psize',4,'p_psize','parser.py',870),
  ('pclear -> PCLEAR ( )','pclear',3,'p_pclear','parser.py',884),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',889),
  ('statement -> variable_assignment SEMICOLON','statement',2,'p_statement','parser.py',890),
  ('statement -> superexpression SEMICOLON','statement',2,'p_statement','parser.py',891),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',892),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',893),
  ('statement -> return','statement',1,'p_statement','parser.py',894),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',895),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',896),
  ('statement -> geometry_statement SEMICOLON','statement',2,'p_statement','parser.py',897),
  ('return -> RETURN superexpression SEMICOLON','return',3,'p_return','parser.py',900),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',913),
]
