
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '7E0C217DEF5E5DC5E0D090A5F36D317D'
    
_lr_action_items = {'ELSE':([169,224,229,],[-93,-90,232,]),'COMMA':([10,12,21,26,28,33,34,38,39,41,42,43,44,45,46,47,48,49,54,55,63,65,68,70,72,73,76,81,82,83,84,86,87,90,91,101,102,103,106,149,150,152,179,180,190,193,196,219,],[19,-12,-128,-14,-128,-11,-16,-13,-59,-128,-128,-63,-64,-128,-65,-15,-67,-49,-38,-40,-35,-33,-56,-54,-128,-128,100,-47,-34,-55,-70,-66,-69,-51,-48,-26,-62,-39,-50,-60,-68,-76,202,-71,208,210,212,225,]),'MAIN':([0,1,5,6,11,13,14,15,17,18,20,22,23,25,96,169,178,],[-128,-4,-128,-128,-7,-128,-6,-2,-3,-8,-10,-5,29,-9,-17,-93,-21,]),'CGT':([39,41,43,44,45,46,48,49,68,70,72,73,83,84,86,87,90,91,102,106,144,149,150,180,],[-59,60,-63,-64,-128,-65,-67,-49,-56,-54,-128,-128,-55,-70,-66,-69,-51,-48,-62,-50,-67,-60,-68,-71,]),'MOVE':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,108,-124,-122,108,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'HOME':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,109,-124,-122,109,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'PDOWN':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,110,-124,-122,110,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'SCAN':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,111,-124,-122,111,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'LSQUARE':([12,21,48,72,144,],[-12,27,-67,85,-67,]),'PUP':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,113,-124,-122,113,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'PSIZE':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,114,-124,-122,114,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'(':([11,18,20,25,31,35,36,37,40,48,52,53,56,57,58,59,60,61,62,64,66,67,69,71,72,85,88,89,92,93,94,105,108,109,110,111,112,113,114,116,117,120,124,125,127,128,133,135,137,138,139,140,141,142,143,144,155,160,161,163,164,165,166,167,169,170,171,172,173,175,177,187,194,195,202,208,210,212,215,216,222,224,225,229,233,234,237,],[-7,-8,-10,-9,-18,40,50,51,-61,-67,40,-45,40,-46,-43,-44,-42,-41,40,-36,-37,40,-57,-58,-72,40,105,40,-53,-52,40,40,155,156,157,158,-124,159,160,-122,40,164,166,-121,167,168,-123,170,-125,-118,172,173,40,175,176,-67,40,40,-119,-87,40,-120,40,40,-93,40,-126,40,-85,40,40,-79,40,-127,40,40,40,40,-96,-97,40,-90,40,-128,-88,-92,-91,]),'CSTINT':([11,18,20,25,27,35,40,52,53,56,57,58,59,60,61,62,64,66,67,69,71,85,89,92,93,94,105,112,116,117,125,133,137,138,141,155,160,161,163,164,165,166,167,169,170,171,172,173,175,177,187,194,195,202,208,210,212,215,216,222,224,225,229,233,234,237,],[-7,-8,-10,-9,32,44,-61,44,-45,44,-46,-43,-44,-42,-41,44,-36,-37,44,-57,-58,44,44,-53,-52,44,44,-124,-122,44,-121,-123,-125,-118,44,44,44,-119,-87,44,-120,44,44,-93,44,-126,44,-85,44,44,-79,44,-127,44,44,44,44,-96,-97,44,-90,44,-128,-88,-92,-91,]),'CLE':([39,41,43,44,45,46,48,49,68,70,72,73,83,84,86,87,90,91,102,106,144,149,150,180,],[-59,53,-63,-64,-128,-65,-67,-49,-56,-54,-128,-128,-55,-70,-66,-69,-51,-48,-62,-50,-67,-60,-68,-71,]),'RSQUARE':([32,39,41,42,43,44,45,46,48,49,54,55,63,65,68,70,72,73,81,82,83,84,86,87,90,91,102,103,104,106,149,150,180,],[38,-59,-128,-128,-63,-64,-128,-65,-67,-49,-38,-40,-35,-33,-56,-54,-128,-128,-47,-34,-55,-70,-66,-69,-51,-48,-62,-39,150,-50,-60,-68,-71,]),')':([39,41,42,43,44,45,46,48,49,50,51,54,55,63,65,68,70,72,73,75,76,77,79,80,81,82,83,84,86,87,90,91,98,99,101,102,103,105,106,148,149,150,151,152,153,154,156,157,159,168,179,180,181,184,186,188,189,192,199,200,201,211,214,217,220,221,230,238,239,],[-59,-128,-128,-63,-64,-128,-65,-67,-49,74,-128,-38,-40,-35,-33,-56,-54,-128,-128,97,-128,-20,-19,102,-47,-34,-55,-70,-66,-69,-51,-48,-23,-25,-26,-62,-39,-128,-50,-24,-60,-68,-74,-76,180,-73,182,183,185,191,-128,-71,203,204,205,206,207,209,-32,-75,-78,-86,-77,223,226,227,235,-84,240,]),'$end':([2,30,95,169,],[0,-1,-27,-93,]),'ROTATE':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,120,-124,-122,120,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'CHEESE':([29,],[36,]),'PRINT':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,124,-124,-122,124,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'DOUBLE':([0,6,11,16,18,20,25,51,94,100,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[9,9,-7,9,-8,-10,-9,9,9,9,-124,-122,9,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'PCLEAR':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,128,-124,-122,128,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'SEMICOLON':([10,12,21,26,28,33,34,38,39,41,42,43,44,45,46,47,48,49,54,55,63,65,68,70,72,73,81,82,83,84,86,87,90,91,102,103,106,107,115,119,121,122,123,126,131,132,134,136,144,145,146,149,150,174,180,182,183,185,191,198,199,203,204,205,206,207,213,223,227,228,231,235,],[20,-12,-128,-14,-128,-11,-16,-13,-59,-128,-128,-63,-64,-128,-65,-15,-67,-49,-38,-40,-35,-33,-56,-54,-128,-128,-47,-34,-55,-70,-66,-69,-51,-48,-62,-39,-50,-102,161,-106,-105,-101,165,-99,-100,-104,-103,171,-67,-98,-107,-60,-68,195,-71,-111,-112,-113,-117,-82,-32,-108,215,-116,-109,216,222,-110,-114,-83,236,-115,]),'*':([39,43,44,45,46,48,72,84,86,87,102,144,149,150,180,],[-59,-63,-64,69,-65,-67,-128,-70,-66,-69,-62,-67,-60,-68,-71,]),'CEQ':([39,41,43,44,45,46,48,49,68,70,72,73,83,84,86,87,90,91,102,106,144,149,150,180,],[-59,61,-63,-64,-128,-65,-67,-49,-56,-54,-128,-128,-55,-70,-66,-69,-51,-48,-62,-50,-67,-60,-68,-71,]),'CGE':([39,41,43,44,45,46,48,49,68,70,72,73,83,84,86,87,90,91,102,106,144,149,150,180,],[-59,58,-63,-64,-128,-65,-67,-49,-56,-54,-128,-128,-55,-70,-66,-69,-51,-48,-62,-50,-67,-60,-68,-71,]),'CNE':([39,41,43,44,45,46,48,49,68,70,72,73,83,84,86,87,90,91,102,106,144,149,150,180,],[-59,57,-63,-64,-128,-65,-67,-49,-56,-54,-128,-128,-55,-70,-66,-69,-51,-48,-62,-50,-67,-60,-68,-71,]),'/':([39,43,44,45,46,48,72,84,86,87,102,144,149,150,180,],[-59,-63,-64,71,-65,-67,-128,-70,-66,-69,-62,-67,-60,-68,-71,]),'STRING':([0,6,11,16,18,20,25,51,94,100,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[4,4,-7,4,-8,-10,-9,4,4,4,-124,-122,4,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'CSTDOUBLE':([11,18,20,25,35,40,52,53,56,57,58,59,60,61,62,64,66,67,69,71,85,89,92,93,94,105,112,116,117,125,133,137,138,141,155,160,161,163,164,165,166,167,169,170,171,172,173,175,177,187,194,195,202,208,210,212,215,216,222,224,225,229,233,234,237,],[-7,-8,-10,-9,43,-61,43,-45,43,-46,-43,-44,-42,-41,43,-36,-37,43,-57,-58,43,43,-53,-52,43,43,-124,-122,43,-121,-123,-125,-118,43,43,43,-119,-87,43,-120,43,43,-93,43,-126,43,-85,43,43,-79,43,-127,43,43,43,43,-96,-97,43,-90,43,-128,-88,-92,-91,]),'FOR':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,143,-124,-122,143,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'IF':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,135,-124,-122,135,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'CSTSTRING':([11,18,20,25,35,40,52,53,56,57,58,59,60,61,62,64,66,67,69,71,85,89,92,93,94,105,112,116,117,125,133,137,138,141,155,160,161,163,164,165,166,167,169,170,171,172,173,175,177,187,194,195,202,208,210,212,215,216,222,224,225,229,233,234,237,],[-7,-8,-10,-9,46,-61,46,-45,46,-46,-43,-44,-42,-41,46,-36,-37,46,-57,-58,46,46,-53,-52,46,46,-124,-122,46,-121,-123,-125,-118,46,46,46,-119,-87,46,-120,46,46,-93,46,-126,46,-85,46,46,-79,46,-127,46,46,46,46,-96,-97,46,-90,46,-128,-88,-92,-91,]),'AND':([39,41,42,43,44,45,46,48,49,54,55,68,70,72,73,81,83,84,86,87,90,91,102,103,106,144,149,150,180,],[-59,-128,64,-63,-64,-128,-65,-67,-49,-38,-40,-56,-54,-128,-128,-47,-55,-70,-66,-69,-51,-48,-62,-39,-50,-67,-60,-68,-71,]),'=':([12,21,26,28,38,144,197,],[-12,-128,-14,35,-13,177,177,]),'VOID':([0,6,11,16,18,20,25,51,94,100,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[7,7,-7,7,-8,-10,-9,7,7,7,-124,-122,7,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'PCOLOR':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,139,-124,-122,139,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'ARC':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,127,-124,-122,127,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'WHILE':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,140,-124,-122,140,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'LBRACKET':([74,97,118,147,209,218,226,232,240,],[94,-22,94,94,-89,94,-81,94,-80,]),'RETURN':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,141,-124,-122,141,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'OR':([39,41,42,43,44,45,46,48,49,54,55,68,70,72,73,81,83,84,86,87,90,91,102,103,106,144,149,150,180,],[-59,-128,66,-63,-64,-128,-65,-67,-49,-38,-40,-56,-54,-128,-128,-47,-55,-70,-66,-69,-51,-48,-62,-39,-50,-67,-60,-68,-71,]),'+':([39,43,44,45,46,48,49,68,70,72,73,83,84,86,87,102,144,149,150,180,],[-59,-63,-64,-128,-65,-67,-49,-56,-54,-128,93,-55,-70,-66,-69,-62,-67,-60,-68,-71,]),'-':([39,43,44,45,46,48,49,68,70,72,73,83,84,86,87,102,144,149,150,180,],[-59,-63,-64,-128,-65,-67,-49,-56,-54,-128,92,-55,-70,-66,-69,-62,-67,-60,-68,-71,]),'ID':([3,4,7,8,9,11,18,19,20,24,25,35,40,52,53,56,57,58,59,60,61,62,64,66,67,69,71,78,85,89,92,93,94,105,112,116,117,125,133,137,138,141,155,158,160,161,163,164,165,166,167,169,170,171,172,173,175,176,177,187,194,195,202,208,210,212,215,216,222,224,225,229,233,234,236,237,],[12,-30,-31,-28,-29,-7,-8,12,-10,31,-9,48,-61,48,-45,48,-46,-43,-44,-42,-41,48,-36,-37,48,-57,-58,101,48,48,-53,-52,144,48,-124,-122,144,-121,-123,-125,-118,48,48,184,48,-119,-87,48,-120,48,48,-93,48,-126,48,-85,48,197,48,-79,48,-127,48,48,48,48,-96,-97,48,-90,48,-128,-88,-92,197,-91,]),'FUNC':([0,1,5,6,11,13,17,18,20,25,96,169,178,],[-128,-4,16,-128,-7,16,-3,-8,-10,-9,-17,-93,-21,]),'RBRACKET':([11,18,20,25,94,112,116,117,125,129,130,133,137,138,161,162,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,-128,-124,-122,-128,-121,-95,169,-123,-125,-118,-119,-94,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'SETP':([11,18,20,25,94,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[-7,-8,-10,-9,142,-124,-122,142,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'INT':([0,6,11,16,18,20,25,51,94,100,112,116,117,125,133,137,138,161,163,165,169,171,187,195,215,216,224,229,233,234,237,],[8,8,-7,8,-8,-10,-9,8,8,8,-124,-122,8,-121,-123,-125,-118,-119,-87,-120,-93,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'CLT':([39,41,43,44,45,46,48,49,68,70,72,73,83,84,86,87,90,91,102,106,144,149,150,180,],[-59,59,-63,-64,-128,-65,-67,-49,-56,-54,-128,-128,-55,-70,-66,-69,-51,-48,-62,-50,-67,-60,-68,-71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'variable_declaration3':([10,],[18,]),'seen_id_or_func':([48,144,],[72,72,]),'pdown':([94,117,],[107,107,]),'args':([105,],[153,]),'numeric_expression':([35,52,56,62,85,89,94,105,117,141,155,160,164,166,167,170,172,175,177,194,202,208,210,212,222,225,],[41,41,81,41,41,106,41,152,41,41,41,41,41,41,41,41,41,41,41,41,152,41,41,41,41,41,]),'seen_for_exp':([228,],[231,]),'expression':([35,52,62,85,94,117,141,155,160,164,166,167,170,172,175,177,194,208,210,212,222,225,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'function_call':([72,],[87,]),'seen_func_id':([72,],[88,]),'variable_declarator':([3,19,],[10,10,]),'print_statement':([94,117,],[112,112,]),'seen_while_exp':([211,],[220,]),'seen_condition':([209,],[218,]),'variable_assignment':([94,117,176,236,],[115,115,198,238,]),'method_declaration2':([51,],[75,]),'compare':([41,],[54,]),'loop_statement':([94,117,],[116,116,]),'cst_expression2':([72,],[86,]),'loophead':([94,117,],[118,118,]),'numeric_expression2':([73,],[91,]),'superexpression2':([42,],[65,]),'cst_expression':([35,52,56,62,67,85,89,94,105,117,141,155,160,164,166,167,170,172,175,177,194,202,208,210,212,222,225,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'term2':([45,],[70,]),'psize':([94,117,],[119,119,]),'statement':([94,117,],[117,117,]),'parameter':([51,100,],[76,76,]),'pcolor':([94,117,],[121,121,]),'more_args':([179,],[200,]),'home':([94,117,],[122,122,]),'arithOp':([73,],[89,]),'variable_declarator2':([21,],[28,]),'program':([0,],[2,]),'geometry_statement':([94,117,],[136,136,]),'rotate':([94,117,],[126,126,]),'arg':([105,202,],[154,214,]),'if_statement2':([229,],[233,]),'superexpression':([35,52,62,85,94,117,141,155,160,164,166,167,170,172,175,177,194,208,210,212,222,225,],[47,80,82,104,123,123,174,181,186,188,189,190,192,193,196,199,211,217,219,221,228,230,]),'seen_term':([49,],[73,]),'andor':([42,],[62,]),'main_ahead':([15,],[23,]),'empty':([0,5,6,13,21,28,41,42,45,51,72,73,76,94,105,117,179,229,],[1,14,1,14,26,34,55,63,68,77,84,90,99,129,151,129,201,234,]),'block_statement2':([94,117,],[130,162,]),'arc':([94,117,],[131,131,]),'seen_method_start':([97,],[147,]),'seen_condition_block':([224,],[229,]),'seen_assignment1':([198,],[213,]),'type':([0,6,16,51,94,100,117,],[3,3,24,78,3,78,3,]),'setp':([94,117,],[132,132,]),'return':([94,117,],[133,133,]),'method_declaration3':([75,],[96,]),'seen_lpar':([40,],[52,]),'method_declaration':([5,13,],[13,13,]),'factor':([35,52,56,62,67,85,89,94,105,117,141,155,160,164,166,167,170,172,175,177,194,202,208,210,212,222,225,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'parameter_list':([51,100,],[79,148,]),'geomOp':([45,],[67,]),'program2':([0,6,],[5,17,]),'read_statement':([94,117,],[137,137,]),'variable_declaration':([0,6,94,117,],[6,6,138,138,]),'seen_rpar':([102,],[149,]),'compare_symbols':([41,],[56,]),'seen_assignment2':([238,],[239,]),'seen_arg':([152,],[179,]),'move':([94,117,],[145,145,]),'seen_while_LPAR':([173,],[194,]),'seen_id':([12,],[21,]),'program3':([5,13,],[15,22,]),'seen_comp':([81,],[103,]),'term':([35,52,56,62,67,85,89,94,105,117,141,155,160,164,166,167,170,172,175,177,194,202,208,210,212,222,225,],[49,49,49,49,83,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'main_method':([23,],[30,]),'variable_declarator3':([28,],[33,]),'seen_loop_block':([163,],[187,]),'parameter_list2':([76,],[98,]),'pup':([94,117,],[134,134,]),'variable_declaration2':([3,19,],[11,25,]),'seen_function_id':([31,],[37,]),'block_statement':([74,118,147,218,232,],[95,163,178,224,237,]),'pclear':([94,117,],[146,146,]),'if_statement':([94,117,],[125,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program2 program3 main_ahead main_method','program',4,'p_program','parser.py',30),
  ('main_ahead -> <empty>','main_ahead',0,'p_main_ahead','parser.py',35),
  ('program2 -> variable_declaration program2','program2',2,'p_program2','parser.py',47),
  ('program2 -> empty','program2',1,'p_program2','parser.py',48),
  ('program3 -> method_declaration program3','program3',2,'p_program3','parser.py',51),
  ('program3 -> empty','program3',1,'p_program3','parser.py',52),
  ('variable_declaration -> type variable_declaration2','variable_declaration',2,'p_variable_declaration','parser.py',55),
  ('variable_declaration2 -> variable_declarator variable_declaration3','variable_declaration2',2,'p_variable_declaration2','parser.py',58),
  ('variable_declaration3 -> COMMA variable_declaration2','variable_declaration3',2,'p_variable_declaration3','parser.py',61),
  ('variable_declaration3 -> SEMICOLON','variable_declaration3',1,'p_variable_declaration3','parser.py',62),
  ('variable_declarator -> ID seen_id variable_declarator2 variable_declarator3','variable_declarator',4,'p_variable_declarator','parser.py',65),
  ('seen_id -> <empty>','seen_id',0,'p_seen_id','parser.py',69),
  ('variable_declarator2 -> LSQUARE CSTINT RSQUARE','variable_declarator2',3,'p_variable_declarator2','parser.py',72),
  ('variable_declarator2 -> empty','variable_declarator2',1,'p_variable_declarator2','parser.py',73),
  ('variable_declarator3 -> = superexpression','variable_declarator3',2,'p_variable_declarator3','parser.py',81),
  ('variable_declarator3 -> empty','variable_declarator3',1,'p_variable_declarator3','parser.py',82),
  ('method_declaration -> FUNC type ID seen_function_id ( method_declaration2 method_declaration3','method_declaration',7,'p_method_declaration','parser.py',100),
  ('seen_function_id -> <empty>','seen_function_id',0,'p_seen_function_id','parser.py',106),
  ('method_declaration2 -> parameter_list','method_declaration2',1,'p_method_declaration2','parser.py',115),
  ('method_declaration2 -> empty','method_declaration2',1,'p_method_declaration2','parser.py',116),
  ('method_declaration3 -> ) seen_method_start block_statement','method_declaration3',3,'p_method_declaration3','parser.py',119),
  ('seen_method_start -> <empty>','seen_method_start',0,'p_seen_method_start','parser.py',122),
  ('parameter_list -> parameter parameter_list2','parameter_list',2,'p_parameter_list','parser.py',127),
  ('parameter_list2 -> COMMA parameter_list','parameter_list2',2,'p_parameter_list','parser.py',128),
  ('parameter_list2 -> empty','parameter_list2',1,'p_parameter_list','parser.py',129),
  ('parameter -> type ID','parameter',2,'p_parameter','parser.py',132),
  ('main_method -> MAIN CHEESE ( ) block_statement','main_method',5,'p_main_method','parser.py',139),
  ('type -> INT','type',1,'p_type','parser.py',142),
  ('type -> DOUBLE','type',1,'p_type','parser.py',143),
  ('type -> STRING','type',1,'p_type','parser.py',144),
  ('type -> VOID','type',1,'p_type','parser.py',145),
  ('variable_assignment -> ID = superexpression','variable_assignment',3,'p_variable_assignment','parser.py',151),
  ('superexpression -> expression superexpression2','superexpression',2,'p_superexpression','parser.py',170),
  ('superexpression2 -> andor superexpression','superexpression2',2,'p_superexpression2','parser.py',173),
  ('superexpression2 -> empty','superexpression2',1,'p_superexpression2','parser.py',174),
  ('andor -> AND','andor',1,'p_andor','parser.py',177),
  ('andor -> OR','andor',1,'p_andor','parser.py',178),
  ('expression -> numeric_expression compare','expression',2,'p_expression','parser.py',183),
  ('compare -> compare_symbols numeric_expression seen_comp','compare',3,'p_compare','parser.py',205),
  ('compare -> empty','compare',1,'p_compare','parser.py',206),
  ('compare_symbols -> CEQ','compare_symbols',1,'p_compare_symbols','parser.py',209),
  ('compare_symbols -> CGT','compare_symbols',1,'p_compare_symbols','parser.py',210),
  ('compare_symbols -> CGE','compare_symbols',1,'p_compare_symbols','parser.py',211),
  ('compare_symbols -> CLT','compare_symbols',1,'p_compare_symbols','parser.py',212),
  ('compare_symbols -> CLE','compare_symbols',1,'p_compare_symbols','parser.py',213),
  ('compare_symbols -> CNE','compare_symbols',1,'p_compare_symbols','parser.py',214),
  ('seen_comp -> <empty>','seen_comp',0,'p_seen_comp','parser.py',219),
  ('numeric_expression -> term seen_term numeric_expression2','numeric_expression',3,'p_numeric_expression','parser.py',245),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',248),
  ('numeric_expression2 -> arithOp numeric_expression','numeric_expression2',2,'p_numeric_expression2','parser.py',273),
  ('numeric_expression2 -> empty','numeric_expression2',1,'p_numeric_expression2','parser.py',274),
  ('arithOp -> +','arithOp',1,'p_arithOp','parser.py',277),
  ('arithOp -> -','arithOp',1,'p_arithOp','parser.py',278),
  ('term -> factor term2','term',2,'p_term','parser.py',283),
  ('term2 -> geomOp term','term2',2,'p_term2','parser.py',286),
  ('term2 -> empty','term2',1,'p_term2','parser.py',287),
  ('geomOp -> *','geomOp',1,'p_geomOp','parser.py',290),
  ('geomOp -> /','geomOp',1,'p_geomOp','parser.py',291),
  ('factor -> cst_expression','factor',1,'p_factor','parser.py',296),
  ('factor -> ( seen_lpar superexpression ) seen_rpar','factor',5,'p_factor','parser.py',297),
  ('seen_lpar -> <empty>','seen_lpar',0,'p_seen_lpar','parser.py',323),
  ('seen_rpar -> <empty>','seen_rpar',0,'p_seen_rpar','parser.py',328),
  ('cst_expression -> CSTDOUBLE','cst_expression',1,'p_cst_expression','parser.py',333),
  ('cst_expression -> CSTINT','cst_expression',1,'p_cst_expression','parser.py',334),
  ('cst_expression -> CSTSTRING','cst_expression',1,'p_cst_expression','parser.py',335),
  ('cst_expression -> ID seen_id_or_func cst_expression2','cst_expression',3,'p_cst_expression','parser.py',336),
  ('seen_id_or_func -> <empty>','seen_id_or_func',0,'p_seen_id_or_func','parser.py',350),
  ('cst_expression2 -> LSQUARE superexpression RSQUARE','cst_expression2',3,'p_cst_expression2','parser.py',356),
  ('cst_expression2 -> function_call','cst_expression2',1,'p_cst_expression2','parser.py',357),
  ('cst_expression2 -> empty','cst_expression2',1,'p_cst_expression2','parser.py',358),
  ('function_call -> seen_func_id ( args )','function_call',4,'p_function_call','parser.py',375),
  ('seen_func_id -> <empty>','seen_func_id',0,'p_seen_func_id','parser.py',387),
  ('args -> arg','args',1,'p_args','parser.py',405),
  ('args -> empty','args',1,'p_args','parser.py',406),
  ('arg -> numeric_expression seen_arg more_args','arg',3,'p_arg','parser.py',409),
  ('seen_arg -> <empty>','seen_arg',0,'p_seen_arg','parser.py',412),
  ('more_args -> COMMA arg','more_args',2,'p_more_args','parser.py',439),
  ('more_args -> empty','more_args',1,'p_more_args','parser.py',440),
  ('loop_statement -> loophead block_statement seen_loop_block','loop_statement',3,'p_loop_statement','parser.py',443),
  ('loophead -> FOR ( variable_assignment seen_assignment1 SEMICOLON superexpression seen_for_exp SEMICOLON variable_assignment seen_assignment2 )','loophead',11,'p_loophead','parser.py',449),
  ('loophead -> WHILE ( seen_while_LPAR superexpression seen_while_exp )','loophead',6,'p_loophead','parser.py',450),
  ('seen_assignment1 -> <empty>','seen_assignment1',0,'p_seen_assignment1','parser.py',453),
  ('seen_for_exp -> <empty>','seen_for_exp',0,'p_seen_for_exp','parser.py',458),
  ('seen_assignment2 -> <empty>','seen_assignment2',0,'p_seen_assignment2','parser.py',479),
  ('seen_while_LPAR -> <empty>','seen_while_LPAR',0,'p_seen_while_LPAR','parser.py',490),
  ('seen_while_exp -> <empty>','seen_while_exp',0,'p_seen_while_exp','parser.py',495),
  ('seen_loop_block -> <empty>','seen_loop_block',0,'p_seen_loop_block','parser.py',509),
  ('if_statement -> IF ( superexpression ) seen_condition block_statement seen_condition_block if_statement2','if_statement',8,'p_if_statement','parser.py',515),
  ('seen_condition -> <empty>','seen_condition',0,'p_seen_condition','parser.py',521),
  ('seen_condition_block -> <empty>','seen_condition_block',0,'p_seen_condition_block','parser.py',533),
  ('if_statement2 -> ELSE block_statement','if_statement2',2,'p_if_statement2','parser.py',541),
  ('if_statement2 -> empty','if_statement2',1,'p_if_statement2','parser.py',542),
  ('block_statement -> LBRACKET block_statement2 RBRACKET','block_statement',3,'p_block_statement','parser.py',545),
  ('block_statement2 -> statement block_statement2','block_statement2',2,'p_block_statement','parser.py',546),
  ('block_statement2 -> empty','block_statement2',1,'p_block_statement','parser.py',547),
  ('read_statement -> SCAN ( ID ) SEMICOLON','read_statement',5,'p_read_statement','parser.py',550),
  ('print_statement -> PRINT ( superexpression ) SEMICOLON','print_statement',5,'p_print_statement','parser.py',561),
  ('geometry_statement -> move','geometry_statement',1,'p_geometry_statement','parser.py',567),
  ('geometry_statement -> rotate','geometry_statement',1,'p_geometry_statement','parser.py',568),
  ('geometry_statement -> arc','geometry_statement',1,'p_geometry_statement','parser.py',569),
  ('geometry_statement -> home','geometry_statement',1,'p_geometry_statement','parser.py',570),
  ('geometry_statement -> pdown','geometry_statement',1,'p_geometry_statement','parser.py',571),
  ('geometry_statement -> pup','geometry_statement',1,'p_geometry_statement','parser.py',572),
  ('geometry_statement -> setp','geometry_statement',1,'p_geometry_statement','parser.py',573),
  ('geometry_statement -> pcolor','geometry_statement',1,'p_geometry_statement','parser.py',574),
  ('geometry_statement -> psize','geometry_statement',1,'p_geometry_statement','parser.py',575),
  ('geometry_statement -> pclear','geometry_statement',1,'p_geometry_statement','parser.py',576),
  ('move -> MOVE ( superexpression )','move',4,'p_move','parser.py',579),
  ('rotate -> ROTATE ( superexpression )','rotate',4,'p_rotate','parser.py',590),
  ('arc -> ARC ( superexpression COMMA superexpression )','arc',6,'p_arc','parser.py',601),
  ('home -> HOME ( )','home',3,'p_home','parser.py',613),
  ('pdown -> PDOWN ( )','pdown',3,'p_pdown','parser.py',618),
  ('pup -> PUP ( )','pup',3,'p_pup','parser.py',623),
  ('setp -> SETP ( superexpression COMMA superexpression )','setp',6,'p_setp','parser.py',628),
  ('pcolor -> PCOLOR ( superexpression COMMA superexpression COMMA superexpression )','pcolor',8,'p_pcolor','parser.py',640),
  ('psize -> PSIZE ( superexpression )','psize',4,'p_psize','parser.py',653),
  ('pclear -> PCLEAR ( )','pclear',3,'p_pclear','parser.py',664),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',669),
  ('statement -> variable_assignment SEMICOLON','statement',2,'p_statement','parser.py',670),
  ('statement -> superexpression SEMICOLON','statement',2,'p_statement','parser.py',671),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',672),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',673),
  ('statement -> return','statement',1,'p_statement','parser.py',674),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',675),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',676),
  ('statement -> geometry_statement SEMICOLON','statement',2,'p_statement','parser.py',677),
  ('return -> RETURN superexpression SEMICOLON','return',3,'p_return','parser.py',680),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',693),
]
