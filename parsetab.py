
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1489B057943B14ADED5797924CCA59FC'
    
_lr_action_items = {'VOID':([0,8,12,16,21,22,28,39,80,84,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[9,9,9,-7,-10,-8,-9,9,9,9,-126,-128,-129,-127,-125,-122,9,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'MOVE':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,103,-126,-128,-129,-127,-125,-122,103,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'SETP':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,112,-126,-128,-129,-127,-125,-122,112,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CSTSTRING':([16,21,22,28,34,42,59,60,61,62,63,64,66,67,71,72,73,75,76,77,80,90,92,94,99,104,109,110,121,124,132,134,135,147,148,149,150,152,153,154,155,156,161,163,165,166,168,170,171,172,173,182,197,198,200,206,207,215,218,222,223,225,233,236,238,239,242,243,248,],[-7,-10,-8,-9,43,-63,43,-47,-43,-46,-44,-45,-48,43,-59,-60,43,-39,-38,43,43,43,-55,-54,-73,-126,43,-128,-129,-127,-125,-122,43,43,43,43,-97,43,43,-124,43,-130,43,43,-123,43,43,-73,-89,43,-91,-131,43,43,-83,43,43,43,43,-100,43,-101,-94,43,-132,43,-96,-92,-95,]),'CGE':([40,41,43,44,45,46,47,48,68,69,70,74,91,93,95,96,97,98,136,145,146,175,201,203,216,],[64,-66,-67,-51,-61,-132,-65,-69,-132,-58,-56,-132,-50,-53,-57,-72,-68,-71,-69,-64,-52,-62,-74,-75,-70,]),'=':([15,24,29,30,51,136,187,226,234,],[-12,-132,-14,34,-13,168,168,-74,239,]),'FOR':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,117,-126,-128,-129,-127,-125,-122,117,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CLE':([40,41,43,44,45,46,47,48,68,69,70,74,91,93,95,96,97,98,136,145,146,175,201,203,216,],[60,-66,-67,-51,-61,-132,-65,-69,-132,-58,-56,-132,-50,-53,-57,-72,-68,-71,-69,-64,-52,-62,-74,-75,-70,]),'$end':([5,26,81,150,],[0,-1,-27,-97,]),'-':([41,43,44,45,46,47,48,68,69,70,74,95,96,97,98,136,145,175,201,203,216,],[-66,-67,-51,-61,-132,-65,-69,92,-58,-56,-132,-57,-72,-68,-71,-69,-64,-62,-74,-75,-70,]),'COMMA':([14,15,24,29,30,35,36,40,41,43,44,45,46,47,48,49,50,51,53,58,65,68,69,70,74,78,79,87,88,91,93,95,96,97,98,101,144,145,146,175,177,184,185,199,201,202,203,216,228,],[23,-12,-132,-14,-132,-16,-11,-132,-66,-67,-51,-61,-132,-65,-69,-15,-132,-13,84,-42,-40,-132,-58,-56,-132,-37,-35,-26,-49,-50,-53,-57,-72,-68,-71,-36,-41,-64,-52,-62,-80,206,207,215,-74,218,-75,-70,236,]),'STRING':([0,8,12,16,21,22,28,39,80,84,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[1,1,1,-7,-10,-8,-9,1,1,1,-126,-128,-129,-127,-125,-122,1,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CSTDOUBLE':([16,21,22,28,34,42,59,60,61,62,63,64,66,67,71,72,73,75,76,77,80,90,92,94,99,104,109,110,121,124,132,134,135,147,148,149,150,152,153,154,155,156,161,163,165,166,168,170,171,172,173,182,197,198,200,206,207,215,218,222,223,225,233,236,238,239,242,243,248,],[-7,-10,-8,-9,47,-63,47,-47,-43,-46,-44,-45,-48,47,-59,-60,47,-39,-38,47,47,47,-55,-54,-73,-126,47,-128,-129,-127,-125,-122,47,47,47,47,-97,47,47,-124,47,-130,47,47,-123,47,47,-73,-89,47,-91,-131,47,47,-83,47,47,47,47,-100,47,-101,-94,47,-132,47,-96,-92,-95,]),'RETURN':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,109,-126,-128,-129,-127,-125,-122,109,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'INT':([0,8,12,16,21,22,28,39,80,84,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[7,7,7,-7,-10,-8,-9,7,7,7,-126,-128,-129,-127,-125,-122,7,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'ROTATE':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,111,-126,-128,-129,-127,-125,-122,111,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'(':([16,21,22,27,28,32,33,34,42,48,59,60,61,62,63,64,66,67,71,72,73,74,75,76,77,80,90,92,94,99,100,103,104,109,110,111,112,114,116,117,120,121,122,124,125,126,128,130,132,133,134,135,136,137,139,147,148,149,150,152,153,154,155,156,161,163,165,166,168,170,171,172,173,182,197,198,200,206,207,215,218,222,223,225,233,236,238,239,242,243,248,],[-7,-10,-8,-18,-9,38,39,42,-63,-69,42,-47,-43,-46,-44,-45,-48,42,-59,-60,42,-76,-39,-38,42,42,42,-55,-54,-73,148,149,-126,42,-128,152,153,155,157,158,159,-129,160,-127,161,162,163,164,-125,166,-122,42,-69,171,172,42,42,42,-97,42,42,-124,42,-130,42,42,-123,42,42,-73,-89,42,-91,-131,42,42,-83,42,42,42,42,-100,42,-101,-94,42,-132,42,-96,-92,-95,]),'RBRACKET':([16,21,22,28,80,102,104,106,110,121,124,132,134,135,150,154,156,165,167,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,-132,-99,-126,150,-128,-129,-127,-125,-122,-132,-97,-124,-130,-123,-98,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'ARC':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,114,-126,-128,-129,-127,-125,-122,114,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'SCAN':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,116,-126,-128,-129,-127,-125,-122,116,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'PCLEAR':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,120,-126,-128,-129,-127,-125,-122,120,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'MAIN':([0,2,4,8,10,11,13,16,17,18,20,21,22,28,85,150,174,],[-132,-132,-4,-132,-6,-2,-132,-7,-3,25,-5,-10,-8,-9,-17,-97,-21,]),'LBRACKET':([52,86,141,143,211,224,235,244,250,],[80,-22,80,80,-93,80,-85,80,-84,]),'CSTINT':([16,21,22,28,31,34,42,59,60,61,62,63,64,66,67,71,72,73,75,76,77,80,90,92,94,99,104,109,110,121,124,132,134,135,147,148,149,150,152,153,154,155,156,161,163,165,166,168,170,171,172,173,182,197,198,200,206,207,215,218,222,223,225,233,236,238,239,242,243,248,],[-7,-10,-8,-9,37,41,-63,41,-47,-43,-46,-44,-45,-48,41,-59,-60,41,-39,-38,41,41,41,-55,-54,-73,-126,41,-128,-129,-127,-125,-122,41,41,41,41,-97,41,41,-124,41,-130,41,41,-123,41,41,-73,-89,41,-91,-131,41,41,-83,41,41,41,41,-100,41,-101,-94,41,-132,41,-96,-92,-95,]),'DOUBLE':([0,8,12,16,21,22,28,39,80,84,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[6,6,6,-7,-10,-8,-9,6,6,6,-126,-128,-129,-127,-125,-122,6,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CLT':([40,41,43,44,45,46,47,48,68,69,70,74,91,93,95,96,97,98,136,145,146,175,201,203,216,],[62,-66,-67,-51,-61,-132,-65,-69,-132,-58,-56,-132,-50,-53,-57,-72,-68,-71,-69,-64,-52,-62,-74,-75,-70,]),'*':([41,43,45,46,47,48,74,96,97,98,136,145,175,201,203,216,],[-66,-67,-61,71,-65,-69,-132,-72,-68,-71,-69,-64,-62,-74,-75,-70,]),'LSQUARE':([15,24,48,74,136,187,],[-12,31,-69,99,170,170,]),'PSIZE':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,125,-126,-128,-129,-127,-125,-122,125,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),')':([38,39,40,41,43,44,45,46,47,48,50,53,54,56,57,58,65,68,69,70,74,78,79,82,83,87,88,89,91,93,95,96,97,98,101,142,144,145,146,148,159,160,162,164,169,175,177,178,179,180,181,183,186,191,193,195,196,201,202,203,214,216,217,219,220,221,227,229,240,245,247,249,],[52,-132,-132,-66,-67,-51,-61,-132,-65,-69,-132,-132,86,-20,-19,-42,-40,-132,-58,-56,-132,-37,-35,-23,-25,-26,-49,145,-50,-53,-57,-72,-68,-71,-36,-24,-41,-64,-52,-132,189,190,192,194,-32,-62,-80,-78,-77,203,204,205,208,210,211,212,-33,-74,-132,-75,-90,-70,-82,-79,230,231,235,-81,246,-34,-88,250,]),'HOME':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,126,-126,-128,-129,-127,-125,-122,126,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'PDOWN':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,122,-126,-128,-129,-127,-125,-122,122,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'IF':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,128,-126,-128,-129,-127,-125,-122,128,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'AND':([40,41,43,44,45,46,47,48,50,58,65,68,69,70,74,88,91,93,95,96,97,98,136,144,145,146,175,201,203,216,],[-132,-66,-67,-51,-61,-132,-65,-69,76,-42,-40,-132,-58,-56,-132,-49,-50,-53,-57,-72,-68,-71,-69,-41,-64,-52,-62,-74,-75,-70,]),'CEQ':([40,41,43,44,45,46,47,48,68,69,70,74,91,93,95,96,97,98,136,145,146,175,201,203,216,],[61,-66,-67,-51,-61,-132,-65,-69,-132,-58,-56,-132,-50,-53,-57,-72,-68,-71,-69,-64,-52,-62,-74,-75,-70,]),'PUP':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,130,-126,-128,-129,-127,-125,-122,130,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'+':([41,43,44,45,46,47,48,68,69,70,74,95,96,97,98,136,145,175,201,203,216,],[-66,-67,-51,-61,-132,-65,-69,94,-58,-56,-132,-57,-72,-68,-71,-69,-64,-62,-74,-75,-70,]),'CGT':([40,41,43,44,45,46,47,48,68,69,70,74,91,93,95,96,97,98,136,145,146,175,201,203,216,],[63,-66,-67,-51,-61,-132,-65,-69,-132,-58,-56,-132,-50,-53,-57,-72,-68,-71,-69,-64,-52,-62,-74,-75,-70,]),'SEMICOLON':([14,15,24,29,30,35,36,40,41,43,44,45,46,47,48,49,50,51,58,65,68,69,70,74,78,79,88,91,93,95,96,97,98,101,105,107,108,113,115,118,119,123,127,129,131,136,138,140,144,145,146,151,169,175,188,189,190,192,194,196,201,203,204,205,208,209,210,212,216,230,231,232,237,245,246,],[21,-12,-132,-14,-132,-16,-11,-132,-66,-67,-51,-61,-132,-65,-69,-15,-132,-13,-42,-40,-132,-58,-56,-132,-37,-35,-49,-50,-53,-57,-72,-68,-71,-36,-110,-104,-106,154,156,-108,-107,-103,-105,-111,165,-69,-109,-102,-41,-64,-52,182,-32,-62,-86,-121,-116,-115,-117,-33,-74,-75,-112,-113,222,223,-120,225,-70,-118,-114,-87,241,-34,-119,]),'OR':([40,41,43,44,45,46,47,48,50,58,65,68,69,70,74,88,91,93,95,96,97,98,136,144,145,146,175,201,203,216,],[-132,-66,-67,-51,-61,-132,-65,-69,75,-42,-40,-132,-58,-56,-132,-49,-50,-53,-57,-72,-68,-71,-69,-41,-64,-52,-62,-74,-75,-70,]),'PRINT':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,133,-126,-128,-129,-127,-125,-122,133,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'FUNC':([0,2,4,8,13,16,17,21,22,28,85,150,174,],[-132,12,-4,-132,12,-7,-3,-10,-8,-9,-17,-97,-21,]),'ELSE':([150,233,238,],[-97,-94,244,]),'ID':([1,3,6,7,9,16,19,21,22,23,28,34,42,55,59,60,61,62,63,64,66,67,71,72,73,75,76,77,80,90,92,94,99,104,109,110,121,124,132,134,135,147,148,149,150,152,153,154,155,156,157,158,161,163,165,166,168,170,171,172,173,182,197,198,200,206,207,215,218,222,223,225,233,236,238,239,241,242,243,248,],[-30,15,-29,-28,-31,-7,27,-10,-8,15,-9,48,-63,87,48,-47,-43,-46,-44,-45,-48,48,-59,-60,48,-39,-38,48,136,48,-55,-54,-73,-126,48,-128,-129,-127,-125,-122,136,48,48,48,-97,48,48,-124,48,-130,186,187,48,48,-123,48,48,-73,-89,48,-91,-131,48,48,-83,48,48,48,48,-100,48,-101,-94,48,-132,48,187,-96,-92,-95,]),'CHEESE':([25,],[32,]),'RSQUARE':([37,40,41,43,44,45,46,47,48,50,58,65,68,69,70,74,78,79,88,91,93,95,96,97,98,101,144,145,146,175,176,201,203,213,216,],[51,-132,-66,-67,-51,-61,-132,-65,-69,-132,-42,-40,-132,-58,-56,-132,-37,-35,-49,-50,-53,-57,-72,-68,-71,-36,-41,-64,-52,-62,201,-74,-75,226,-70,]),'/':([41,43,45,46,47,48,74,96,97,98,136,145,175,201,203,216,],[-66,-67,-61,72,-65,-69,-132,-72,-68,-71,-69,-64,-62,-74,-75,-70,]),'PCOLOR':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,139,-126,-128,-129,-127,-125,-122,139,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'WHILE':([16,21,22,28,80,104,110,121,124,132,134,135,150,154,156,165,173,182,200,222,225,233,238,242,243,248,],[-7,-10,-8,-9,137,-126,-128,-129,-127,-125,-122,137,-97,-124,-130,-123,-91,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CNE':([40,41,43,44,45,46,47,48,68,69,70,74,91,93,95,96,97,98,136,145,146,175,201,203,216,],[66,-66,-67,-51,-61,-132,-65,-69,-132,-58,-56,-132,-50,-53,-57,-72,-68,-71,-69,-64,-52,-62,-74,-75,-70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_list':([39,84,],[57,142,]),'id_or_array':([136,187,],[169,169,]),'empty':([0,2,8,13,24,30,39,40,46,50,53,68,74,80,135,148,202,238,],[4,10,4,10,29,35,56,58,69,78,83,93,96,102,102,178,217,242,]),'variable_declarator':([3,23,],[14,14,]),'numeric_expression':([34,59,67,77,80,90,109,135,147,148,149,152,153,155,161,163,166,168,172,197,198,206,207,215,218,223,236,239,],[40,88,40,40,40,146,40,40,40,177,40,40,40,40,40,40,40,40,40,40,40,40,40,40,177,40,40,40,]),'function_call':([74,],[98,]),'args':([148,],[180,]),'parameter_list2':([53,],[82,]),'method_declaration3':([54,],[85,]),'psize':([80,135,],[105,105,]),'loop_statement':([80,135,],[104,104,]),'variable_declaration3':([14,],[22,]),'block_statement2':([80,135,],[106,167,]),'seen_id':([15,],[24,]),'seen_id_or_func':([48,136,],[74,74,]),'seen_LSQUARE':([99,170,],[147,197,]),'seen_function_id':([27,],[33,]),'program3':([2,13,],[11,20,]),'method_declaration2':([39,],[54,]),'seen_while_LPAR':([171,],[198,]),'compare_symbols':([40,],[59,]),'pdown':([80,135,],[108,108,]),'seen_assignment2':([247,],[249,]),'term2':([46,],[70,]),'print_statement':([80,135,],[110,110,]),'seen_rpar':([145,],[175,]),'seen_comp':([88,],[144,]),'superexpression':([34,67,77,80,109,135,147,149,152,153,155,161,163,166,168,172,197,198,206,207,215,223,236,239,],[49,89,101,113,151,113,176,181,183,184,185,191,193,195,196,199,213,214,220,221,228,232,240,245,]),'geometry_statement':([80,135,],[115,115,]),'factor':([34,59,67,73,77,80,90,109,135,147,148,149,152,153,155,161,163,166,168,172,197,198,206,207,215,218,223,236,239,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'read_statement':([80,135,],[121,121,]),'setp':([80,135,],[118,118,]),'block_statement':([52,141,143,224,244,],[81,173,174,233,248,]),'if_statement2':([238,],[243,]),'numeric_expression2':([68,],[91,]),'geomOp':([46,],[73,]),'parameter':([39,84,],[53,53,]),'program2':([0,8,],[2,17,]),'type':([0,8,12,39,80,84,135,],[3,3,19,55,3,55,3,]),'arithOp':([68,],[90,]),'program':([0,],[5,]),'seen_term':([44,],[68,]),'move':([80,135,],[140,140,]),'seen_condition_block':([233,],[238,]),'rotate':([80,135,],[123,123,]),'seen_arg':([177,],[202,]),'return':([80,135,],[124,124,]),'more_args':([202,],[219,]),'variable_declaration2':([3,23,],[16,28,]),'seen_func_id':([74,],[100,]),'home':([80,135,],[127,127,]),'variable_assignment':([80,135,158,241,],[131,131,188,247,]),'main_method':([18,],[26,]),'seen_loop_block':([173,],[200,]),'pclear':([80,135,],[129,129,]),'variable_declarator2':([24,],[30,]),'compare':([40,],[65,]),'term':([34,59,67,73,77,80,90,109,135,147,148,149,152,153,155,161,163,166,168,172,197,198,206,207,215,218,223,236,239,],[44,44,44,95,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'cst_expression':([34,59,67,73,77,80,90,109,135,147,148,149,152,153,155,161,163,166,168,172,197,198,206,207,215,218,223,236,239,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'seen_lpar':([42,],[67,]),'main_ahead':([11,],[18,]),'seen_while_exp':([214,],[227,]),'cst_expression2':([74,],[97,]),'if_statement':([80,135,],[132,132,]),'seen_condition':([211,],[224,]),'seen_RSQUARE':([201,226,],[216,234,]),'variable_declaration':([0,8,80,135,],[8,8,134,134,]),'statement':([80,135,],[135,135,]),'variable_declarator3':([30,],[36,]),'seen_for_exp':([232,],[237,]),'seen_method_start':([86,],[143,]),'seen_assignment1':([188,],[209,]),'expression':([34,67,77,80,109,135,147,149,152,153,155,161,163,166,168,172,197,198,206,207,215,223,236,239,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'pcolor':([80,135,],[138,138,]),'arg':([148,218,],[179,229,]),'method_declaration':([2,13,],[13,13,]),'arc':([80,135,],[107,107,]),'andor':([50,],[77,]),'loophead':([80,135,],[141,141,]),'pup':([80,135,],[119,119,]),'superexpression2':([50,],[79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program2 program3 main_ahead main_method','program',4,'p_program','parser.py',32),
  ('main_ahead -> <empty>','main_ahead',0,'p_main_ahead','parser.py',37),
  ('program2 -> variable_declaration program2','program2',2,'p_program2','parser.py',49),
  ('program2 -> empty','program2',1,'p_program2','parser.py',50),
  ('program3 -> method_declaration program3','program3',2,'p_program3','parser.py',53),
  ('program3 -> empty','program3',1,'p_program3','parser.py',54),
  ('variable_declaration -> type variable_declaration2','variable_declaration',2,'p_variable_declaration','parser.py',57),
  ('variable_declaration2 -> variable_declarator variable_declaration3','variable_declaration2',2,'p_variable_declaration2','parser.py',60),
  ('variable_declaration3 -> COMMA variable_declaration2','variable_declaration3',2,'p_variable_declaration3','parser.py',63),
  ('variable_declaration3 -> SEMICOLON','variable_declaration3',1,'p_variable_declaration3','parser.py',64),
  ('variable_declarator -> ID seen_id variable_declarator2 variable_declarator3','variable_declarator',4,'p_variable_declarator','parser.py',67),
  ('seen_id -> <empty>','seen_id',0,'p_seen_id','parser.py',71),
  ('variable_declarator2 -> LSQUARE CSTINT RSQUARE','variable_declarator2',3,'p_variable_declarator2','parser.py',74),
  ('variable_declarator2 -> empty','variable_declarator2',1,'p_variable_declarator2','parser.py',75),
  ('variable_declarator3 -> = superexpression','variable_declarator3',2,'p_variable_declarator3','parser.py',83),
  ('variable_declarator3 -> empty','variable_declarator3',1,'p_variable_declarator3','parser.py',84),
  ('method_declaration -> FUNC type ID seen_function_id ( method_declaration2 method_declaration3','method_declaration',7,'p_method_declaration','parser.py',105),
  ('seen_function_id -> <empty>','seen_function_id',0,'p_seen_function_id','parser.py',111),
  ('method_declaration2 -> parameter_list','method_declaration2',1,'p_method_declaration2','parser.py',120),
  ('method_declaration2 -> empty','method_declaration2',1,'p_method_declaration2','parser.py',121),
  ('method_declaration3 -> ) seen_method_start block_statement','method_declaration3',3,'p_method_declaration3','parser.py',124),
  ('seen_method_start -> <empty>','seen_method_start',0,'p_seen_method_start','parser.py',127),
  ('parameter_list -> parameter parameter_list2','parameter_list',2,'p_parameter_list','parser.py',132),
  ('parameter_list2 -> COMMA parameter_list','parameter_list2',2,'p_parameter_list','parser.py',133),
  ('parameter_list2 -> empty','parameter_list2',1,'p_parameter_list','parser.py',134),
  ('parameter -> type ID','parameter',2,'p_parameter','parser.py',137),
  ('main_method -> MAIN CHEESE ( ) block_statement','main_method',5,'p_main_method','parser.py',144),
  ('type -> INT','type',1,'p_type','parser.py',147),
  ('type -> DOUBLE','type',1,'p_type','parser.py',148),
  ('type -> STRING','type',1,'p_type','parser.py',149),
  ('type -> VOID','type',1,'p_type','parser.py',150),
  ('variable_assignment -> ID id_or_array','variable_assignment',2,'p_variable_assignment','parser.py',156),
  ('id_or_array -> = superexpression','id_or_array',2,'p_id_or_array','parser.py',159),
  ('id_or_array -> LSQUARE seen_LSQUARE superexpression RSQUARE seen_RSQUARE = superexpression','id_or_array',7,'p_id_or_array','parser.py',160),
  ('superexpression -> expression superexpression2','superexpression',2,'p_superexpression','parser.py',240),
  ('superexpression2 -> andor superexpression','superexpression2',2,'p_superexpression2','parser.py',243),
  ('superexpression2 -> empty','superexpression2',1,'p_superexpression2','parser.py',244),
  ('andor -> AND','andor',1,'p_andor','parser.py',247),
  ('andor -> OR','andor',1,'p_andor','parser.py',248),
  ('expression -> numeric_expression compare','expression',2,'p_expression','parser.py',253),
  ('compare -> compare_symbols numeric_expression seen_comp','compare',3,'p_compare','parser.py',275),
  ('compare -> empty','compare',1,'p_compare','parser.py',276),
  ('compare_symbols -> CEQ','compare_symbols',1,'p_compare_symbols','parser.py',279),
  ('compare_symbols -> CGT','compare_symbols',1,'p_compare_symbols','parser.py',280),
  ('compare_symbols -> CGE','compare_symbols',1,'p_compare_symbols','parser.py',281),
  ('compare_symbols -> CLT','compare_symbols',1,'p_compare_symbols','parser.py',282),
  ('compare_symbols -> CLE','compare_symbols',1,'p_compare_symbols','parser.py',283),
  ('compare_symbols -> CNE','compare_symbols',1,'p_compare_symbols','parser.py',284),
  ('seen_comp -> <empty>','seen_comp',0,'p_seen_comp','parser.py',289),
  ('numeric_expression -> term seen_term numeric_expression2','numeric_expression',3,'p_numeric_expression','parser.py',315),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',318),
  ('numeric_expression2 -> arithOp numeric_expression','numeric_expression2',2,'p_numeric_expression2','parser.py',372),
  ('numeric_expression2 -> empty','numeric_expression2',1,'p_numeric_expression2','parser.py',373),
  ('arithOp -> +','arithOp',1,'p_arithOp','parser.py',376),
  ('arithOp -> -','arithOp',1,'p_arithOp','parser.py',377),
  ('term -> factor term2','term',2,'p_term','parser.py',382),
  ('term2 -> geomOp term','term2',2,'p_term2','parser.py',385),
  ('term2 -> empty','term2',1,'p_term2','parser.py',386),
  ('geomOp -> *','geomOp',1,'p_geomOp','parser.py',389),
  ('geomOp -> /','geomOp',1,'p_geomOp','parser.py',390),
  ('factor -> cst_expression','factor',1,'p_factor','parser.py',395),
  ('factor -> ( seen_lpar superexpression ) seen_rpar','factor',5,'p_factor','parser.py',396),
  ('seen_lpar -> <empty>','seen_lpar',0,'p_seen_lpar','parser.py',451),
  ('seen_rpar -> <empty>','seen_rpar',0,'p_seen_rpar','parser.py',456),
  ('cst_expression -> CSTDOUBLE','cst_expression',1,'p_cst_expression','parser.py',461),
  ('cst_expression -> CSTINT','cst_expression',1,'p_cst_expression','parser.py',462),
  ('cst_expression -> CSTSTRING','cst_expression',1,'p_cst_expression','parser.py',463),
  ('cst_expression -> ID seen_id_or_func cst_expression2','cst_expression',3,'p_cst_expression','parser.py',464),
  ('seen_id_or_func -> <empty>','seen_id_or_func',0,'p_seen_id_or_func','parser.py',477),
  ('cst_expression2 -> LSQUARE seen_LSQUARE superexpression RSQUARE seen_RSQUARE','cst_expression2',5,'p_cst_expression2','parser.py',483),
  ('cst_expression2 -> function_call','cst_expression2',1,'p_cst_expression2','parser.py',484),
  ('cst_expression2 -> empty','cst_expression2',1,'p_cst_expression2','parser.py',485),
  ('seen_LSQUARE -> <empty>','seen_LSQUARE',0,'p_seen_LSQUARE','parser.py',515),
  ('seen_RSQUARE -> <empty>','seen_RSQUARE',0,'p_seen_RSQUARE','parser.py',520),
  ('function_call -> seen_func_id ( args )','function_call',4,'p_function_call','parser.py',525),
  ('seen_func_id -> <empty>','seen_func_id',0,'p_seen_func_id','parser.py',537),
  ('args -> arg','args',1,'p_args','parser.py',555),
  ('args -> empty','args',1,'p_args','parser.py',556),
  ('arg -> numeric_expression seen_arg more_args','arg',3,'p_arg','parser.py',559),
  ('seen_arg -> <empty>','seen_arg',0,'p_seen_arg','parser.py',562),
  ('more_args -> COMMA arg','more_args',2,'p_more_args','parser.py',589),
  ('more_args -> empty','more_args',1,'p_more_args','parser.py',590),
  ('loop_statement -> loophead block_statement seen_loop_block','loop_statement',3,'p_loop_statement','parser.py',593),
  ('loophead -> FOR ( variable_assignment seen_assignment1 SEMICOLON superexpression seen_for_exp SEMICOLON variable_assignment seen_assignment2 )','loophead',11,'p_loophead','parser.py',599),
  ('loophead -> WHILE ( seen_while_LPAR superexpression seen_while_exp )','loophead',6,'p_loophead','parser.py',600),
  ('seen_assignment1 -> <empty>','seen_assignment1',0,'p_seen_assignment1','parser.py',603),
  ('seen_for_exp -> <empty>','seen_for_exp',0,'p_seen_for_exp','parser.py',608),
  ('seen_assignment2 -> <empty>','seen_assignment2',0,'p_seen_assignment2','parser.py',629),
  ('seen_while_LPAR -> <empty>','seen_while_LPAR',0,'p_seen_while_LPAR','parser.py',640),
  ('seen_while_exp -> <empty>','seen_while_exp',0,'p_seen_while_exp','parser.py',645),
  ('seen_loop_block -> <empty>','seen_loop_block',0,'p_seen_loop_block','parser.py',659),
  ('if_statement -> IF ( superexpression ) seen_condition block_statement seen_condition_block if_statement2','if_statement',8,'p_if_statement','parser.py',665),
  ('seen_condition -> <empty>','seen_condition',0,'p_seen_condition','parser.py',671),
  ('seen_condition_block -> <empty>','seen_condition_block',0,'p_seen_condition_block','parser.py',683),
  ('if_statement2 -> ELSE block_statement','if_statement2',2,'p_if_statement2','parser.py',691),
  ('if_statement2 -> empty','if_statement2',1,'p_if_statement2','parser.py',692),
  ('block_statement -> LBRACKET block_statement2 RBRACKET','block_statement',3,'p_block_statement','parser.py',695),
  ('block_statement2 -> statement block_statement2','block_statement2',2,'p_block_statement','parser.py',696),
  ('block_statement2 -> empty','block_statement2',1,'p_block_statement','parser.py',697),
  ('read_statement -> SCAN ( ID ) SEMICOLON','read_statement',5,'p_read_statement','parser.py',700),
  ('print_statement -> PRINT ( superexpression ) SEMICOLON','print_statement',5,'p_print_statement','parser.py',714),
  ('geometry_statement -> move','geometry_statement',1,'p_geometry_statement','parser.py',723),
  ('geometry_statement -> rotate','geometry_statement',1,'p_geometry_statement','parser.py',724),
  ('geometry_statement -> arc','geometry_statement',1,'p_geometry_statement','parser.py',725),
  ('geometry_statement -> home','geometry_statement',1,'p_geometry_statement','parser.py',726),
  ('geometry_statement -> pdown','geometry_statement',1,'p_geometry_statement','parser.py',727),
  ('geometry_statement -> pup','geometry_statement',1,'p_geometry_statement','parser.py',728),
  ('geometry_statement -> setp','geometry_statement',1,'p_geometry_statement','parser.py',729),
  ('geometry_statement -> pcolor','geometry_statement',1,'p_geometry_statement','parser.py',730),
  ('geometry_statement -> psize','geometry_statement',1,'p_geometry_statement','parser.py',731),
  ('geometry_statement -> pclear','geometry_statement',1,'p_geometry_statement','parser.py',732),
  ('move -> MOVE ( superexpression )','move',4,'p_move','parser.py',735),
  ('rotate -> ROTATE ( superexpression )','rotate',4,'p_rotate','parser.py',746),
  ('arc -> ARC ( superexpression COMMA superexpression )','arc',6,'p_arc','parser.py',757),
  ('home -> HOME ( )','home',3,'p_home','parser.py',769),
  ('pdown -> PDOWN ( )','pdown',3,'p_pdown','parser.py',774),
  ('pup -> PUP ( )','pup',3,'p_pup','parser.py',779),
  ('setp -> SETP ( superexpression COMMA superexpression )','setp',6,'p_setp','parser.py',784),
  ('pcolor -> PCOLOR ( superexpression COMMA superexpression COMMA superexpression )','pcolor',8,'p_pcolor','parser.py',796),
  ('psize -> PSIZE ( superexpression )','psize',4,'p_psize','parser.py',809),
  ('pclear -> PCLEAR ( )','pclear',3,'p_pclear','parser.py',820),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',825),
  ('statement -> variable_assignment SEMICOLON','statement',2,'p_statement','parser.py',826),
  ('statement -> superexpression SEMICOLON','statement',2,'p_statement','parser.py',827),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',828),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',829),
  ('statement -> return','statement',1,'p_statement','parser.py',830),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',831),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',832),
  ('statement -> geometry_statement SEMICOLON','statement',2,'p_statement','parser.py',833),
  ('return -> RETURN superexpression SEMICOLON','return',3,'p_return','parser.py',836),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',849),
]
