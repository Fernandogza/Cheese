
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '805343DBCF9F76B143FCC204EFB57FBD'
    
_lr_action_items = {'(':([17,21,22,27,28,32,33,35,41,46,58,59,61,62,65,66,67,68,69,70,71,73,75,76,78,80,94,95,97,98,99,110,112,113,114,115,117,118,120,121,122,123,124,125,127,131,132,134,135,136,137,138,139,140,141,146,147,149,150,151,152,156,157,159,161,163,164,165,167,169,170,171,173,191,197,199,205,212,214,217,220,222,223,224,235,236,239,243,244,246,],[-7,-8,-10,-18,-9,38,39,41,-63,-69,41,-60,-59,41,-46,41,-43,-44,-47,-48,-45,-38,-39,41,-76,41,-73,147,-55,41,-54,153,-126,41,155,156,-125,157,158,-128,159,160,161,-69,166,-122,167,168,169,170,171,-127,-129,41,173,41,41,-124,-130,-97,-123,41,41,41,41,41,41,-91,41,41,-89,41,41,-83,41,-131,41,41,41,41,-100,-101,41,41,41,-94,-132,-92,-96,-95,]),'CLT':([43,44,46,47,48,49,50,51,60,63,78,79,89,92,93,96,100,101,125,144,148,175,201,203,216,],[-132,65,-69,-51,-67,-65,-66,-61,-56,-58,-132,-132,-57,-68,-71,-72,-50,-53,-69,-64,-52,-62,-74,-75,-70,]),'WHILE':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,136,-126,136,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'CHEESE':([26,],[32,]),'PCLEAR':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,123,-126,123,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'COMMA':([15,16,24,30,31,36,37,40,42,43,44,45,46,47,48,49,50,51,55,60,63,64,72,74,77,78,79,82,89,90,91,92,93,96,100,101,144,145,148,175,178,183,196,198,201,202,203,216,227,],[23,-12,-132,-132,-14,-16,-11,-13,-15,-132,-132,-132,-69,-51,-67,-65,-66,-61,85,-56,-58,-40,-42,-35,-37,-132,-132,-26,-57,-49,-36,-68,-71,-72,-50,-53,-64,-41,-52,-62,-80,205,212,214,-74,217,-75,-70,235,]),'MAIN':([0,3,4,7,10,11,13,14,17,18,19,21,22,28,83,151,174,],[-132,-132,-132,-4,-132,-2,-6,-3,-7,-5,26,-8,-10,-9,-17,-97,-21,]),'RSQUARE':([34,43,44,45,46,47,48,49,50,51,60,63,64,72,74,77,78,79,89,90,91,92,93,96,100,101,144,145,148,175,176,190,201,203,216,],[40,-132,-132,-132,-69,-51,-67,-65,-66,-61,-56,-58,-40,-42,-35,-37,-132,-132,-57,-49,-36,-68,-71,-72,-50,-53,-64,-41,-52,-62,201,209,-74,-75,-70,]),'LSQUARE':([16,24,46,78,125,193,],[-12,29,-69,94,164,164,]),'CEQ':([43,44,46,47,48,49,50,51,60,63,78,79,89,92,93,96,100,101,125,144,148,175,201,203,216,],[-132,67,-69,-51,-67,-65,-66,-61,-56,-58,-132,-132,-57,-68,-71,-72,-50,-53,-69,-64,-52,-62,-74,-75,-70,]),'LBRACKET':([52,84,126,142,215,228,234,242,248,],[80,-22,80,80,-93,80,-85,80,-84,]),'+':([43,46,47,48,49,50,51,60,63,78,79,89,92,93,96,125,144,175,201,203,216,],[-132,-69,-51,-67,-65,-66,-61,-56,-58,-132,99,-57,-68,-71,-72,-69,-64,-62,-74,-75,-70,]),'/':([43,46,48,49,50,51,78,92,93,96,125,144,175,201,203,216,],[59,-69,-67,-65,-66,-61,-132,-68,-71,-72,-69,-64,-62,-74,-75,-70,]),'HOME':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,110,-126,110,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'SCAN':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,114,-126,114,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'FOR':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,127,-126,127,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'SETP':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,115,-126,115,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'AND':([43,44,45,46,47,48,49,50,51,60,63,64,72,78,79,89,90,92,93,96,100,101,125,144,145,148,175,201,203,216,],[-132,-132,73,-69,-51,-67,-65,-66,-61,-56,-58,-40,-42,-132,-132,-57,-49,-68,-71,-72,-50,-53,-69,-64,-41,-52,-62,-74,-75,-70,]),'ELSE':([151,236,239,],[-97,-94,242,]),'CNE':([43,44,46,47,48,49,50,51,60,63,78,79,89,92,93,96,100,101,125,144,148,175,201,203,216,],[-132,70,-69,-51,-67,-65,-66,-61,-56,-58,-132,-132,-57,-68,-71,-72,-50,-53,-69,-64,-52,-62,-74,-75,-70,]),'SEMICOLON':([15,16,24,30,31,36,37,40,42,43,44,45,46,47,48,49,50,51,60,63,64,72,74,77,78,79,89,90,91,92,93,96,100,101,102,103,104,106,107,108,109,111,116,119,125,128,130,133,144,145,148,162,172,175,181,185,187,189,192,195,201,203,204,206,207,208,210,211,216,230,231,232,233,237,241,],[22,-12,-132,-132,-14,-16,-11,-13,-15,-132,-132,-132,-69,-51,-67,-65,-66,-61,-56,-58,-40,-42,-35,-37,-132,-132,-57,-49,-36,-68,-71,-72,-50,-53,149,-111,150,152,-108,-110,-107,-104,-109,-102,-69,-103,-105,-106,-64,-41,-52,-32,199,-62,-115,-117,-121,-33,-86,-116,-74,-75,220,-113,-112,222,224,-120,-70,-118,-34,-87,-114,240,-119,]),'STRING':([0,4,12,17,21,22,28,39,80,85,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[5,5,5,-7,-8,-10,-9,5,5,5,-126,5,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'PUP':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,120,-126,120,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'RBRACKET':([17,21,22,28,80,105,112,113,117,121,129,131,138,139,149,150,151,152,154,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,-132,151,-126,-132,-125,-128,-99,-122,-127,-129,-124,-130,-97,-123,-98,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'MOVE':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,122,-126,122,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'PRINT':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,124,-126,124,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'VOID':([0,4,12,17,21,22,28,39,80,85,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[6,6,6,-7,-8,-10,-9,6,6,6,-126,6,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'CSTSTRING':([17,21,22,28,35,41,58,59,61,62,65,66,67,68,69,70,71,73,75,76,80,94,97,98,99,112,113,117,121,131,138,139,140,146,147,149,150,151,152,156,157,159,161,163,164,165,167,169,170,171,173,191,197,199,205,212,214,217,220,222,223,224,235,236,239,243,244,246,],[-7,-8,-10,-9,48,-63,48,-60,-59,48,-46,48,-43,-44,-47,-48,-45,-38,-39,48,48,-73,-55,48,-54,-126,48,-125,-128,-122,-127,-129,48,48,48,-124,-130,-97,-123,48,48,48,48,48,48,-91,48,48,-89,48,48,-83,48,-131,48,48,48,48,-100,-101,48,48,48,-94,-132,-92,-96,-95,]),'CSTDOUBLE':([17,21,22,28,35,41,58,59,61,62,65,66,67,68,69,70,71,73,75,76,80,94,97,98,99,112,113,117,121,131,138,139,140,146,147,149,150,151,152,156,157,159,161,163,164,165,167,169,170,171,173,191,197,199,205,212,214,217,220,222,223,224,235,236,239,243,244,246,],[-7,-8,-10,-9,49,-63,49,-60,-59,49,-46,49,-43,-44,-47,-48,-45,-38,-39,49,49,-73,-55,49,-54,-126,49,-125,-128,-122,-127,-129,49,49,49,-124,-130,-97,-123,49,49,49,49,49,49,-91,49,49,-89,49,49,-83,49,-131,49,49,49,49,-100,-101,49,49,49,-94,-132,-92,-96,-95,]),'ID':([2,5,6,8,9,17,20,21,22,23,28,35,41,53,58,59,61,62,65,66,67,68,69,70,71,73,75,76,80,94,97,98,99,112,113,117,121,131,138,139,140,146,147,149,150,151,152,155,156,157,159,161,163,164,165,166,167,169,170,171,173,191,197,199,205,212,214,217,220,222,223,224,235,236,239,240,243,244,246,],[-29,-30,-31,-28,16,-7,27,-8,-10,16,-9,46,-63,82,46,-60,-59,46,-46,46,-43,-44,-47,-48,-45,-38,-39,46,125,-73,-55,46,-54,-126,125,-125,-128,-122,-127,-129,46,46,46,-124,-130,-97,-123,182,46,46,46,46,46,46,-91,193,46,46,-89,46,46,-83,46,-131,46,46,46,46,-100,-101,46,46,46,-94,-132,193,-92,-96,-95,]),'*':([43,46,48,49,50,51,78,92,93,96,125,144,175,201,203,216,],[61,-69,-67,-65,-66,-61,-132,-68,-71,-72,-69,-64,-62,-74,-75,-70,]),'FUNC':([0,3,4,7,10,14,17,21,22,28,83,151,174,],[-132,12,-132,-4,12,-3,-7,-8,-10,-9,-17,-97,-21,]),'PSIZE':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,132,-126,132,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),')':([38,39,43,44,45,46,47,48,49,50,51,54,55,56,57,60,63,64,72,74,77,78,79,82,86,87,88,89,90,91,92,93,96,100,101,143,144,145,147,148,153,158,160,162,168,175,177,178,179,180,182,184,186,188,189,194,200,201,202,203,213,216,218,219,221,225,226,229,231,238,245,247,],[52,-132,-132,-132,-132,-69,-51,-67,-65,-66,-61,84,-132,-20,-19,-56,-58,-40,-42,-35,-37,-132,-132,-26,-25,-23,144,-57,-49,-36,-68,-71,-72,-50,-53,-24,-64,-41,-132,-52,181,185,187,-32,195,-62,-78,-80,-77,203,204,206,207,208,-33,211,215,-74,-132,-75,-90,-70,-82,-79,230,233,234,-81,-34,241,-88,248,]),'OR':([43,44,45,46,47,48,49,50,51,60,63,64,72,78,79,89,90,92,93,96,100,101,125,144,145,148,175,201,203,216,],[-132,-132,75,-69,-51,-67,-65,-66,-61,-56,-58,-40,-42,-132,-132,-57,-49,-68,-71,-72,-50,-53,-69,-64,-41,-52,-62,-74,-75,-70,]),'$end':([1,25,81,151,],[0,-1,-27,-97,]),'=':([16,24,30,31,40,125,193,209,],[-12,-132,35,-14,-13,163,163,223,]),'PDOWN':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,134,-126,134,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'-':([43,46,47,48,49,50,51,60,63,78,79,89,92,93,96,125,144,175,201,203,216,],[-132,-69,-51,-67,-65,-66,-61,-56,-58,-132,97,-57,-68,-71,-72,-69,-64,-62,-74,-75,-70,]),'DOUBLE':([0,4,12,17,21,22,28,39,80,85,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[2,2,2,-7,-8,-10,-9,2,2,2,-126,2,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'ARC':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,135,-126,135,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'ROTATE':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,118,-126,118,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'PCOLOR':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,137,-126,137,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'CGE':([43,44,46,47,48,49,50,51,60,63,78,79,89,92,93,96,100,101,125,144,148,175,201,203,216,],[-132,71,-69,-51,-67,-65,-66,-61,-56,-58,-132,-132,-57,-68,-71,-72,-50,-53,-69,-64,-52,-62,-74,-75,-70,]),'RETURN':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,140,-126,140,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'IF':([17,21,22,28,80,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[-7,-8,-10,-9,141,-126,141,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'CGT':([43,44,46,47,48,49,50,51,60,63,78,79,89,92,93,96,100,101,125,144,148,175,201,203,216,],[-132,68,-69,-51,-67,-65,-66,-61,-56,-58,-132,-132,-57,-68,-71,-72,-50,-53,-69,-64,-52,-62,-74,-75,-70,]),'CLE':([43,44,46,47,48,49,50,51,60,63,78,79,89,92,93,96,100,101,125,144,148,175,201,203,216,],[-132,69,-69,-51,-67,-65,-66,-61,-56,-58,-132,-132,-57,-68,-71,-72,-50,-53,-69,-64,-52,-62,-74,-75,-70,]),'INT':([0,4,12,17,21,22,28,39,80,85,112,113,117,121,131,138,139,149,150,151,152,165,191,199,220,222,236,239,243,244,246,],[8,8,8,-7,-8,-10,-9,8,8,8,-126,8,-125,-128,-122,-127,-129,-124,-130,-97,-123,-91,-83,-131,-100,-101,-94,-132,-92,-96,-95,]),'CSTINT':([17,21,22,28,29,35,41,58,59,61,62,65,66,67,68,69,70,71,73,75,76,80,94,97,98,99,112,113,117,121,131,138,139,140,146,147,149,150,151,152,156,157,159,161,163,164,165,167,169,170,171,173,191,197,199,205,212,214,217,220,222,223,224,235,236,239,243,244,246,],[-7,-8,-10,-9,34,50,-63,50,-60,-59,50,-46,50,-43,-44,-47,-48,-45,-38,-39,50,50,-73,-55,50,-54,-126,50,-125,-128,-122,-127,-129,50,50,50,-124,-130,-97,-123,50,50,50,50,50,50,-91,50,50,-89,50,50,-83,50,-131,50,50,50,50,-100,-101,50,50,50,-94,-132,-92,-96,-95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'superexpression':([35,58,76,80,113,140,146,156,157,159,161,163,164,167,169,171,173,197,205,212,214,223,224,235,],[42,88,91,102,102,172,176,183,184,186,188,189,190,194,196,198,200,213,221,225,227,231,232,238,]),'setp':([80,113,],[107,107,]),'pclear':([80,113,],[103,103,]),'main_method':([19,],[25,]),'seen_arg':([178,],[202,]),'geometry_statement':([80,113,],[104,104,]),'program2':([0,4,],[3,14,]),'move':([80,113,],[119,119,]),'variable_assignment':([80,113,166,240,],[106,106,192,245,]),'seen_condition':([215,],[228,]),'loophead':([80,113,],[126,126,]),'psize':([80,113,],[108,108,]),'method_declaration3':([54,],[83,]),'numeric_expression':([35,58,66,76,80,98,113,140,146,147,156,157,159,161,163,164,167,169,171,173,197,205,212,214,217,223,224,235,],[44,44,90,44,44,148,44,44,44,178,44,44,44,44,44,44,44,44,44,44,44,44,44,44,178,44,44,44,]),'pup':([80,113,],[109,109,]),'id_or_array':([125,193,],[162,162,]),'arg':([147,217,],[179,229,]),'read_statement':([80,113,],[139,139,]),'seen_func_id':([78,],[95,]),'print_statement':([80,113,],[121,121,]),'main_ahead':([11,],[19,]),'statement':([80,113,],[113,113,]),'seen_id':([16,],[24,]),'pcolor':([80,113,],[116,116,]),'cst_expression2':([78,],[92,]),'compare_symbols':([44,],[66,]),'variable_declaration3':([15,],[21,]),'if_statement':([80,113,],[117,117,]),'return':([80,113,],[138,138,]),'block_statement':([52,126,142,228,242,],[81,165,174,236,246,]),'seen_for_exp':([232,],[237,]),'andor':([45,],[76,]),'variable_declarator3':([30,],[37,]),'geomOp':([43,],[62,]),'seen_term':([47,],[79,]),'seen_method_start':([84,],[142,]),'seen_id_or_func':([46,125,],[78,78,]),'seen_function_id':([27,],[33,]),'more_args':([202,],[219,]),'if_statement2':([239,],[243,]),'rotate':([80,113,],[128,128,]),'loop_statement':([80,113,],[112,112,]),'type':([0,4,12,39,80,85,113,],[9,9,20,53,9,53,9,]),'program':([0,],[1,]),'home':([80,113,],[130,130,]),'variable_declarator':([9,23,],[15,15,]),'arithOp':([79,],[98,]),'seen_rpar':([144,],[175,]),'seen_assignment1':([192,],[210,]),'variable_declaration':([0,4,80,113,],[4,4,131,131,]),'block_statement2':([80,113,],[105,154,]),'method_declaration':([3,10,],[10,10,]),'seen_RSQUARE':([201,],[216,]),'program3':([3,10,],[11,18,]),'parameter':([39,85,],[55,55,]),'seen_condition_block':([236,],[239,]),'seen_lpar':([41,],[58,]),'seen_LSQUARE':([94,],[146,]),'seen_loop_block':([165,],[191,]),'seen_while_exp':([213,],[226,]),'pdown':([80,113,],[133,133,]),'arc':([80,113,],[111,111,]),'term':([35,58,62,66,76,80,98,113,140,146,147,156,157,159,161,163,164,167,169,171,173,197,205,212,214,217,223,224,235,],[47,47,89,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'parameter_list2':([55,],[87,]),'parameter_list':([39,85,],[57,143,]),'seen_comp':([90,],[145,]),'variable_declarator2':([24,],[30,]),'args':([147,],[180,]),'function_call':([78,],[93,]),'numeric_expression2':([79,],[100,]),'seen_while_LPAR':([170,],[197,]),'compare':([44,],[64,]),'expression':([35,58,76,80,113,140,146,156,157,159,161,163,164,167,169,171,173,197,205,212,214,223,224,235,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'factor':([35,58,62,66,76,80,98,113,140,146,147,156,157,159,161,163,164,167,169,171,173,197,205,212,214,217,223,224,235,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'term2':([43,],[60,]),'empty':([0,3,4,10,24,30,39,43,44,45,55,78,79,80,113,147,202,239,],[7,13,7,13,31,36,56,63,72,77,86,96,101,129,129,177,218,244,]),'method_declaration2':([39,],[54,]),'seen_assignment2':([245,],[247,]),'variable_declaration2':([9,23,],[17,28,]),'superexpression2':([45,],[74,]),'cst_expression':([35,58,62,66,76,80,98,113,140,146,147,156,157,159,161,163,164,167,169,171,173,197,205,212,214,217,223,224,235,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program2 program3 main_ahead main_method','program',4,'p_program','parser.py',32),
  ('main_ahead -> <empty>','main_ahead',0,'p_main_ahead','parser.py',37),
  ('program2 -> variable_declaration program2','program2',2,'p_program2','parser.py',49),
  ('program2 -> empty','program2',1,'p_program2','parser.py',50),
  ('program3 -> method_declaration program3','program3',2,'p_program3','parser.py',53),
  ('program3 -> empty','program3',1,'p_program3','parser.py',54),
  ('variable_declaration -> type variable_declaration2','variable_declaration',2,'p_variable_declaration','parser.py',57),
  ('variable_declaration2 -> variable_declarator variable_declaration3','variable_declaration2',2,'p_variable_declaration2','parser.py',60),
  ('variable_declaration3 -> COMMA variable_declaration2','variable_declaration3',2,'p_variable_declaration3','parser.py',63),
  ('variable_declaration3 -> SEMICOLON','variable_declaration3',1,'p_variable_declaration3','parser.py',64),
  ('variable_declarator -> ID seen_id variable_declarator2 variable_declarator3','variable_declarator',4,'p_variable_declarator','parser.py',67),
  ('seen_id -> <empty>','seen_id',0,'p_seen_id','parser.py',71),
  ('variable_declarator2 -> LSQUARE CSTINT RSQUARE','variable_declarator2',3,'p_variable_declarator2','parser.py',74),
  ('variable_declarator2 -> empty','variable_declarator2',1,'p_variable_declarator2','parser.py',75),
  ('variable_declarator3 -> = superexpression','variable_declarator3',2,'p_variable_declarator3','parser.py',83),
  ('variable_declarator3 -> empty','variable_declarator3',1,'p_variable_declarator3','parser.py',84),
  ('method_declaration -> FUNC type ID seen_function_id ( method_declaration2 method_declaration3','method_declaration',7,'p_method_declaration','parser.py',105),
  ('seen_function_id -> <empty>','seen_function_id',0,'p_seen_function_id','parser.py',111),
  ('method_declaration2 -> parameter_list','method_declaration2',1,'p_method_declaration2','parser.py',120),
  ('method_declaration2 -> empty','method_declaration2',1,'p_method_declaration2','parser.py',121),
  ('method_declaration3 -> ) seen_method_start block_statement','method_declaration3',3,'p_method_declaration3','parser.py',124),
  ('seen_method_start -> <empty>','seen_method_start',0,'p_seen_method_start','parser.py',127),
  ('parameter_list -> parameter parameter_list2','parameter_list',2,'p_parameter_list','parser.py',132),
  ('parameter_list2 -> COMMA parameter_list','parameter_list2',2,'p_parameter_list','parser.py',133),
  ('parameter_list2 -> empty','parameter_list2',1,'p_parameter_list','parser.py',134),
  ('parameter -> type ID','parameter',2,'p_parameter','parser.py',137),
  ('main_method -> MAIN CHEESE ( ) block_statement','main_method',5,'p_main_method','parser.py',144),
  ('type -> INT','type',1,'p_type','parser.py',147),
  ('type -> DOUBLE','type',1,'p_type','parser.py',148),
  ('type -> STRING','type',1,'p_type','parser.py',149),
  ('type -> VOID','type',1,'p_type','parser.py',150),
  ('variable_assignment -> ID id_or_array','variable_assignment',2,'p_variable_assignment','parser.py',156),
  ('id_or_array -> = superexpression','id_or_array',2,'p_id_or_array','parser.py',159),
  ('id_or_array -> LSQUARE superexpression RSQUARE = superexpression','id_or_array',5,'p_id_or_array','parser.py',160),
  ('superexpression -> expression superexpression2','superexpression',2,'p_superexpression','parser.py',182),
  ('superexpression2 -> andor superexpression','superexpression2',2,'p_superexpression2','parser.py',185),
  ('superexpression2 -> empty','superexpression2',1,'p_superexpression2','parser.py',186),
  ('andor -> AND','andor',1,'p_andor','parser.py',189),
  ('andor -> OR','andor',1,'p_andor','parser.py',190),
  ('expression -> numeric_expression compare','expression',2,'p_expression','parser.py',195),
  ('compare -> compare_symbols numeric_expression seen_comp','compare',3,'p_compare','parser.py',217),
  ('compare -> empty','compare',1,'p_compare','parser.py',218),
  ('compare_symbols -> CEQ','compare_symbols',1,'p_compare_symbols','parser.py',221),
  ('compare_symbols -> CGT','compare_symbols',1,'p_compare_symbols','parser.py',222),
  ('compare_symbols -> CGE','compare_symbols',1,'p_compare_symbols','parser.py',223),
  ('compare_symbols -> CLT','compare_symbols',1,'p_compare_symbols','parser.py',224),
  ('compare_symbols -> CLE','compare_symbols',1,'p_compare_symbols','parser.py',225),
  ('compare_symbols -> CNE','compare_symbols',1,'p_compare_symbols','parser.py',226),
  ('seen_comp -> <empty>','seen_comp',0,'p_seen_comp','parser.py',231),
  ('numeric_expression -> term seen_term numeric_expression2','numeric_expression',3,'p_numeric_expression','parser.py',257),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',260),
  ('numeric_expression2 -> arithOp numeric_expression','numeric_expression2',2,'p_numeric_expression2','parser.py',314),
  ('numeric_expression2 -> empty','numeric_expression2',1,'p_numeric_expression2','parser.py',315),
  ('arithOp -> +','arithOp',1,'p_arithOp','parser.py',318),
  ('arithOp -> -','arithOp',1,'p_arithOp','parser.py',319),
  ('term -> factor term2','term',2,'p_term','parser.py',324),
  ('term2 -> geomOp term','term2',2,'p_term2','parser.py',327),
  ('term2 -> empty','term2',1,'p_term2','parser.py',328),
  ('geomOp -> *','geomOp',1,'p_geomOp','parser.py',331),
  ('geomOp -> /','geomOp',1,'p_geomOp','parser.py',332),
  ('factor -> cst_expression','factor',1,'p_factor','parser.py',337),
  ('factor -> ( seen_lpar superexpression ) seen_rpar','factor',5,'p_factor','parser.py',338),
  ('seen_lpar -> <empty>','seen_lpar',0,'p_seen_lpar','parser.py',393),
  ('seen_rpar -> <empty>','seen_rpar',0,'p_seen_rpar','parser.py',398),
  ('cst_expression -> CSTDOUBLE','cst_expression',1,'p_cst_expression','parser.py',403),
  ('cst_expression -> CSTINT','cst_expression',1,'p_cst_expression','parser.py',404),
  ('cst_expression -> CSTSTRING','cst_expression',1,'p_cst_expression','parser.py',405),
  ('cst_expression -> ID seen_id_or_func cst_expression2','cst_expression',3,'p_cst_expression','parser.py',406),
  ('seen_id_or_func -> <empty>','seen_id_or_func',0,'p_seen_id_or_func','parser.py',419),
  ('cst_expression2 -> LSQUARE seen_LSQUARE superexpression RSQUARE seen_RSQUARE','cst_expression2',5,'p_cst_expression2','parser.py',425),
  ('cst_expression2 -> function_call','cst_expression2',1,'p_cst_expression2','parser.py',426),
  ('cst_expression2 -> empty','cst_expression2',1,'p_cst_expression2','parser.py',427),
  ('seen_LSQUARE -> <empty>','seen_LSQUARE',0,'p_seen_LSQUARE','parser.py',457),
  ('seen_RSQUARE -> <empty>','seen_RSQUARE',0,'p_seen_RSQUARE','parser.py',462),
  ('function_call -> seen_func_id ( args )','function_call',4,'p_function_call','parser.py',467),
  ('seen_func_id -> <empty>','seen_func_id',0,'p_seen_func_id','parser.py',479),
  ('args -> arg','args',1,'p_args','parser.py',497),
  ('args -> empty','args',1,'p_args','parser.py',498),
  ('arg -> numeric_expression seen_arg more_args','arg',3,'p_arg','parser.py',501),
  ('seen_arg -> <empty>','seen_arg',0,'p_seen_arg','parser.py',504),
  ('more_args -> COMMA arg','more_args',2,'p_more_args','parser.py',531),
  ('more_args -> empty','more_args',1,'p_more_args','parser.py',532),
  ('loop_statement -> loophead block_statement seen_loop_block','loop_statement',3,'p_loop_statement','parser.py',535),
  ('loophead -> FOR ( variable_assignment seen_assignment1 SEMICOLON superexpression seen_for_exp SEMICOLON variable_assignment seen_assignment2 )','loophead',11,'p_loophead','parser.py',541),
  ('loophead -> WHILE ( seen_while_LPAR superexpression seen_while_exp )','loophead',6,'p_loophead','parser.py',542),
  ('seen_assignment1 -> <empty>','seen_assignment1',0,'p_seen_assignment1','parser.py',545),
  ('seen_for_exp -> <empty>','seen_for_exp',0,'p_seen_for_exp','parser.py',550),
  ('seen_assignment2 -> <empty>','seen_assignment2',0,'p_seen_assignment2','parser.py',571),
  ('seen_while_LPAR -> <empty>','seen_while_LPAR',0,'p_seen_while_LPAR','parser.py',582),
  ('seen_while_exp -> <empty>','seen_while_exp',0,'p_seen_while_exp','parser.py',587),
  ('seen_loop_block -> <empty>','seen_loop_block',0,'p_seen_loop_block','parser.py',601),
  ('if_statement -> IF ( superexpression ) seen_condition block_statement seen_condition_block if_statement2','if_statement',8,'p_if_statement','parser.py',607),
  ('seen_condition -> <empty>','seen_condition',0,'p_seen_condition','parser.py',613),
  ('seen_condition_block -> <empty>','seen_condition_block',0,'p_seen_condition_block','parser.py',625),
  ('if_statement2 -> ELSE block_statement','if_statement2',2,'p_if_statement2','parser.py',633),
  ('if_statement2 -> empty','if_statement2',1,'p_if_statement2','parser.py',634),
  ('block_statement -> LBRACKET block_statement2 RBRACKET','block_statement',3,'p_block_statement','parser.py',637),
  ('block_statement2 -> statement block_statement2','block_statement2',2,'p_block_statement','parser.py',638),
  ('block_statement2 -> empty','block_statement2',1,'p_block_statement','parser.py',639),
  ('read_statement -> SCAN ( ID ) SEMICOLON','read_statement',5,'p_read_statement','parser.py',642),
  ('print_statement -> PRINT ( superexpression ) SEMICOLON','print_statement',5,'p_print_statement','parser.py',656),
  ('geometry_statement -> move','geometry_statement',1,'p_geometry_statement','parser.py',665),
  ('geometry_statement -> rotate','geometry_statement',1,'p_geometry_statement','parser.py',666),
  ('geometry_statement -> arc','geometry_statement',1,'p_geometry_statement','parser.py',667),
  ('geometry_statement -> home','geometry_statement',1,'p_geometry_statement','parser.py',668),
  ('geometry_statement -> pdown','geometry_statement',1,'p_geometry_statement','parser.py',669),
  ('geometry_statement -> pup','geometry_statement',1,'p_geometry_statement','parser.py',670),
  ('geometry_statement -> setp','geometry_statement',1,'p_geometry_statement','parser.py',671),
  ('geometry_statement -> pcolor','geometry_statement',1,'p_geometry_statement','parser.py',672),
  ('geometry_statement -> psize','geometry_statement',1,'p_geometry_statement','parser.py',673),
  ('geometry_statement -> pclear','geometry_statement',1,'p_geometry_statement','parser.py',674),
  ('move -> MOVE ( superexpression )','move',4,'p_move','parser.py',677),
  ('rotate -> ROTATE ( superexpression )','rotate',4,'p_rotate','parser.py',688),
  ('arc -> ARC ( superexpression COMMA superexpression )','arc',6,'p_arc','parser.py',699),
  ('home -> HOME ( )','home',3,'p_home','parser.py',711),
  ('pdown -> PDOWN ( )','pdown',3,'p_pdown','parser.py',716),
  ('pup -> PUP ( )','pup',3,'p_pup','parser.py',721),
  ('setp -> SETP ( superexpression COMMA superexpression )','setp',6,'p_setp','parser.py',726),
  ('pcolor -> PCOLOR ( superexpression COMMA superexpression COMMA superexpression )','pcolor',8,'p_pcolor','parser.py',738),
  ('psize -> PSIZE ( superexpression )','psize',4,'p_psize','parser.py',751),
  ('pclear -> PCLEAR ( )','pclear',3,'p_pclear','parser.py',762),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',767),
  ('statement -> variable_assignment SEMICOLON','statement',2,'p_statement','parser.py',768),
  ('statement -> superexpression SEMICOLON','statement',2,'p_statement','parser.py',769),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',770),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',771),
  ('statement -> return','statement',1,'p_statement','parser.py',772),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',773),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',774),
  ('statement -> geometry_statement SEMICOLON','statement',2,'p_statement','parser.py',775),
  ('return -> RETURN superexpression SEMICOLON','return',3,'p_return','parser.py',778),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',791),
]
