
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '84CFB0000968EA0CCBD4B6AB7A398E29'
    
_lr_action_items = {'INT':([0,5,10,14,22,23,31,38,81,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[1,1,1,-7,-10,-8,-9,1,1,1,-124,-123,1,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'FUNC':([0,2,5,9,12,14,17,22,23,31,84,149,164,],[-128,10,-128,-4,10,-7,-3,-10,-8,-9,-17,-21,-93,]),'AND':([40,41,43,45,46,47,48,49,50,62,66,67,71,73,74,88,89,93,94,97,99,100,117,144,145,146,173,174,199,],[-128,-63,-128,-65,-49,-59,-67,78,-64,-40,-38,-54,-56,-128,-128,-47,-55,-48,-51,-66,-69,-70,-67,-39,-62,-50,-60,-68,-71,]),'+':([41,43,45,46,47,48,50,67,71,73,74,89,97,99,100,117,145,173,174,199,],[-63,-128,-65,-49,-59,-67,-64,-54,-56,91,-128,-55,-66,-69,-70,-67,-62,-60,-68,-71,]),'CNE':([40,41,43,45,46,47,48,50,67,71,73,74,89,93,94,97,99,100,117,145,146,173,174,199,],[63,-63,-128,-65,-49,-59,-67,-64,-54,-56,-128,-128,-55,-48,-51,-66,-69,-70,-67,-62,-50,-60,-68,-71,]),'PUP':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,106,-124,-123,106,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'SCAN':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,108,-124,-123,108,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'SETP':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,119,-124,-123,119,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'COMMA':([15,16,21,28,29,34,36,40,41,42,43,45,46,47,48,49,50,51,52,62,66,67,71,73,74,75,77,83,88,89,93,94,97,99,100,101,144,145,146,173,174,175,188,189,197,198,199,221,],[-12,24,-128,-14,-128,-11,-16,-128,-63,-15,-128,-65,-49,-59,-67,-128,-64,-13,81,-40,-38,-54,-56,-128,-128,-33,-35,-26,-47,-55,-48,-51,-66,-69,-70,-34,-39,-62,-50,-60,-68,-76,204,205,210,212,-71,228,]),'=':([15,21,28,29,51,117,196,],[-12,-128,-14,35,-13,157,157,]),'*':([41,43,45,47,48,50,74,97,99,100,117,145,173,174,199,],[-63,68,-65,-59,-67,-64,-128,-66,-69,-70,-67,-62,-60,-68,-71,]),'HOME':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,110,-124,-123,110,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'ELSE':([164,225,229,],[-93,-90,234,]),'SEMICOLON':([15,16,21,28,29,34,36,40,41,42,43,45,46,47,48,49,50,51,62,66,67,71,73,74,75,77,88,89,93,94,97,99,100,101,109,111,115,116,117,127,131,132,133,135,137,139,141,143,144,145,146,162,173,174,180,182,183,186,193,195,199,200,201,202,203,206,209,223,224,227,230,236,],[-12,22,-128,-14,-128,-11,-16,-128,-63,-15,-128,-65,-49,-59,-67,-128,-64,-13,-40,-38,-54,-56,-128,-128,-33,-35,-47,-55,-48,-51,-66,-69,-70,-34,-98,-101,-105,-99,-67,167,-107,-102,170,-104,-100,-103,171,-106,-39,-62,-50,190,-60,-68,-113,-111,-117,-32,-112,-82,-71,214,-109,-108,215,-116,220,-114,-110,-83,235,-115,]),'RSQUARE':([37,40,41,43,45,46,47,48,49,50,62,66,67,71,73,74,75,77,88,89,93,94,97,99,100,101,144,145,146,147,173,174,199,],[51,-128,-63,-128,-65,-49,-59,-67,-128,-64,-40,-38,-54,-56,-128,-128,-33,-35,-47,-55,-48,-51,-66,-69,-70,-34,-39,-62,-50,174,-60,-68,-71,]),'ROTATE':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,113,-124,-123,113,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'MOVE':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,114,-124,-123,114,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'ARC':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,120,-124,-123,120,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),')':([38,39,40,41,43,45,46,47,48,49,50,52,54,55,56,62,66,67,71,73,74,75,77,80,82,83,88,89,90,93,94,97,99,100,101,102,144,145,146,148,151,153,154,166,173,174,175,176,177,178,181,184,185,186,187,191,192,198,199,208,211,213,216,217,219,222,231,238,239,],[-128,57,-128,-63,-128,-65,-49,-59,-67,-128,-64,-128,-19,85,-20,-40,-38,-54,-56,-128,-128,-33,-35,-25,-23,-26,-47,-55,145,-48,-51,-66,-69,-70,-34,-24,-39,-62,-50,-128,180,182,183,193,-60,-68,-76,-74,-73,199,200,201,202,-32,203,206,207,-128,-71,-86,-75,-78,223,224,226,-77,236,-84,240,]),'$end':([6,27,86,164,],[0,-1,-27,-93,]),'PRINT':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,118,-124,-123,118,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'-':([41,43,45,46,47,48,50,67,71,73,74,89,97,99,100,117,145,173,174,199,],[-63,-128,-65,-49,-59,-67,-64,-54,-56,92,-128,-55,-66,-69,-70,-67,-62,-60,-68,-71,]),'WHILE':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,128,-124,-123,128,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'MAIN':([0,2,5,9,11,12,13,14,17,19,20,22,23,31,84,149,164,],[-128,-128,-128,-4,-2,-128,-6,-7,-3,26,-5,-10,-8,-9,-17,-21,-93,]),'RETURN':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,122,-124,-123,122,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'PSIZE':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,123,-124,-123,123,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'VOID':([0,5,10,14,22,23,31,38,81,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[7,7,7,-7,-10,-8,-9,7,7,7,-124,-123,7,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'DOUBLE':([0,5,10,14,22,23,31,38,81,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[3,3,3,-7,-10,-8,-9,3,3,3,-124,-123,3,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'CEQ':([40,41,43,45,46,47,48,50,67,71,73,74,89,93,94,97,99,100,117,145,146,173,174,199,],[61,-63,-128,-65,-49,-59,-67,-64,-54,-56,-128,-128,-55,-48,-51,-66,-69,-70,-67,-62,-50,-60,-68,-71,]),'CSTDOUBLE':([14,22,23,31,35,44,58,59,60,61,63,64,65,68,69,70,72,76,78,79,87,91,92,95,96,105,107,121,122,134,136,138,140,148,150,155,156,157,158,159,160,163,164,165,167,168,170,171,172,179,190,194,204,205,210,212,214,215,220,225,228,229,232,233,237,],[-7,-10,-8,-9,41,-61,-45,-43,-42,-41,-46,41,-44,-57,41,-58,41,41,-36,-37,41,-52,-53,41,41,-124,-123,41,41,-118,-125,-122,-121,41,-87,41,41,41,41,41,41,41,-93,41,-120,-85,-119,-126,41,-79,-127,41,41,41,41,41,-96,-97,41,-90,41,-128,-88,-92,-91,]),'LSQUARE':([15,21,48,74,117,],[-12,30,-67,96,-67,]),'IF':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,125,-124,-123,125,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'PDOWN':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,126,-124,-123,126,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'CGE':([40,41,43,45,46,47,48,50,67,71,73,74,89,93,94,97,99,100,117,145,146,173,174,199,],[59,-63,-128,-65,-49,-59,-67,-64,-54,-56,-128,-128,-55,-48,-51,-66,-69,-70,-67,-62,-50,-60,-68,-71,]),'LBRACKET':([57,85,103,104,207,218,226,234,240,],[87,-22,87,87,-89,87,-81,87,-80,]),'STRING':([0,5,10,14,22,23,31,38,81,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[8,8,8,-7,-10,-8,-9,8,8,8,-124,-123,8,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'FOR':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,130,-124,-123,130,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'CLT':([40,41,43,45,46,47,48,50,67,71,73,74,89,93,94,97,99,100,117,145,146,173,174,199,],[65,-63,-128,-65,-49,-59,-67,-64,-54,-56,-128,-128,-55,-48,-51,-66,-69,-70,-67,-62,-50,-60,-68,-71,]),'RBRACKET':([14,22,23,31,87,105,107,121,124,129,134,136,138,140,150,161,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,-128,-124,-123,-128,164,-95,-118,-125,-122,-121,-87,-94,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'CLE':([40,41,43,45,46,47,48,50,67,71,73,74,89,93,94,97,99,100,117,145,146,173,174,199,],[58,-63,-128,-65,-49,-59,-67,-64,-54,-56,-128,-128,-55,-48,-51,-66,-69,-70,-67,-62,-50,-60,-68,-71,]),'(':([14,22,23,25,31,32,33,35,44,48,58,59,60,61,63,64,65,68,69,70,72,74,76,78,79,87,91,92,95,96,98,105,106,107,108,110,112,113,114,117,118,119,120,121,122,123,125,126,128,130,134,136,138,140,142,148,150,155,156,157,158,159,160,163,164,165,167,168,170,171,172,179,190,194,204,205,210,212,214,215,220,225,228,229,232,233,237,],[-7,-10,-8,-18,-9,38,39,44,-61,-67,-45,-43,-42,-41,-46,44,-44,-57,44,-58,44,-72,44,-36,-37,44,-52,-53,44,44,148,-124,151,-123,152,153,154,155,156,-67,158,159,160,44,44,163,165,166,168,169,-118,-125,-122,-121,172,44,-87,44,44,44,44,44,44,44,-93,44,-120,-85,-119,-126,44,-79,-127,44,44,44,44,44,-96,-97,44,-90,44,-128,-88,-92,-91,]),'CHEESE':([26,],[33,]),'CSTSTRING':([14,22,23,31,35,44,58,59,60,61,63,64,65,68,69,70,72,76,78,79,87,91,92,95,96,105,107,121,122,134,136,138,140,148,150,155,156,157,158,159,160,163,164,165,167,168,170,171,172,179,190,194,204,205,210,212,214,215,220,225,228,229,232,233,237,],[-7,-10,-8,-9,45,-61,-45,-43,-42,-41,-46,45,-44,-57,45,-58,45,45,-36,-37,45,-52,-53,45,45,-124,-123,45,45,-118,-125,-122,-121,45,-87,45,45,45,45,45,45,45,-93,45,-120,-85,-119,-126,45,-79,-127,45,45,45,45,45,-96,-97,45,-90,45,-128,-88,-92,-91,]),'/':([41,43,45,47,48,50,74,97,99,100,117,145,173,174,199,],[-63,70,-65,-59,-67,-64,-128,-66,-69,-70,-67,-62,-60,-68,-71,]),'PCLEAR':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,112,-124,-123,112,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),'ID':([1,3,4,7,8,14,18,22,23,24,31,35,44,53,58,59,60,61,63,64,65,68,69,70,72,76,78,79,87,91,92,95,96,105,107,121,122,134,136,138,140,148,150,152,155,156,157,158,159,160,163,164,165,167,168,169,170,171,172,179,190,194,204,205,210,212,214,215,220,225,228,229,232,233,235,237,],[-28,-29,15,-31,-30,-7,25,-10,-8,15,-9,48,-61,83,-45,-43,-42,-41,-46,48,-44,-57,48,-58,48,48,-36,-37,117,-52,-53,48,48,-124,-123,117,48,-118,-125,-122,-121,48,-87,181,48,48,48,48,48,48,48,-93,48,-120,-85,196,-119,-126,48,-79,-127,48,48,48,48,48,-96,-97,48,-90,48,-128,-88,-92,196,-91,]),'CGT':([40,41,43,45,46,47,48,50,67,71,73,74,89,93,94,97,99,100,117,145,146,173,174,199,],[60,-63,-128,-65,-49,-59,-67,-64,-54,-56,-128,-128,-55,-48,-51,-66,-69,-70,-67,-62,-50,-60,-68,-71,]),'CSTINT':([14,22,23,30,31,35,44,58,59,60,61,63,64,65,68,69,70,72,76,78,79,87,91,92,95,96,105,107,121,122,134,136,138,140,148,150,155,156,157,158,159,160,163,164,165,167,168,170,171,172,179,190,194,204,205,210,212,214,215,220,225,228,229,232,233,237,],[-7,-10,-8,37,-9,50,-61,-45,-43,-42,-41,-46,50,-44,-57,50,-58,50,50,-36,-37,50,-52,-53,50,50,-124,-123,50,50,-118,-125,-122,-121,50,-87,50,50,50,50,50,50,50,-93,50,-120,-85,-119,-126,50,-79,-127,50,50,50,50,50,-96,-97,50,-90,50,-128,-88,-92,-91,]),'OR':([40,41,43,45,46,47,48,49,50,62,66,67,71,73,74,88,89,93,94,97,99,100,117,144,145,146,173,174,199,],[-128,-63,-128,-65,-49,-59,-67,79,-64,-40,-38,-54,-56,-128,-128,-47,-55,-48,-51,-66,-69,-70,-67,-39,-62,-50,-60,-68,-71,]),'PCOLOR':([14,22,23,31,87,105,107,121,134,136,138,140,150,164,167,170,171,179,190,214,215,225,229,232,233,237,],[-7,-10,-8,-9,142,-124,-123,142,-118,-125,-122,-121,-87,-93,-120,-119,-126,-79,-127,-96,-97,-90,-128,-88,-92,-91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'numeric_expression':([35,64,72,76,87,95,96,121,122,148,155,156,157,158,159,160,163,165,172,194,204,205,210,212,220,228,],[40,88,40,40,40,146,40,40,40,175,40,40,40,40,40,40,40,40,40,40,40,40,40,175,40,40,]),'variable_declarator':([4,24,],[16,16,]),'superexpression2':([49,],[75,]),'print_statement':([87,121,],[105,105,]),'type':([0,5,10,38,81,87,121,],[4,4,18,53,53,4,4,]),'block_statement':([57,103,104,218,234,],[86,149,150,225,237,]),'seen_loop_block':([150,],[179,]),'method_declaration3':([55,],[84,]),'return':([87,121,],[107,107,]),'variable_declaration2':([4,24,],[14,31,]),'seen_condition':([207,],[218,]),'home':([87,121,],[111,111,]),'compare':([40,],[66,]),'loophead':([87,121,],[104,104,]),'seen_for_exp':([227,],[230,]),'main_ahead':([11,],[19,]),'variable_declarator2':([21,],[29,]),'arithOp':([73,],[95,]),'rotate':([87,121,],[116,116,]),'seen_lpar':([44,],[72,]),'read_statement':([87,121,],[136,136,]),'seen_while_LPAR':([168,],[194,]),'numeric_expression2':([73,],[93,]),'cst_expression':([35,64,69,72,76,87,95,96,121,122,148,155,156,157,158,159,160,163,165,172,194,204,205,210,212,220,228,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'seen_id_or_func':([48,117,],[74,74,]),'parameter':([38,81,],[52,52,]),'arg':([148,212,],[177,222,]),'parameter_list2':([52,],[82,]),'seen_term':([46,],[73,]),'pcolor':([87,121,],[115,115,]),'more_args':([198,],[211,]),'term2':([43,],[67,]),'seen_func_id':([74,],[98,]),'factor':([35,64,69,72,76,87,95,96,121,122,148,155,156,157,158,159,160,163,165,172,194,204,205,210,212,220,228,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'method_declaration2':([38,],[55,]),'geomOp':([43,],[69,]),'statement':([87,121,],[121,121,]),'move':([87,121,],[109,109,]),'compare_symbols':([40,],[64,]),'seen_assignment1':([195,],[209,]),'main_method':([19,],[27,]),'program2':([0,5,],[2,17,]),'seen_method_start':([85,],[103,]),'seen_rpar':([145,],[173,]),'program3':([2,12,],[11,20,]),'seen_condition_block':([225,],[229,]),'block_statement2':([87,121,],[124,161,]),'pup':([87,121,],[139,139,]),'superexpression':([35,72,76,87,96,121,122,155,156,157,158,159,160,163,165,172,194,204,205,210,220,228,],[42,90,101,127,147,127,162,184,185,186,187,188,189,191,192,197,208,216,217,221,227,231,]),'seen_while_exp':([208,],[219,]),'function_call':([74,],[99,]),'empty':([0,2,5,12,21,29,38,40,43,49,52,73,74,87,121,148,198,229,],[9,13,9,13,28,36,56,62,71,77,80,94,100,129,129,176,213,233,]),'seen_function_id':([25,],[32,]),'args':([148,],[178,]),'pclear':([87,121,],[131,131,]),'seen_id':([15,],[21,]),'seen_assignment2':([238,],[239,]),'method_declaration':([2,12,],[12,12,]),'variable_declarator3':([29,],[34,]),'pdown':([87,121,],[132,132,]),'andor':([49,],[76,]),'variable_declaration':([0,5,87,121,],[5,5,134,134,]),'program':([0,],[6,]),'setp':([87,121,],[135,135,]),'seen_arg':([175,],[198,]),'variable_assignment':([87,121,169,235,],[133,133,195,238,]),'arc':([87,121,],[137,137,]),'loop_statement':([87,121,],[138,138,]),'parameter_list':([38,81,],[54,102,]),'expression':([35,72,76,87,96,121,122,155,156,157,158,159,160,163,165,172,194,204,205,210,220,228,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'if_statement2':([229,],[232,]),'if_statement':([87,121,],[140,140,]),'cst_expression2':([74,],[97,]),'variable_declaration3':([16,],[23,]),'geometry_statement':([87,121,],[141,141,]),'term':([35,64,69,72,76,87,95,96,121,122,148,155,156,157,158,159,160,163,165,172,194,204,205,210,212,220,228,],[46,46,89,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'psize':([87,121,],[143,143,]),'seen_comp':([88,],[144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program2 program3 main_ahead main_method','program',4,'p_program','parser.py',30),
  ('main_ahead -> <empty>','main_ahead',0,'p_main_ahead','parser.py',35),
  ('program2 -> variable_declaration program2','program2',2,'p_program2','parser.py',47),
  ('program2 -> empty','program2',1,'p_program2','parser.py',48),
  ('program3 -> method_declaration program3','program3',2,'p_program3','parser.py',51),
  ('program3 -> empty','program3',1,'p_program3','parser.py',52),
  ('variable_declaration -> type variable_declaration2','variable_declaration',2,'p_variable_declaration','parser.py',55),
  ('variable_declaration2 -> variable_declarator variable_declaration3','variable_declaration2',2,'p_variable_declaration2','parser.py',58),
  ('variable_declaration3 -> COMMA variable_declaration2','variable_declaration3',2,'p_variable_declaration3','parser.py',61),
  ('variable_declaration3 -> SEMICOLON','variable_declaration3',1,'p_variable_declaration3','parser.py',62),
  ('variable_declarator -> ID seen_id variable_declarator2 variable_declarator3','variable_declarator',4,'p_variable_declarator','parser.py',65),
  ('seen_id -> <empty>','seen_id',0,'p_seen_id','parser.py',69),
  ('variable_declarator2 -> LSQUARE CSTINT RSQUARE','variable_declarator2',3,'p_variable_declarator2','parser.py',72),
  ('variable_declarator2 -> empty','variable_declarator2',1,'p_variable_declarator2','parser.py',73),
  ('variable_declarator3 -> = superexpression','variable_declarator3',2,'p_variable_declarator3','parser.py',81),
  ('variable_declarator3 -> empty','variable_declarator3',1,'p_variable_declarator3','parser.py',82),
  ('method_declaration -> FUNC type ID seen_function_id ( method_declaration2 method_declaration3','method_declaration',7,'p_method_declaration','parser.py',100),
  ('seen_function_id -> <empty>','seen_function_id',0,'p_seen_function_id','parser.py',106),
  ('method_declaration2 -> parameter_list','method_declaration2',1,'p_method_declaration2','parser.py',115),
  ('method_declaration2 -> empty','method_declaration2',1,'p_method_declaration2','parser.py',116),
  ('method_declaration3 -> ) seen_method_start block_statement','method_declaration3',3,'p_method_declaration3','parser.py',119),
  ('seen_method_start -> <empty>','seen_method_start',0,'p_seen_method_start','parser.py',122),
  ('parameter_list -> parameter parameter_list2','parameter_list',2,'p_parameter_list','parser.py',127),
  ('parameter_list2 -> COMMA parameter_list','parameter_list2',2,'p_parameter_list','parser.py',128),
  ('parameter_list2 -> empty','parameter_list2',1,'p_parameter_list','parser.py',129),
  ('parameter -> type ID','parameter',2,'p_parameter','parser.py',132),
  ('main_method -> MAIN CHEESE ( ) block_statement','main_method',5,'p_main_method','parser.py',139),
  ('type -> INT','type',1,'p_type','parser.py',142),
  ('type -> DOUBLE','type',1,'p_type','parser.py',143),
  ('type -> STRING','type',1,'p_type','parser.py',144),
  ('type -> VOID','type',1,'p_type','parser.py',145),
  ('variable_assignment -> ID = superexpression','variable_assignment',3,'p_variable_assignment','parser.py',151),
  ('superexpression -> expression superexpression2','superexpression',2,'p_superexpression','parser.py',170),
  ('superexpression2 -> andor superexpression','superexpression2',2,'p_superexpression2','parser.py',173),
  ('superexpression2 -> empty','superexpression2',1,'p_superexpression2','parser.py',174),
  ('andor -> AND','andor',1,'p_andor','parser.py',177),
  ('andor -> OR','andor',1,'p_andor','parser.py',178),
  ('expression -> numeric_expression compare','expression',2,'p_expression','parser.py',183),
  ('compare -> compare_symbols numeric_expression seen_comp','compare',3,'p_compare','parser.py',205),
  ('compare -> empty','compare',1,'p_compare','parser.py',206),
  ('compare_symbols -> CEQ','compare_symbols',1,'p_compare_symbols','parser.py',209),
  ('compare_symbols -> CGT','compare_symbols',1,'p_compare_symbols','parser.py',210),
  ('compare_symbols -> CGE','compare_symbols',1,'p_compare_symbols','parser.py',211),
  ('compare_symbols -> CLT','compare_symbols',1,'p_compare_symbols','parser.py',212),
  ('compare_symbols -> CLE','compare_symbols',1,'p_compare_symbols','parser.py',213),
  ('compare_symbols -> CNE','compare_symbols',1,'p_compare_symbols','parser.py',214),
  ('seen_comp -> <empty>','seen_comp',0,'p_seen_comp','parser.py',219),
  ('numeric_expression -> term seen_term numeric_expression2','numeric_expression',3,'p_numeric_expression','parser.py',245),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',248),
  ('numeric_expression2 -> arithOp numeric_expression','numeric_expression2',2,'p_numeric_expression2','parser.py',273),
  ('numeric_expression2 -> empty','numeric_expression2',1,'p_numeric_expression2','parser.py',274),
  ('arithOp -> +','arithOp',1,'p_arithOp','parser.py',277),
  ('arithOp -> -','arithOp',1,'p_arithOp','parser.py',278),
  ('term -> factor term2','term',2,'p_term','parser.py',283),
  ('term2 -> geomOp term','term2',2,'p_term2','parser.py',286),
  ('term2 -> empty','term2',1,'p_term2','parser.py',287),
  ('geomOp -> *','geomOp',1,'p_geomOp','parser.py',290),
  ('geomOp -> /','geomOp',1,'p_geomOp','parser.py',291),
  ('factor -> cst_expression','factor',1,'p_factor','parser.py',296),
  ('factor -> ( seen_lpar superexpression ) seen_rpar','factor',5,'p_factor','parser.py',297),
  ('seen_lpar -> <empty>','seen_lpar',0,'p_seen_lpar','parser.py',323),
  ('seen_rpar -> <empty>','seen_rpar',0,'p_seen_rpar','parser.py',328),
  ('cst_expression -> CSTDOUBLE','cst_expression',1,'p_cst_expression','parser.py',333),
  ('cst_expression -> CSTINT','cst_expression',1,'p_cst_expression','parser.py',334),
  ('cst_expression -> CSTSTRING','cst_expression',1,'p_cst_expression','parser.py',335),
  ('cst_expression -> ID seen_id_or_func cst_expression2','cst_expression',3,'p_cst_expression','parser.py',336),
  ('seen_id_or_func -> <empty>','seen_id_or_func',0,'p_seen_id_or_func','parser.py',350),
  ('cst_expression2 -> LSQUARE superexpression RSQUARE','cst_expression2',3,'p_cst_expression2','parser.py',356),
  ('cst_expression2 -> function_call','cst_expression2',1,'p_cst_expression2','parser.py',357),
  ('cst_expression2 -> empty','cst_expression2',1,'p_cst_expression2','parser.py',358),
  ('function_call -> seen_func_id ( args )','function_call',4,'p_function_call','parser.py',375),
  ('seen_func_id -> <empty>','seen_func_id',0,'p_seen_func_id','parser.py',387),
  ('args -> arg','args',1,'p_args','parser.py',405),
  ('args -> empty','args',1,'p_args','parser.py',406),
  ('arg -> numeric_expression seen_arg more_args','arg',3,'p_arg','parser.py',409),
  ('seen_arg -> <empty>','seen_arg',0,'p_seen_arg','parser.py',412),
  ('more_args -> COMMA arg','more_args',2,'p_more_args','parser.py',439),
  ('more_args -> empty','more_args',1,'p_more_args','parser.py',440),
  ('loop_statement -> loophead block_statement seen_loop_block','loop_statement',3,'p_loop_statement','parser.py',443),
  ('loophead -> FOR ( variable_assignment seen_assignment1 SEMICOLON superexpression seen_for_exp SEMICOLON variable_assignment seen_assignment2 )','loophead',11,'p_loophead','parser.py',449),
  ('loophead -> WHILE ( seen_while_LPAR superexpression seen_while_exp )','loophead',6,'p_loophead','parser.py',450),
  ('seen_assignment1 -> <empty>','seen_assignment1',0,'p_seen_assignment1','parser.py',453),
  ('seen_for_exp -> <empty>','seen_for_exp',0,'p_seen_for_exp','parser.py',458),
  ('seen_assignment2 -> <empty>','seen_assignment2',0,'p_seen_assignment2','parser.py',479),
  ('seen_while_LPAR -> <empty>','seen_while_LPAR',0,'p_seen_while_LPAR','parser.py',490),
  ('seen_while_exp -> <empty>','seen_while_exp',0,'p_seen_while_exp','parser.py',495),
  ('seen_loop_block -> <empty>','seen_loop_block',0,'p_seen_loop_block','parser.py',509),
  ('if_statement -> IF ( superexpression ) seen_condition block_statement seen_condition_block if_statement2','if_statement',8,'p_if_statement','parser.py',515),
  ('seen_condition -> <empty>','seen_condition',0,'p_seen_condition','parser.py',521),
  ('seen_condition_block -> <empty>','seen_condition_block',0,'p_seen_condition_block','parser.py',533),
  ('if_statement2 -> ELSE block_statement','if_statement2',2,'p_if_statement2','parser.py',541),
  ('if_statement2 -> empty','if_statement2',1,'p_if_statement2','parser.py',542),
  ('block_statement -> LBRACKET block_statement2 RBRACKET','block_statement',3,'p_block_statement','parser.py',545),
  ('block_statement2 -> statement block_statement2','block_statement2',2,'p_block_statement','parser.py',546),
  ('block_statement2 -> empty','block_statement2',1,'p_block_statement','parser.py',547),
  ('read_statement -> SCAN ( ID ) SEMICOLON','read_statement',5,'p_read_statement','parser.py',550),
  ('print_statement -> PRINT ( superexpression ) SEMICOLON','print_statement',5,'p_print_statement','parser.py',561),
  ('geometry_statement -> move','geometry_statement',1,'p_geometry_statement','parser.py',567),
  ('geometry_statement -> rotate','geometry_statement',1,'p_geometry_statement','parser.py',568),
  ('geometry_statement -> arc','geometry_statement',1,'p_geometry_statement','parser.py',569),
  ('geometry_statement -> home','geometry_statement',1,'p_geometry_statement','parser.py',570),
  ('geometry_statement -> pdown','geometry_statement',1,'p_geometry_statement','parser.py',571),
  ('geometry_statement -> pup','geometry_statement',1,'p_geometry_statement','parser.py',572),
  ('geometry_statement -> setp','geometry_statement',1,'p_geometry_statement','parser.py',573),
  ('geometry_statement -> pcolor','geometry_statement',1,'p_geometry_statement','parser.py',574),
  ('geometry_statement -> psize','geometry_statement',1,'p_geometry_statement','parser.py',575),
  ('geometry_statement -> pclear','geometry_statement',1,'p_geometry_statement','parser.py',576),
  ('move -> MOVE ( superexpression )','move',4,'p_move','parser.py',579),
  ('rotate -> ROTATE ( superexpression )','rotate',4,'p_rotate','parser.py',590),
  ('arc -> ARC ( superexpression COMMA superexpression )','arc',6,'p_arc','parser.py',601),
  ('home -> HOME ( )','home',3,'p_home','parser.py',613),
  ('pdown -> PDOWN ( )','pdown',3,'p_pdown','parser.py',618),
  ('pup -> PUP ( )','pup',3,'p_pup','parser.py',623),
  ('setp -> SETP ( superexpression COMMA superexpression )','setp',6,'p_setp','parser.py',628),
  ('pcolor -> PCOLOR ( superexpression COMMA superexpression COMMA superexpression )','pcolor',8,'p_pcolor','parser.py',640),
  ('psize -> PSIZE ( superexpression )','psize',4,'p_psize','parser.py',653),
  ('pclear -> PCLEAR ( )','pclear',3,'p_pclear','parser.py',664),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',669),
  ('statement -> variable_assignment SEMICOLON','statement',2,'p_statement','parser.py',670),
  ('statement -> superexpression SEMICOLON','statement',2,'p_statement','parser.py',671),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',672),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',673),
  ('statement -> return','statement',1,'p_statement','parser.py',674),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',675),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',676),
  ('statement -> geometry_statement SEMICOLON','statement',2,'p_statement','parser.py',677),
  ('return -> RETURN superexpression SEMICOLON','return',3,'p_return','parser.py',680),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',693),
]
