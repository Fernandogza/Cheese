
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1D1E1B6E7E97E643B08E5FFBF9D7C732'
    
_lr_action_items = {'ELSE':([175,233,239,],[-97,-94,245,]),'WHILE':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,135,-125,-122,-129,-126,135,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'MAIN':([0,1,3,5,11,13,15,16,17,18,19,23,24,25,98,155,175,],[-132,-4,-132,-132,-7,-6,-2,-132,-3,-8,-10,30,-5,-9,-17,-21,-97,]),'DOUBLE':([0,5,11,14,18,19,25,50,95,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[4,4,-7,4,-8,-10,-9,4,4,4,-125,-122,-129,-126,4,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'LSQUARE':([12,21,40,53,115,195,],[-12,28,-69,82,160,160,]),'CGT':([38,40,41,43,44,46,47,48,53,68,72,73,81,84,85,88,89,91,102,106,115,149,181,183,204,],[-61,-69,-67,-66,63,-132,-65,-51,-132,-58,-56,-132,-72,-71,-68,-57,-53,-50,-64,-52,-69,-62,-74,-75,-70,]),'ID':([2,4,6,7,9,11,18,19,20,22,25,34,39,52,55,56,57,61,62,63,64,65,66,67,69,70,71,76,82,90,92,93,101,103,104,110,114,116,119,120,132,136,137,156,157,158,160,161,164,165,166,167,168,171,172,173,174,175,177,178,179,187,190,199,200,207,211,213,217,225,226,229,232,233,237,239,243,244,246,247,],[12,-29,-28,-31,-30,-7,-8,-10,12,29,-9,40,-63,40,-39,40,-38,-48,-47,-44,-45,-43,-46,40,-59,40,-60,97,-73,-55,40,-54,115,40,40,-125,-122,-129,-126,40,115,-128,-127,40,40,40,-73,40,40,40,40,195,196,40,-89,-91,-123,-97,-130,-124,40,40,-131,40,-83,40,40,40,40,40,-100,-101,40,-94,40,-132,-96,-92,195,-95,]),'ROTATE':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,113,-125,-122,-129,-126,113,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'ARC':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,117,-125,-122,-129,-126,117,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CSTSTRING':([11,18,19,25,34,39,52,55,56,57,61,62,63,64,65,66,67,69,70,71,82,90,92,93,101,103,104,110,114,116,119,120,132,136,137,156,157,158,160,161,164,165,166,171,172,173,174,175,177,178,179,187,190,199,200,207,211,213,217,225,226,229,232,233,237,239,243,244,247,],[-7,-8,-10,-9,41,-63,41,-39,41,-38,-48,-47,-44,-45,-43,-46,41,-59,41,-60,-73,-55,41,-54,41,41,41,-125,-122,-129,-126,41,41,-128,-127,41,41,41,-73,41,41,41,41,41,-89,-91,-123,-97,-130,-124,41,41,-131,41,-83,41,41,41,41,41,-100,-101,41,-94,41,-132,-96,-92,-95,]),'RBRACKET':([11,18,19,25,101,109,110,114,116,119,132,136,137,141,170,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,-132,-99,-125,-122,-129,-126,-132,-128,-127,175,-98,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'PUP':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,142,-125,-122,-129,-126,142,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'RETURN':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,120,-125,-122,-129,-126,120,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'PDOWN':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,148,-125,-122,-129,-126,148,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'PSIZE':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,121,-125,-122,-129,-126,121,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'PCOLOR':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,123,-125,-122,-129,-126,123,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'-':([38,40,41,43,46,47,48,53,68,72,73,81,84,85,88,102,115,149,181,183,204,],[-61,-69,-67,-66,-132,-65,-51,-132,-58,-56,90,-72,-71,-68,-57,-64,-69,-62,-74,-75,-70,]),'CEQ':([38,40,41,43,44,46,47,48,53,68,72,73,81,84,85,88,89,91,102,106,115,149,181,183,204,],[-61,-69,-67,-66,65,-132,-65,-51,-132,-58,-56,-132,-72,-71,-68,-57,-53,-50,-64,-52,-69,-62,-74,-75,-70,]),'STRING':([0,5,11,14,18,19,25,50,95,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[9,9,-7,9,-8,-10,-9,9,9,9,-125,-122,-129,-126,9,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'OR':([38,40,41,42,43,44,46,47,48,53,59,60,68,72,73,81,84,85,87,88,89,91,102,105,106,115,149,181,183,204,],[-61,-69,-67,55,-66,-132,-132,-65,-51,-132,-42,-40,-58,-56,-132,-72,-71,-68,-49,-57,-53,-50,-64,-41,-52,-69,-62,-74,-75,-70,]),'SEMICOLON':([10,12,21,26,27,32,33,38,40,41,42,43,44,45,46,47,48,49,53,54,58,59,60,68,72,73,81,84,85,86,87,88,89,91,102,105,106,112,115,122,124,125,127,129,133,139,140,143,144,146,147,149,159,163,181,183,186,189,194,197,201,203,204,208,209,212,215,216,219,231,234,235,240,241,242,],[19,-12,-132,-14,-132,-16,-11,-61,-69,-67,-132,-66,-132,-15,-132,-65,-51,-13,-132,-37,-35,-42,-40,-58,-56,-132,-72,-71,-68,-36,-49,-57,-53,-50,-64,-41,-52,-104,-69,-107,-106,-105,-109,-110,-108,-103,174,177,178,-111,-102,-62,-32,190,-74,-75,-33,-115,-86,-121,-117,-116,-70,-112,-113,-120,225,226,229,-114,-87,-118,246,-34,-119,]),'IF':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,126,-125,-122,-129,-126,126,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'+':([38,40,41,43,46,47,48,53,68,72,73,81,84,85,88,102,115,149,181,183,204,],[-61,-69,-67,-66,-132,-65,-51,-132,-58,-56,93,-72,-71,-68,-57,-64,-69,-62,-74,-75,-70,]),'FOR':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,128,-125,-122,-129,-126,128,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'*':([38,40,41,43,46,47,53,81,84,85,102,115,149,181,183,204,],[-61,-69,-67,-66,69,-65,-132,-72,-71,-68,-64,-69,-62,-74,-75,-70,]),'SCAN':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,130,-125,-122,-129,-126,130,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'/':([38,40,41,43,46,47,53,81,84,85,102,115,149,181,183,204,],[-61,-69,-67,-66,71,-65,-132,-72,-71,-68,-64,-69,-62,-74,-75,-70,]),'PCLEAR':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,131,-125,-122,-129,-126,131,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CHEESE':([30,],[37,]),'$end':([8,31,100,175,],[0,-1,-27,-97,]),'LBRACKET':([79,99,108,138,214,224,236,245,250,],[101,-22,101,101,-93,101,-85,101,-84,]),'(':([11,18,19,25,29,34,36,37,39,40,52,53,55,56,57,61,62,63,64,65,66,67,69,70,71,82,83,90,92,93,101,103,104,110,111,113,114,115,116,117,118,119,120,121,123,126,128,130,131,132,134,135,136,137,142,145,148,156,157,158,160,161,164,165,166,171,172,173,174,175,177,178,179,187,190,199,200,207,211,213,217,225,226,229,232,233,237,239,243,244,247,],[-7,-8,-10,-9,-18,39,50,51,-63,-69,39,-76,-39,39,-38,-48,-47,-44,-45,-43,-46,39,-59,39,-60,-73,104,-55,39,-54,39,39,39,-125,156,157,-122,-69,-129,161,162,-126,39,164,165,166,167,168,169,39,171,172,-128,-127,176,179,180,39,39,39,-73,39,39,39,39,39,-89,-91,-123,-97,-130,-124,39,39,-131,39,-83,39,39,39,39,39,-100,-101,39,-94,39,-132,-96,-92,-95,]),'MOVE':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,111,-125,-122,-129,-126,111,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'COMMA':([10,12,21,26,27,32,33,38,40,41,42,43,44,45,46,47,48,49,53,54,58,59,60,68,72,73,75,81,84,85,86,87,88,89,91,97,102,105,106,149,153,181,182,183,188,192,198,204,223,],[20,-12,-132,-14,-132,-16,-11,-61,-69,-67,-132,-66,-132,-15,-132,-65,-51,-13,-132,-37,-35,-42,-40,-58,-56,-132,95,-72,-71,-68,-36,-49,-57,-53,-50,-26,-64,-41,-52,-62,-80,-74,207,-75,211,213,217,-70,232,]),'VOID':([0,5,11,14,18,19,25,50,95,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[7,7,-7,7,-8,-10,-9,7,7,7,-125,-122,-129,-126,7,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'HOME':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,118,-125,-122,-129,-126,118,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CNE':([38,40,41,43,44,46,47,48,53,68,72,73,81,84,85,88,89,91,102,106,115,149,181,183,204,],[-61,-69,-67,-66,61,-132,-65,-51,-132,-58,-56,-132,-72,-71,-68,-57,-53,-50,-64,-52,-69,-62,-74,-75,-70,]),'CLE':([38,40,41,43,44,46,47,48,53,68,72,73,81,84,85,88,89,91,102,106,115,149,181,183,204,],[-61,-69,-67,-66,62,-132,-65,-51,-132,-58,-56,-132,-72,-71,-68,-57,-53,-50,-64,-52,-69,-62,-74,-75,-70,]),'INT':([0,5,11,14,18,19,25,50,95,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[6,6,-7,6,-8,-10,-9,6,6,6,-125,-122,-129,-126,6,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'RSQUARE':([35,38,40,41,42,43,44,46,47,48,53,54,58,59,60,68,72,73,81,84,85,86,87,88,89,91,102,105,106,149,150,181,183,204,210,],[49,-61,-69,-67,-132,-66,-132,-132,-65,-51,-132,-37,-35,-42,-40,-58,-56,-132,-72,-71,-68,-36,-49,-57,-53,-50,-64,-41,-52,-62,181,-74,-75,-70,221,]),'FUNC':([0,1,3,5,11,16,17,18,19,25,98,155,175,],[-132,-4,14,-132,-7,14,-3,-8,-10,-9,-17,-21,-97,]),'CSTINT':([11,18,19,25,28,34,39,52,55,56,57,61,62,63,64,65,66,67,69,70,71,82,90,92,93,101,103,104,110,114,116,119,120,132,136,137,156,157,158,160,161,164,165,166,171,172,173,174,175,177,178,179,187,190,199,200,207,211,213,217,225,226,229,232,233,237,239,243,244,247,],[-7,-8,-10,-9,35,43,-63,43,-39,43,-38,-48,-47,-44,-45,-43,-46,43,-59,43,-60,-73,-55,43,-54,43,43,43,-125,-122,-129,-126,43,43,-128,-127,43,43,43,-73,43,43,43,43,43,-89,-91,-123,-97,-130,-124,43,43,-131,43,-83,43,43,43,43,43,-100,-101,43,-94,43,-132,-96,-92,-95,]),')':([38,40,41,42,43,44,46,47,48,50,51,53,54,58,59,60,68,72,73,74,75,77,78,80,81,84,85,86,87,88,89,91,94,96,97,102,104,105,106,107,149,151,152,153,154,159,162,169,176,180,181,182,183,184,185,186,191,193,196,202,204,205,206,218,220,222,227,228,238,241,248,249,],[-61,-69,-67,-132,-66,-132,-132,-65,-51,-132,79,-132,-37,-35,-42,-40,-58,-56,-132,-19,-132,-20,99,102,-72,-71,-68,-36,-49,-57,-53,-50,-25,-23,-26,-64,-132,-41,-52,-24,-62,-78,-77,-80,183,-32,189,197,201,203,-74,-132,-75,208,209,-33,212,214,216,219,-70,-82,-79,-90,-81,231,235,236,242,-34,-88,250,]),'SETP':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,134,-125,-122,-129,-126,134,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CGE':([38,40,41,43,44,46,47,48,53,68,72,73,81,84,85,88,89,91,102,106,115,149,181,183,204,],[-61,-69,-67,-66,64,-132,-65,-51,-132,-58,-56,-132,-72,-71,-68,-57,-53,-50,-64,-52,-69,-62,-74,-75,-70,]),'=':([12,21,26,27,49,115,195,221,230,],[-12,-132,-14,34,-13,158,158,-74,237,]),'PRINT':([11,18,19,25,101,110,114,116,119,132,136,137,173,174,175,177,178,190,200,226,229,233,239,243,244,247,],[-7,-8,-10,-9,145,-125,-122,-129,-126,145,-128,-127,-91,-123,-97,-130,-124,-131,-83,-100,-101,-94,-132,-96,-92,-95,]),'CLT':([38,40,41,43,44,46,47,48,53,68,72,73,81,84,85,88,89,91,102,106,115,149,181,183,204,],[-61,-69,-67,-66,66,-132,-65,-51,-132,-58,-56,-132,-72,-71,-68,-57,-53,-50,-64,-52,-69,-62,-74,-75,-70,]),'CSTDOUBLE':([11,18,19,25,34,39,52,55,56,57,61,62,63,64,65,66,67,69,70,71,82,90,92,93,101,103,104,110,114,116,119,120,132,136,137,156,157,158,160,161,164,165,166,171,172,173,174,175,177,178,179,187,190,199,200,207,211,213,217,225,226,229,232,233,237,239,243,244,247,],[-7,-8,-10,-9,47,-63,47,-39,47,-38,-48,-47,-44,-45,-43,-46,47,-59,47,-60,-73,-55,47,-54,47,47,47,-125,-122,-129,-126,47,47,-128,-127,47,47,47,-73,47,47,47,47,47,-89,-91,-123,-97,-130,-124,47,47,-131,47,-83,47,47,47,47,47,-100,-101,47,-94,47,-132,-96,-92,-95,]),'AND':([38,40,41,42,43,44,46,47,48,53,59,60,68,72,73,81,84,85,87,88,89,91,102,105,106,115,149,181,183,204,],[-61,-69,-67,57,-66,-132,-132,-65,-51,-132,-42,-40,-58,-56,-132,-72,-71,-68,-49,-57,-53,-50,-64,-41,-52,-69,-62,-74,-75,-70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empty':([0,3,5,16,21,27,42,44,46,50,53,73,75,101,104,132,182,239,],[1,13,1,13,26,32,54,59,68,77,81,89,94,109,151,109,205,243,]),'variable_declarator':([2,20,],[10,10,]),'type':([0,5,14,50,95,101,132,],[2,2,22,76,76,2,2,]),'method_declaration3':([78,],[98,]),'arc':([101,132,],[112,112,]),'block_statement':([79,108,138,224,245,],[100,155,173,233,247,]),'numeric_expression2':([73,],[91,]),'seen_lpar':([39,],[52,]),'arithOp':([73,],[92,]),'variable_declaration':([0,5,101,132,],[5,5,114,114,]),'if_statement':([101,132,],[110,110,]),'id_or_array':([115,195,],[159,159,]),'read_statement':([101,132,],[116,116,]),'variable_declarator2':([21,],[27,]),'variable_declarator3':([27,],[33,]),'term':([34,52,56,67,70,92,101,103,104,120,132,156,157,158,161,164,165,166,171,179,187,199,207,211,213,217,225,232,237,],[48,48,48,48,88,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'expression':([34,52,56,101,103,120,132,156,157,158,161,164,165,166,171,179,187,199,211,213,217,225,232,237,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'method_declaration2':([50,],[78,]),'cst_expression2':([53,],[85,]),'term2':([46,],[72,]),'seen_LSQUARE':([82,160,],[103,187,]),'seen_while_LPAR':([172,],[199,]),'variable_declaration3':([10,],[18,]),'numeric_expression':([34,52,56,67,92,101,103,104,120,132,156,157,158,161,164,165,166,171,179,187,199,207,211,213,217,225,232,237,],[44,44,44,87,106,44,44,153,44,44,44,44,44,44,44,44,44,44,44,44,44,153,44,44,44,44,44,44,]),'variable_declaration2':([2,20,],[11,25,]),'pdown':([101,132,],[124,124,]),'seen_id':([12,],[21,]),'seen_condition':([214,],[224,]),'seen_for_exp':([234,],[240,]),'more_args':([182,],[206,]),'psize':([101,132,],[129,129,]),'return':([101,132,],[137,137,]),'home':([101,132,],[125,125,]),'program':([0,],[8,]),'factor':([34,52,56,67,70,92,101,103,104,120,132,156,157,158,161,164,165,166,171,179,187,199,207,211,213,217,225,232,237,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'seen_while_exp':([218,],[228,]),'pcolor':([101,132,],[127,127,]),'seen_loop_block':([173,],[200,]),'parameter':([50,95,],[75,75,]),'seen_condition_block':([233,],[239,]),'arg':([104,207,],[152,220,]),'seen_RSQUARE':([181,221,],[204,230,]),'program3':([3,16,],[15,24,]),'setp':([101,132,],[133,133,]),'main_ahead':([15,],[23,]),'cst_expression':([34,52,56,67,70,92,101,103,104,120,132,156,157,158,161,164,165,166,171,179,187,199,207,211,213,217,225,232,237,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'parameter_list':([50,95,],[74,107,]),'seen_method_start':([99,],[108,]),'statement':([101,132,],[132,132,]),'geomOp':([46,],[70,]),'seen_id_or_func':([40,115,],[53,53,]),'main_method':([23,],[31,]),'print_statement':([101,132,],[136,136,]),'if_statement2':([239,],[244,]),'parameter_list2':([75,],[96,]),'pup':([101,132,],[122,122,]),'loophead':([101,132,],[138,138,]),'loop_statement':([101,132,],[119,119,]),'seen_assignment2':([248,],[249,]),'seen_assignment1':([194,],[215,]),'rotate':([101,132,],[139,139,]),'pclear':([101,132,],[146,146,]),'compare_symbols':([44,],[67,]),'seen_function_id':([29,],[36,]),'seen_func_id':([53,],[83,]),'compare':([44,],[60,]),'variable_assignment':([101,132,167,246,],[140,140,194,248,]),'seen_term':([48,],[73,]),'block_statement2':([101,132,],[141,170,]),'superexpression2':([42,],[58,]),'program2':([0,5,],[3,17,]),'geometry_statement':([101,132,],[143,143,]),'superexpression':([34,52,56,101,103,120,132,156,157,158,161,164,165,166,171,179,187,199,211,213,217,225,232,237,],[45,80,86,144,150,163,144,184,185,186,188,191,192,193,198,202,210,218,222,223,227,234,238,241,]),'args':([104,],[154,]),'andor':([42,],[56,]),'seen_arg':([153,],[182,]),'function_call':([53,],[84,]),'method_declaration':([3,16,],[16,16,]),'seen_comp':([87,],[105,]),'move':([101,132,],[147,147,]),'seen_rpar':([102,],[149,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program2 program3 main_ahead main_method','program',4,'p_program','parser.py',32),
  ('main_ahead -> <empty>','main_ahead',0,'p_main_ahead','parser.py',37),
  ('program2 -> variable_declaration program2','program2',2,'p_program2','parser.py',49),
  ('program2 -> empty','program2',1,'p_program2','parser.py',50),
  ('program3 -> method_declaration program3','program3',2,'p_program3','parser.py',53),
  ('program3 -> empty','program3',1,'p_program3','parser.py',54),
  ('variable_declaration -> type variable_declaration2','variable_declaration',2,'p_variable_declaration','parser.py',57),
  ('variable_declaration2 -> variable_declarator variable_declaration3','variable_declaration2',2,'p_variable_declaration2','parser.py',60),
  ('variable_declaration3 -> COMMA variable_declaration2','variable_declaration3',2,'p_variable_declaration3','parser.py',63),
  ('variable_declaration3 -> SEMICOLON','variable_declaration3',1,'p_variable_declaration3','parser.py',64),
  ('variable_declarator -> ID seen_id variable_declarator2 variable_declarator3','variable_declarator',4,'p_variable_declarator','parser.py',67),
  ('seen_id -> <empty>','seen_id',0,'p_seen_id','parser.py',71),
  ('variable_declarator2 -> LSQUARE CSTINT RSQUARE','variable_declarator2',3,'p_variable_declarator2','parser.py',74),
  ('variable_declarator2 -> empty','variable_declarator2',1,'p_variable_declarator2','parser.py',75),
  ('variable_declarator3 -> = superexpression','variable_declarator3',2,'p_variable_declarator3','parser.py',90),
  ('variable_declarator3 -> empty','variable_declarator3',1,'p_variable_declarator3','parser.py',91),
  ('method_declaration -> FUNC type ID seen_function_id ( method_declaration2 method_declaration3','method_declaration',7,'p_method_declaration','parser.py',115),
  ('seen_function_id -> <empty>','seen_function_id',0,'p_seen_function_id','parser.py',121),
  ('method_declaration2 -> parameter_list','method_declaration2',1,'p_method_declaration2','parser.py',130),
  ('method_declaration2 -> empty','method_declaration2',1,'p_method_declaration2','parser.py',131),
  ('method_declaration3 -> ) seen_method_start block_statement','method_declaration3',3,'p_method_declaration3','parser.py',134),
  ('seen_method_start -> <empty>','seen_method_start',0,'p_seen_method_start','parser.py',137),
  ('parameter_list -> parameter parameter_list2','parameter_list',2,'p_parameter_list','parser.py',142),
  ('parameter_list2 -> COMMA parameter_list','parameter_list2',2,'p_parameter_list','parser.py',143),
  ('parameter_list2 -> empty','parameter_list2',1,'p_parameter_list','parser.py',144),
  ('parameter -> type ID','parameter',2,'p_parameter','parser.py',147),
  ('main_method -> MAIN CHEESE ( ) block_statement','main_method',5,'p_main_method','parser.py',154),
  ('type -> INT','type',1,'p_type','parser.py',157),
  ('type -> DOUBLE','type',1,'p_type','parser.py',158),
  ('type -> STRING','type',1,'p_type','parser.py',159),
  ('type -> VOID','type',1,'p_type','parser.py',160),
  ('variable_assignment -> ID id_or_array','variable_assignment',2,'p_variable_assignment','parser.py',166),
  ('id_or_array -> = superexpression','id_or_array',2,'p_id_or_array','parser.py',169),
  ('id_or_array -> LSQUARE seen_LSQUARE superexpression RSQUARE seen_RSQUARE = superexpression','id_or_array',7,'p_id_or_array','parser.py',170),
  ('superexpression -> expression superexpression2','superexpression',2,'p_superexpression','parser.py',250),
  ('superexpression2 -> andor superexpression','superexpression2',2,'p_superexpression2','parser.py',253),
  ('superexpression2 -> empty','superexpression2',1,'p_superexpression2','parser.py',254),
  ('andor -> AND','andor',1,'p_andor','parser.py',257),
  ('andor -> OR','andor',1,'p_andor','parser.py',258),
  ('expression -> numeric_expression compare','expression',2,'p_expression','parser.py',263),
  ('compare -> compare_symbols numeric_expression seen_comp','compare',3,'p_compare','parser.py',285),
  ('compare -> empty','compare',1,'p_compare','parser.py',286),
  ('compare_symbols -> CEQ','compare_symbols',1,'p_compare_symbols','parser.py',289),
  ('compare_symbols -> CGT','compare_symbols',1,'p_compare_symbols','parser.py',290),
  ('compare_symbols -> CGE','compare_symbols',1,'p_compare_symbols','parser.py',291),
  ('compare_symbols -> CLT','compare_symbols',1,'p_compare_symbols','parser.py',292),
  ('compare_symbols -> CLE','compare_symbols',1,'p_compare_symbols','parser.py',293),
  ('compare_symbols -> CNE','compare_symbols',1,'p_compare_symbols','parser.py',294),
  ('seen_comp -> <empty>','seen_comp',0,'p_seen_comp','parser.py',299),
  ('numeric_expression -> term seen_term numeric_expression2','numeric_expression',3,'p_numeric_expression','parser.py',356),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',359),
  ('numeric_expression2 -> arithOp numeric_expression','numeric_expression2',2,'p_numeric_expression2','parser.py',413),
  ('numeric_expression2 -> empty','numeric_expression2',1,'p_numeric_expression2','parser.py',414),
  ('arithOp -> +','arithOp',1,'p_arithOp','parser.py',417),
  ('arithOp -> -','arithOp',1,'p_arithOp','parser.py',418),
  ('term -> factor term2','term',2,'p_term','parser.py',423),
  ('term2 -> geomOp term','term2',2,'p_term2','parser.py',426),
  ('term2 -> empty','term2',1,'p_term2','parser.py',427),
  ('geomOp -> *','geomOp',1,'p_geomOp','parser.py',430),
  ('geomOp -> /','geomOp',1,'p_geomOp','parser.py',431),
  ('factor -> cst_expression','factor',1,'p_factor','parser.py',436),
  ('factor -> ( seen_lpar superexpression ) seen_rpar','factor',5,'p_factor','parser.py',437),
  ('seen_lpar -> <empty>','seen_lpar',0,'p_seen_lpar','parser.py',492),
  ('seen_rpar -> <empty>','seen_rpar',0,'p_seen_rpar','parser.py',497),
  ('cst_expression -> CSTDOUBLE','cst_expression',1,'p_cst_expression','parser.py',502),
  ('cst_expression -> CSTINT','cst_expression',1,'p_cst_expression','parser.py',503),
  ('cst_expression -> CSTSTRING','cst_expression',1,'p_cst_expression','parser.py',504),
  ('cst_expression -> ID seen_id_or_func cst_expression2','cst_expression',3,'p_cst_expression','parser.py',505),
  ('seen_id_or_func -> <empty>','seen_id_or_func',0,'p_seen_id_or_func','parser.py',518),
  ('cst_expression2 -> LSQUARE seen_LSQUARE superexpression RSQUARE seen_RSQUARE','cst_expression2',5,'p_cst_expression2','parser.py',524),
  ('cst_expression2 -> function_call','cst_expression2',1,'p_cst_expression2','parser.py',525),
  ('cst_expression2 -> empty','cst_expression2',1,'p_cst_expression2','parser.py',526),
  ('seen_LSQUARE -> <empty>','seen_LSQUARE',0,'p_seen_LSQUARE','parser.py',556),
  ('seen_RSQUARE -> <empty>','seen_RSQUARE',0,'p_seen_RSQUARE','parser.py',561),
  ('function_call -> seen_func_id ( args )','function_call',4,'p_function_call','parser.py',566),
  ('seen_func_id -> <empty>','seen_func_id',0,'p_seen_func_id','parser.py',578),
  ('args -> arg','args',1,'p_args','parser.py',596),
  ('args -> empty','args',1,'p_args','parser.py',597),
  ('arg -> numeric_expression seen_arg more_args','arg',3,'p_arg','parser.py',600),
  ('seen_arg -> <empty>','seen_arg',0,'p_seen_arg','parser.py',603),
  ('more_args -> COMMA arg','more_args',2,'p_more_args','parser.py',630),
  ('more_args -> empty','more_args',1,'p_more_args','parser.py',631),
  ('loop_statement -> loophead block_statement seen_loop_block','loop_statement',3,'p_loop_statement','parser.py',634),
  ('loophead -> FOR ( variable_assignment seen_assignment1 SEMICOLON superexpression seen_for_exp SEMICOLON variable_assignment seen_assignment2 )','loophead',11,'p_loophead','parser.py',640),
  ('loophead -> WHILE ( seen_while_LPAR superexpression seen_while_exp )','loophead',6,'p_loophead','parser.py',641),
  ('seen_assignment1 -> <empty>','seen_assignment1',0,'p_seen_assignment1','parser.py',644),
  ('seen_for_exp -> <empty>','seen_for_exp',0,'p_seen_for_exp','parser.py',649),
  ('seen_assignment2 -> <empty>','seen_assignment2',0,'p_seen_assignment2','parser.py',670),
  ('seen_while_LPAR -> <empty>','seen_while_LPAR',0,'p_seen_while_LPAR','parser.py',681),
  ('seen_while_exp -> <empty>','seen_while_exp',0,'p_seen_while_exp','parser.py',686),
  ('seen_loop_block -> <empty>','seen_loop_block',0,'p_seen_loop_block','parser.py',700),
  ('if_statement -> IF ( superexpression ) seen_condition block_statement seen_condition_block if_statement2','if_statement',8,'p_if_statement','parser.py',706),
  ('seen_condition -> <empty>','seen_condition',0,'p_seen_condition','parser.py',712),
  ('seen_condition_block -> <empty>','seen_condition_block',0,'p_seen_condition_block','parser.py',724),
  ('if_statement2 -> ELSE block_statement','if_statement2',2,'p_if_statement2','parser.py',732),
  ('if_statement2 -> empty','if_statement2',1,'p_if_statement2','parser.py',733),
  ('block_statement -> LBRACKET block_statement2 RBRACKET','block_statement',3,'p_block_statement','parser.py',736),
  ('block_statement2 -> statement block_statement2','block_statement2',2,'p_block_statement','parser.py',737),
  ('block_statement2 -> empty','block_statement2',1,'p_block_statement','parser.py',738),
  ('read_statement -> SCAN ( ID ) SEMICOLON','read_statement',5,'p_read_statement','parser.py',741),
  ('print_statement -> PRINT ( superexpression ) SEMICOLON','print_statement',5,'p_print_statement','parser.py',757),
  ('geometry_statement -> move','geometry_statement',1,'p_geometry_statement','parser.py',766),
  ('geometry_statement -> rotate','geometry_statement',1,'p_geometry_statement','parser.py',767),
  ('geometry_statement -> arc','geometry_statement',1,'p_geometry_statement','parser.py',768),
  ('geometry_statement -> home','geometry_statement',1,'p_geometry_statement','parser.py',769),
  ('geometry_statement -> pdown','geometry_statement',1,'p_geometry_statement','parser.py',770),
  ('geometry_statement -> pup','geometry_statement',1,'p_geometry_statement','parser.py',771),
  ('geometry_statement -> setp','geometry_statement',1,'p_geometry_statement','parser.py',772),
  ('geometry_statement -> pcolor','geometry_statement',1,'p_geometry_statement','parser.py',773),
  ('geometry_statement -> psize','geometry_statement',1,'p_geometry_statement','parser.py',774),
  ('geometry_statement -> pclear','geometry_statement',1,'p_geometry_statement','parser.py',775),
  ('move -> MOVE ( superexpression )','move',4,'p_move','parser.py',778),
  ('rotate -> ROTATE ( superexpression )','rotate',4,'p_rotate','parser.py',789),
  ('arc -> ARC ( superexpression COMMA superexpression )','arc',6,'p_arc','parser.py',801),
  ('home -> HOME ( )','home',3,'p_home','parser.py',814),
  ('pdown -> PDOWN ( )','pdown',3,'p_pdown','parser.py',819),
  ('pup -> PUP ( )','pup',3,'p_pup','parser.py',824),
  ('setp -> SETP ( superexpression COMMA superexpression )','setp',6,'p_setp','parser.py',829),
  ('pcolor -> PCOLOR ( superexpression COMMA superexpression COMMA superexpression )','pcolor',8,'p_pcolor','parser.py',842),
  ('psize -> PSIZE ( superexpression )','psize',4,'p_psize','parser.py',855),
  ('pclear -> PCLEAR ( )','pclear',3,'p_pclear','parser.py',867),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',872),
  ('statement -> variable_assignment SEMICOLON','statement',2,'p_statement','parser.py',873),
  ('statement -> superexpression SEMICOLON','statement',2,'p_statement','parser.py',874),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',875),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',876),
  ('statement -> return','statement',1,'p_statement','parser.py',877),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',878),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',879),
  ('statement -> geometry_statement SEMICOLON','statement',2,'p_statement','parser.py',880),
  ('return -> RETURN superexpression SEMICOLON','return',3,'p_return','parser.py',883),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',896),
]
