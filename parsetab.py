
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6D1B7FCE7B5C3F9B31F5E5EE8C57959E'
    
_lr_action_items = {'PSIZE':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,102,-127,-125,-122,-128,-129,-126,102,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'ELSE':([169,232,237,],[-97,-94,242,]),'CLT':([41,44,45,47,48,49,50,51,63,65,66,70,90,91,93,95,98,99,103,146,147,180,201,203,219,],[-67,-65,-69,-132,-61,-51,77,-66,-132,-58,-56,-132,-68,-71,-72,-57,-53,-50,-69,-64,-52,-62,-75,-74,-70,]),'VOID':([0,7,13,16,21,23,28,39,80,86,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[4,4,4,-7,-8,-10,-9,4,4,4,-127,-125,-122,-128,-129,-126,4,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'DOUBLE':([0,7,13,16,21,23,28,39,80,86,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[5,5,5,-7,-8,-10,-9,5,5,5,-127,-125,-122,-128,-129,-126,5,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'-':([41,44,45,47,48,49,51,63,65,66,70,90,91,93,95,103,146,180,201,203,219,],[-67,-65,-69,-132,-61,-51,-66,-132,-58,-56,96,-68,-71,-72,-57,-69,-64,-62,-75,-74,-70,]),'AND':([41,43,44,45,47,48,49,50,51,63,65,66,70,73,75,90,91,93,95,98,99,101,103,146,147,148,180,201,203,219,],[-67,62,-65,-69,-132,-61,-51,-132,-66,-132,-58,-56,-132,-40,-42,-68,-71,-72,-57,-53,-50,-49,-69,-64,-52,-41,-62,-75,-74,-70,]),'CSTDOUBLE':([16,21,23,28,35,46,59,60,62,64,67,68,69,71,72,74,76,77,78,79,80,92,96,97,100,113,114,115,117,126,136,137,141,144,145,149,150,151,153,154,155,157,161,163,164,166,167,169,170,171,172,184,188,190,210,212,214,218,220,221,226,228,232,234,237,240,241,245,],[-7,-8,-10,-9,44,-63,-39,44,-38,44,44,-60,-59,-48,-43,-45,44,-46,-47,-44,44,-73,-55,-54,44,-127,44,-125,-122,-128,-129,-126,44,44,44,44,44,44,-123,-91,-124,44,-89,44,44,44,44,-97,44,-130,44,-83,-131,44,44,44,44,44,44,-100,44,-101,-94,44,-132,-96,-92,-95,]),'HOME':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,110,-127,-125,-122,-128,-129,-126,110,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'MOVE':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,111,-127,-125,-122,-128,-129,-126,111,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'COMMA':([14,15,24,30,31,36,37,40,41,42,43,44,45,47,48,49,50,51,57,58,61,63,65,66,70,73,75,84,88,90,91,93,95,98,99,101,146,147,148,178,180,193,196,199,201,202,203,219,225,],[22,-12,-132,-14,-132,-16,-11,-13,-67,-15,-132,-65,-69,-132,-61,-51,-132,-66,86,-35,-37,-132,-58,-56,-132,-40,-42,-26,-36,-68,-71,-72,-57,-53,-50,-49,-64,-52,-41,-80,-62,210,212,214,-75,218,-74,-70,234,]),'LSQUARE':([15,24,45,63,103,198,],[-12,29,-69,92,151,151,]),')':([38,39,41,43,44,45,47,48,49,50,51,53,54,55,57,58,61,63,65,66,70,73,75,84,85,87,88,90,91,93,94,95,98,99,101,143,144,146,147,148,152,156,160,162,165,175,176,177,178,180,181,182,186,187,192,195,200,201,202,203,208,216,217,219,222,224,227,229,230,238,246,247,],[52,-132,-67,-132,-65,-69,-132,-61,-51,-132,-66,82,-19,-20,-132,-35,-37,-132,-58,-56,-132,-40,-42,-26,-25,-23,-36,-68,-71,-72,146,-57,-53,-50,-49,-24,-132,-64,-52,-41,-32,185,189,191,194,201,-78,-77,-80,-62,204,-33,206,207,209,211,215,-75,-132,-74,-90,-79,-82,-70,231,233,236,-81,-34,243,-88,248,]),'SETP':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,133,-127,-125,-122,-128,-129,-126,133,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'SCAN':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,112,-127,-125,-122,-128,-129,-126,112,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'ID':([3,4,5,6,8,16,20,21,22,23,28,35,46,56,59,60,62,64,67,68,69,71,72,74,76,77,78,79,80,92,96,97,100,113,114,115,117,126,136,137,141,144,145,149,150,151,153,154,155,157,158,161,163,164,166,167,168,169,170,171,172,184,188,190,210,212,214,218,220,221,226,228,232,234,237,240,241,244,245,],[15,-31,-29,-28,-30,-7,27,-8,15,-10,-9,45,-63,84,-39,45,-38,45,45,-60,-59,-48,-43,-45,45,-46,-47,-44,103,-73,-55,-54,45,-127,45,-125,-122,-128,-129,-126,103,45,45,45,45,45,-123,-91,-124,45,187,-89,45,45,45,45,198,-97,45,-130,45,-83,-131,45,45,45,45,45,45,-100,45,-101,-94,45,-132,-96,-92,198,-95,]),'*':([41,44,45,47,48,51,63,90,91,93,103,146,180,201,203,219,],[-67,-65,-69,69,-61,-66,-132,-68,-71,-72,-69,-64,-62,-75,-74,-70,]),'$end':([9,26,81,169,],[0,-1,-27,-97,]),'PCLEAR':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,116,-127,-125,-122,-128,-129,-126,116,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'RBRACKET':([16,21,23,28,80,105,113,115,117,126,132,136,137,141,153,154,155,169,171,173,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,-132,-99,-127,-125,-122,-128,169,-129,-126,-132,-123,-91,-124,-97,-130,-98,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'RSQUARE':([34,41,43,44,45,47,48,49,50,51,58,61,63,65,66,70,73,75,88,90,91,93,95,98,99,101,146,147,148,179,180,183,201,203,219,],[40,-67,-132,-65,-69,-132,-61,-51,-132,-66,-35,-37,-132,-58,-56,-132,-40,-42,-36,-68,-71,-72,-57,-53,-50,-49,-64,-52,-41,203,-62,205,-75,-74,-70,]),'PUP':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,123,-127,-125,-122,-128,-129,-126,123,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'ARC':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,122,-127,-125,-122,-128,-129,-126,122,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'CEQ':([41,44,45,47,48,49,50,51,63,65,66,70,90,91,93,95,98,99,103,146,147,180,201,203,219,],[-67,-65,-69,-132,-61,-51,72,-66,-132,-58,-56,-132,-68,-71,-72,-57,-53,-50,-69,-64,-52,-62,-75,-74,-70,]),'WHILE':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,119,-127,-125,-122,-128,-129,-126,119,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'PDOWN':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,120,-127,-125,-122,-128,-129,-126,120,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'+':([41,44,45,47,48,49,51,63,65,66,70,90,91,93,95,103,146,180,201,203,219,],[-67,-65,-69,-132,-61,-51,-66,-132,-58,-56,97,-68,-71,-72,-57,-69,-64,-62,-75,-74,-70,]),'LBRACKET':([52,82,106,142,209,223,231,242,248,],[80,-22,80,80,-93,80,-85,80,-84,]),'CGE':([41,44,45,47,48,49,50,51,63,65,66,70,90,91,93,95,98,99,103,146,147,180,201,203,219,],[-67,-65,-69,-132,-61,-51,74,-66,-132,-58,-56,-132,-68,-71,-72,-57,-53,-50,-69,-64,-52,-62,-75,-74,-70,]),'CSTSTRING':([16,21,23,28,35,46,59,60,62,64,67,68,69,71,72,74,76,77,78,79,80,92,96,97,100,113,114,115,117,126,136,137,141,144,145,149,150,151,153,154,155,157,161,163,164,166,167,169,170,171,172,184,188,190,210,212,214,218,220,221,226,228,232,234,237,240,241,245,],[-7,-8,-10,-9,41,-63,-39,41,-38,41,41,-60,-59,-48,-43,-45,41,-46,-47,-44,41,-73,-55,-54,41,-127,41,-125,-122,-128,-129,-126,41,41,41,41,41,41,-123,-91,-124,41,-89,41,41,41,41,-97,41,-130,41,-83,-131,41,41,41,41,41,41,-100,41,-101,-94,41,-132,-96,-92,-95,]),'CLE':([41,44,45,47,48,49,50,51,63,65,66,70,90,91,93,95,98,99,103,146,147,180,201,203,219,],[-67,-65,-69,-132,-61,-51,78,-66,-132,-58,-56,-132,-68,-71,-72,-57,-53,-50,-69,-64,-52,-62,-75,-74,-70,]),'INT':([0,7,13,16,21,23,28,39,80,86,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[6,6,6,-7,-8,-10,-9,6,6,6,-127,-125,-122,-128,-129,-126,6,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'CSTINT':([16,21,23,28,29,35,46,59,60,62,64,67,68,69,71,72,74,76,77,78,79,80,92,96,97,100,113,114,115,117,126,136,137,141,144,145,149,150,151,153,154,155,157,161,163,164,166,167,169,170,171,172,184,188,190,210,212,214,218,220,221,226,228,232,234,237,240,241,245,],[-7,-8,-10,-9,34,51,-63,-39,51,-38,51,51,-60,-59,-48,-43,-45,51,-46,-47,-44,51,-73,-55,-54,51,-127,51,-125,-122,-128,-129,-126,51,51,51,51,51,51,-123,-91,-124,51,-89,51,51,51,51,-97,51,-130,51,-83,-131,51,51,51,51,51,51,-100,51,-101,-94,51,-132,-96,-92,-95,]),'OR':([41,43,44,45,47,48,49,50,51,63,65,66,70,73,75,90,91,93,95,98,99,101,103,146,147,148,180,201,203,219,],[-67,59,-65,-69,-132,-61,-51,-132,-66,-132,-58,-56,-132,-40,-42,-68,-71,-72,-57,-53,-50,-49,-69,-64,-52,-41,-62,-75,-74,-70,]),'MAIN':([0,1,2,7,10,11,12,16,17,18,19,21,23,28,83,169,174,],[-132,-132,-4,-132,-6,-132,-2,-7,-3,-5,25,-8,-10,-9,-17,-97,-21,]),'ROTATE':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,128,-127,-125,-122,-128,-129,-126,128,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'RETURN':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,114,-127,-125,-122,-128,-129,-126,114,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'SEMICOLON':([14,15,24,30,31,36,37,40,41,42,43,44,45,47,48,49,50,51,58,61,63,65,66,70,73,75,88,90,91,93,95,98,99,101,103,104,107,108,109,118,124,125,127,129,134,135,138,140,146,147,148,152,159,180,182,185,189,191,194,197,201,203,204,206,207,211,213,215,219,230,233,235,236,239,243,],[23,-12,-132,-14,-132,-16,-11,-13,-67,-15,-132,-65,-69,-132,-61,-51,-132,-66,-35,-37,-132,-58,-56,-132,-40,-42,-36,-68,-71,-72,-57,-53,-50,-49,-69,153,155,-106,-111,-104,-107,-109,-108,-110,-102,-103,171,-105,-64,-52,-41,-32,188,-62,-33,-115,-121,-116,-117,-86,-75,-74,-120,-112,221,-113,226,228,-70,-34,-114,-87,-118,244,-119,]),'IF':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,121,-127,-125,-122,-128,-129,-126,121,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'FOR':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,131,-127,-125,-122,-128,-129,-126,131,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'CGT':([41,44,45,47,48,49,50,51,63,65,66,70,90,91,93,95,98,99,103,146,147,180,201,203,219,],[-67,-65,-69,-132,-61,-51,79,-66,-132,-58,-56,-132,-68,-71,-72,-57,-53,-50,-69,-64,-52,-62,-75,-74,-70,]),'(':([16,21,23,27,28,32,33,35,45,46,59,60,62,63,64,67,68,69,71,72,74,76,77,78,79,80,89,92,96,97,100,102,103,110,111,112,113,114,115,116,117,119,120,121,122,123,126,128,130,131,133,136,137,139,141,144,145,149,150,151,153,154,155,157,161,163,164,166,167,169,170,171,172,184,188,190,210,212,214,218,220,221,226,228,232,234,237,240,241,245,],[-7,-8,-10,-18,-9,38,39,46,-69,-63,-39,46,-38,-76,46,46,-60,-59,-48,-43,-45,46,-46,-47,-44,46,144,-73,-55,-54,46,149,-69,156,157,158,-127,46,-125,160,-122,161,162,163,164,165,-128,166,167,168,170,-129,-126,172,46,46,46,46,46,46,-123,-91,-124,46,-89,46,46,46,46,-97,46,-130,46,-83,-131,46,46,46,46,46,46,-100,46,-101,-94,46,-132,-96,-92,-95,]),'=':([15,24,30,31,40,103,198,205,],[-12,-132,-14,35,-13,150,150,220,]),'PCOLOR':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,130,-127,-125,-122,-128,-129,-126,130,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'STRING':([0,7,13,16,21,23,28,39,80,86,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[8,8,8,-7,-8,-10,-9,8,8,8,-127,-125,-122,-128,-129,-126,8,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'PRINT':([16,21,23,28,80,113,115,117,126,136,137,141,153,154,155,169,171,184,188,221,228,232,237,240,241,245,],[-7,-8,-10,-9,139,-127,-125,-122,-128,-129,-126,139,-123,-91,-124,-97,-130,-83,-131,-100,-101,-94,-132,-96,-92,-95,]),'/':([41,44,45,47,48,51,63,90,91,93,103,146,180,201,203,219,],[-67,-65,-69,68,-61,-66,-132,-68,-71,-72,-69,-64,-62,-75,-74,-70,]),'CNE':([41,44,45,47,48,49,50,51,63,65,66,70,90,91,93,95,98,99,103,146,147,180,201,203,219,],[-67,-65,-69,-132,-61,-51,71,-66,-132,-58,-56,-132,-68,-71,-72,-57,-53,-50,-69,-64,-52,-62,-75,-74,-70,]),'CHEESE':([25,],[32,]),'FUNC':([0,1,2,7,11,16,17,21,23,28,83,169,174,],[-132,13,-4,-132,13,-7,-3,-8,-10,-9,-17,-97,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([80,141,],[141,141,]),'function_call':([63,],[91,]),'id_or_array':([103,198,],[152,152,]),'more_args':([202,],[216,]),'variable_declaration3':([14,],[21,]),'geomOp':([47,],[67,]),'parameter_list':([39,86,],[54,143,]),'block_statement':([52,106,142,223,242,],[81,154,174,232,245,]),'seen_assignment1':([197,],[213,]),'loophead':([80,141,],[106,106,]),'superexpression':([35,60,64,80,114,141,145,149,150,151,157,163,164,166,167,170,172,190,210,212,214,220,226,234,],[42,88,94,107,159,107,179,181,182,183,186,192,193,195,196,199,200,208,224,225,227,230,235,238,]),'if_statement':([80,141,],[115,115,]),'compare':([50,],[73,]),'expression':([35,60,64,80,114,141,145,149,150,151,157,163,164,166,167,170,172,190,210,212,214,220,226,234,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'variable_assignment':([80,141,168,244,],[104,104,197,246,]),'arithOp':([70,],[100,]),'program':([0,],[9,]),'seen_RSQUARE':([203,],[219,]),'seen_condition_block':([232,],[237,]),'variable_declarator':([3,22,],[14,14,]),'seen_term':([49,],[70,]),'cst_expression2':([63,],[90,]),'pdown':([80,141,],[108,108,]),'seen_comp':([101,],[148,]),'seen_lpar':([46,],[64,]),'seen_while_LPAR':([161,],[190,]),'rotate':([80,141,],[135,135,]),'superexpression2':([43,],[58,]),'compare_symbols':([50,],[76,]),'type':([0,7,13,39,80,86,141,],[3,3,20,56,3,56,3,]),'seen_id':([15,],[24,]),'empty':([0,1,7,11,24,31,39,43,47,50,57,63,70,80,141,144,202,237,],[2,10,2,10,30,36,55,61,65,75,85,93,98,105,105,176,217,240,]),'parameter_list2':([57,],[87,]),'variable_declaration':([0,7,80,141,],[7,7,117,117,]),'term2':([47,],[66,]),'pup':([80,141,],[124,124,]),'numeric_expression2':([70,],[99,]),'term':([35,60,64,67,76,80,100,114,141,144,145,149,150,151,157,163,164,166,167,170,172,190,210,212,214,218,220,226,234,],[49,49,49,95,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'numeric_expression':([35,60,64,76,80,100,114,141,144,145,149,150,151,157,163,164,166,167,170,172,190,210,212,214,218,220,226,234,],[50,50,50,101,50,147,50,50,178,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,178,50,50,50,]),'seen_assignment2':([246,],[247,]),'seen_while_exp':([208,],[222,]),'seen_method_start':([82,],[142,]),'args':([144,],[175,]),'main_method':([19,],[26,]),'variable_declarator3':([31,],[37,]),'seen_function_id':([27,],[33,]),'arc':([80,141,],[118,118,]),'main_ahead':([12,],[19,]),'method_declaration2':([39,],[53,]),'seen_arg':([178,],[202,]),'variable_declarator2':([24,],[31,]),'pcolor':([80,141,],[125,125,]),'print_statement':([80,141,],[126,126,]),'return':([80,141,],[113,113,]),'seen_id_or_func':([45,103,],[63,63,]),'method_declaration3':([53,],[83,]),'setp':([80,141,],[127,127,]),'seen_LSQUARE':([92,],[145,]),'seen_func_id':([63,],[89,]),'seen_loop_block':([154,],[184,]),'psize':([80,141,],[129,129,]),'program2':([0,7,],[1,17,]),'block_statement2':([80,141,],[132,173,]),'andor':([43,],[60,]),'variable_declaration2':([3,22,],[16,28,]),'seen_rpar':([146,],[180,]),'pclear':([80,141,],[109,109,]),'move':([80,141,],[134,134,]),'parameter':([39,86,],[57,57,]),'seen_condition':([209,],[223,]),'factor':([35,60,64,67,76,80,100,114,141,144,145,149,150,151,157,163,164,166,167,170,172,190,210,212,214,218,220,226,234,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'read_statement':([80,141,],[136,136,]),'arg':([144,218,],[177,229,]),'loop_statement':([80,141,],[137,137,]),'geometry_statement':([80,141,],[138,138,]),'cst_expression':([35,60,64,67,76,80,100,114,141,144,145,149,150,151,157,163,164,166,167,170,172,190,210,212,214,218,220,226,234,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'if_statement2':([237,],[241,]),'home':([80,141,],[140,140,]),'program3':([1,11,],[12,18,]),'method_declaration':([1,11,],[11,11,]),'seen_for_exp':([235,],[239,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program2 program3 main_ahead main_method','program',4,'p_program','parser.py',31),
  ('main_ahead -> <empty>','main_ahead',0,'p_main_ahead','parser.py',36),
  ('program2 -> variable_declaration program2','program2',2,'p_program2','parser.py',48),
  ('program2 -> empty','program2',1,'p_program2','parser.py',49),
  ('program3 -> method_declaration program3','program3',2,'p_program3','parser.py',52),
  ('program3 -> empty','program3',1,'p_program3','parser.py',53),
  ('variable_declaration -> type variable_declaration2','variable_declaration',2,'p_variable_declaration','parser.py',56),
  ('variable_declaration2 -> variable_declarator variable_declaration3','variable_declaration2',2,'p_variable_declaration2','parser.py',59),
  ('variable_declaration3 -> COMMA variable_declaration2','variable_declaration3',2,'p_variable_declaration3','parser.py',62),
  ('variable_declaration3 -> SEMICOLON','variable_declaration3',1,'p_variable_declaration3','parser.py',63),
  ('variable_declarator -> ID seen_id variable_declarator2 variable_declarator3','variable_declarator',4,'p_variable_declarator','parser.py',66),
  ('seen_id -> <empty>','seen_id',0,'p_seen_id','parser.py',70),
  ('variable_declarator2 -> LSQUARE CSTINT RSQUARE','variable_declarator2',3,'p_variable_declarator2','parser.py',73),
  ('variable_declarator2 -> empty','variable_declarator2',1,'p_variable_declarator2','parser.py',74),
  ('variable_declarator3 -> = superexpression','variable_declarator3',2,'p_variable_declarator3','parser.py',82),
  ('variable_declarator3 -> empty','variable_declarator3',1,'p_variable_declarator3','parser.py',83),
  ('method_declaration -> FUNC type ID seen_function_id ( method_declaration2 method_declaration3','method_declaration',7,'p_method_declaration','parser.py',104),
  ('seen_function_id -> <empty>','seen_function_id',0,'p_seen_function_id','parser.py',110),
  ('method_declaration2 -> parameter_list','method_declaration2',1,'p_method_declaration2','parser.py',119),
  ('method_declaration2 -> empty','method_declaration2',1,'p_method_declaration2','parser.py',120),
  ('method_declaration3 -> ) seen_method_start block_statement','method_declaration3',3,'p_method_declaration3','parser.py',123),
  ('seen_method_start -> <empty>','seen_method_start',0,'p_seen_method_start','parser.py',126),
  ('parameter_list -> parameter parameter_list2','parameter_list',2,'p_parameter_list','parser.py',131),
  ('parameter_list2 -> COMMA parameter_list','parameter_list2',2,'p_parameter_list','parser.py',132),
  ('parameter_list2 -> empty','parameter_list2',1,'p_parameter_list','parser.py',133),
  ('parameter -> type ID','parameter',2,'p_parameter','parser.py',136),
  ('main_method -> MAIN CHEESE ( ) block_statement','main_method',5,'p_main_method','parser.py',143),
  ('type -> INT','type',1,'p_type','parser.py',146),
  ('type -> DOUBLE','type',1,'p_type','parser.py',147),
  ('type -> STRING','type',1,'p_type','parser.py',148),
  ('type -> VOID','type',1,'p_type','parser.py',149),
  ('variable_assignment -> ID id_or_array','variable_assignment',2,'p_variable_assignment','parser.py',155),
  ('id_or_array -> = superexpression','id_or_array',2,'p_id_or_array','parser.py',158),
  ('id_or_array -> LSQUARE superexpression RSQUARE = superexpression','id_or_array',5,'p_id_or_array','parser.py',159),
  ('superexpression -> expression superexpression2','superexpression',2,'p_superexpression','parser.py',181),
  ('superexpression2 -> andor superexpression','superexpression2',2,'p_superexpression2','parser.py',184),
  ('superexpression2 -> empty','superexpression2',1,'p_superexpression2','parser.py',185),
  ('andor -> AND','andor',1,'p_andor','parser.py',188),
  ('andor -> OR','andor',1,'p_andor','parser.py',189),
  ('expression -> numeric_expression compare','expression',2,'p_expression','parser.py',194),
  ('compare -> compare_symbols numeric_expression seen_comp','compare',3,'p_compare','parser.py',216),
  ('compare -> empty','compare',1,'p_compare','parser.py',217),
  ('compare_symbols -> CEQ','compare_symbols',1,'p_compare_symbols','parser.py',220),
  ('compare_symbols -> CGT','compare_symbols',1,'p_compare_symbols','parser.py',221),
  ('compare_symbols -> CGE','compare_symbols',1,'p_compare_symbols','parser.py',222),
  ('compare_symbols -> CLT','compare_symbols',1,'p_compare_symbols','parser.py',223),
  ('compare_symbols -> CLE','compare_symbols',1,'p_compare_symbols','parser.py',224),
  ('compare_symbols -> CNE','compare_symbols',1,'p_compare_symbols','parser.py',225),
  ('seen_comp -> <empty>','seen_comp',0,'p_seen_comp','parser.py',230),
  ('numeric_expression -> term seen_term numeric_expression2','numeric_expression',3,'p_numeric_expression','parser.py',256),
  ('seen_term -> <empty>','seen_term',0,'p_seen_term','parser.py',259),
  ('numeric_expression2 -> arithOp numeric_expression','numeric_expression2',2,'p_numeric_expression2','parser.py',313),
  ('numeric_expression2 -> empty','numeric_expression2',1,'p_numeric_expression2','parser.py',314),
  ('arithOp -> +','arithOp',1,'p_arithOp','parser.py',317),
  ('arithOp -> -','arithOp',1,'p_arithOp','parser.py',318),
  ('term -> factor term2','term',2,'p_term','parser.py',323),
  ('term2 -> geomOp term','term2',2,'p_term2','parser.py',326),
  ('term2 -> empty','term2',1,'p_term2','parser.py',327),
  ('geomOp -> *','geomOp',1,'p_geomOp','parser.py',330),
  ('geomOp -> /','geomOp',1,'p_geomOp','parser.py',331),
  ('factor -> cst_expression','factor',1,'p_factor','parser.py',336),
  ('factor -> ( seen_lpar superexpression ) seen_rpar','factor',5,'p_factor','parser.py',337),
  ('seen_lpar -> <empty>','seen_lpar',0,'p_seen_lpar','parser.py',392),
  ('seen_rpar -> <empty>','seen_rpar',0,'p_seen_rpar','parser.py',397),
  ('cst_expression -> CSTDOUBLE','cst_expression',1,'p_cst_expression','parser.py',402),
  ('cst_expression -> CSTINT','cst_expression',1,'p_cst_expression','parser.py',403),
  ('cst_expression -> CSTSTRING','cst_expression',1,'p_cst_expression','parser.py',404),
  ('cst_expression -> ID seen_id_or_func cst_expression2','cst_expression',3,'p_cst_expression','parser.py',405),
  ('seen_id_or_func -> <empty>','seen_id_or_func',0,'p_seen_id_or_func','parser.py',418),
  ('cst_expression2 -> LSQUARE seen_LSQUARE superexpression RSQUARE seen_RSQUARE','cst_expression2',5,'p_cst_expression2','parser.py',424),
  ('cst_expression2 -> function_call','cst_expression2',1,'p_cst_expression2','parser.py',425),
  ('cst_expression2 -> empty','cst_expression2',1,'p_cst_expression2','parser.py',426),
  ('seen_LSQUARE -> <empty>','seen_LSQUARE',0,'p_seen_LSQUARE','parser.py',456),
  ('seen_RSQUARE -> <empty>','seen_RSQUARE',0,'p_seen_RSQUARE','parser.py',461),
  ('function_call -> seen_func_id ( args )','function_call',4,'p_function_call','parser.py',466),
  ('seen_func_id -> <empty>','seen_func_id',0,'p_seen_func_id','parser.py',478),
  ('args -> arg','args',1,'p_args','parser.py',496),
  ('args -> empty','args',1,'p_args','parser.py',497),
  ('arg -> numeric_expression seen_arg more_args','arg',3,'p_arg','parser.py',500),
  ('seen_arg -> <empty>','seen_arg',0,'p_seen_arg','parser.py',503),
  ('more_args -> COMMA arg','more_args',2,'p_more_args','parser.py',530),
  ('more_args -> empty','more_args',1,'p_more_args','parser.py',531),
  ('loop_statement -> loophead block_statement seen_loop_block','loop_statement',3,'p_loop_statement','parser.py',534),
  ('loophead -> FOR ( variable_assignment seen_assignment1 SEMICOLON superexpression seen_for_exp SEMICOLON variable_assignment seen_assignment2 )','loophead',11,'p_loophead','parser.py',540),
  ('loophead -> WHILE ( seen_while_LPAR superexpression seen_while_exp )','loophead',6,'p_loophead','parser.py',541),
  ('seen_assignment1 -> <empty>','seen_assignment1',0,'p_seen_assignment1','parser.py',544),
  ('seen_for_exp -> <empty>','seen_for_exp',0,'p_seen_for_exp','parser.py',549),
  ('seen_assignment2 -> <empty>','seen_assignment2',0,'p_seen_assignment2','parser.py',570),
  ('seen_while_LPAR -> <empty>','seen_while_LPAR',0,'p_seen_while_LPAR','parser.py',581),
  ('seen_while_exp -> <empty>','seen_while_exp',0,'p_seen_while_exp','parser.py',586),
  ('seen_loop_block -> <empty>','seen_loop_block',0,'p_seen_loop_block','parser.py',600),
  ('if_statement -> IF ( superexpression ) seen_condition block_statement seen_condition_block if_statement2','if_statement',8,'p_if_statement','parser.py',606),
  ('seen_condition -> <empty>','seen_condition',0,'p_seen_condition','parser.py',612),
  ('seen_condition_block -> <empty>','seen_condition_block',0,'p_seen_condition_block','parser.py',624),
  ('if_statement2 -> ELSE block_statement','if_statement2',2,'p_if_statement2','parser.py',632),
  ('if_statement2 -> empty','if_statement2',1,'p_if_statement2','parser.py',633),
  ('block_statement -> LBRACKET block_statement2 RBRACKET','block_statement',3,'p_block_statement','parser.py',636),
  ('block_statement2 -> statement block_statement2','block_statement2',2,'p_block_statement','parser.py',637),
  ('block_statement2 -> empty','block_statement2',1,'p_block_statement','parser.py',638),
  ('read_statement -> SCAN ( ID ) SEMICOLON','read_statement',5,'p_read_statement','parser.py',641),
  ('print_statement -> PRINT ( superexpression ) SEMICOLON','print_statement',5,'p_print_statement','parser.py',652),
  ('geometry_statement -> move','geometry_statement',1,'p_geometry_statement','parser.py',658),
  ('geometry_statement -> rotate','geometry_statement',1,'p_geometry_statement','parser.py',659),
  ('geometry_statement -> arc','geometry_statement',1,'p_geometry_statement','parser.py',660),
  ('geometry_statement -> home','geometry_statement',1,'p_geometry_statement','parser.py',661),
  ('geometry_statement -> pdown','geometry_statement',1,'p_geometry_statement','parser.py',662),
  ('geometry_statement -> pup','geometry_statement',1,'p_geometry_statement','parser.py',663),
  ('geometry_statement -> setp','geometry_statement',1,'p_geometry_statement','parser.py',664),
  ('geometry_statement -> pcolor','geometry_statement',1,'p_geometry_statement','parser.py',665),
  ('geometry_statement -> psize','geometry_statement',1,'p_geometry_statement','parser.py',666),
  ('geometry_statement -> pclear','geometry_statement',1,'p_geometry_statement','parser.py',667),
  ('move -> MOVE ( superexpression )','move',4,'p_move','parser.py',670),
  ('rotate -> ROTATE ( superexpression )','rotate',4,'p_rotate','parser.py',681),
  ('arc -> ARC ( superexpression COMMA superexpression )','arc',6,'p_arc','parser.py',692),
  ('home -> HOME ( )','home',3,'p_home','parser.py',704),
  ('pdown -> PDOWN ( )','pdown',3,'p_pdown','parser.py',709),
  ('pup -> PUP ( )','pup',3,'p_pup','parser.py',714),
  ('setp -> SETP ( superexpression COMMA superexpression )','setp',6,'p_setp','parser.py',719),
  ('pcolor -> PCOLOR ( superexpression COMMA superexpression COMMA superexpression )','pcolor',8,'p_pcolor','parser.py',731),
  ('psize -> PSIZE ( superexpression )','psize',4,'p_psize','parser.py',744),
  ('pclear -> PCLEAR ( )','pclear',3,'p_pclear','parser.py',755),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',760),
  ('statement -> variable_assignment SEMICOLON','statement',2,'p_statement','parser.py',761),
  ('statement -> superexpression SEMICOLON','statement',2,'p_statement','parser.py',762),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',763),
  ('statement -> loop_statement','statement',1,'p_statement','parser.py',764),
  ('statement -> return','statement',1,'p_statement','parser.py',765),
  ('statement -> print_statement','statement',1,'p_statement','parser.py',766),
  ('statement -> read_statement','statement',1,'p_statement','parser.py',767),
  ('statement -> geometry_statement SEMICOLON','statement',2,'p_statement','parser.py',768),
  ('return -> RETURN superexpression SEMICOLON','return',3,'p_return','parser.py',771),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',784),
]
